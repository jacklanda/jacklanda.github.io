<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">消忧录</title>
  <id>https://lyyl.me/</id>
  <updated>2022-07-16T00:00:00Z</updated>
  <link href="https://lyyl.me/" />
  <link href="https://lyyl.me/" rel="self" />
  <subtitle type="text">消忧录 Atom Feed</subtitle>
  <generator>Werkzeug</generator>
  <entry xml:base="https://lyyl.me/">
    <title type="text">咖啡馆</title>
    <id>https://lyyl.me/posts/cafe</id>
    <updated>2019-01-28T00:00:00Z</updated>
    <published>2019-01-28T00:00:00Z</published>
    <link href="https://lyyl.me/posts/cafe" />
    <author>
      <name>YangLiu</name>
    </author>
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;
  &lt;title&gt;-&lt;/title&gt;
  &lt;style&gt;
    html {
      line-height: 1.5;
      font-family: Georgia, serif;
      font-size: 20px;
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      word-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 1em;
      }
    }
    @media print {
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li &gt; ol, li &gt; ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
      font-size: 85%;
      margin: 0;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;&lt;i&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;阿侑说&lt;/i&gt;&lt;br&gt; &lt;i&gt;咖啡馆就是生活，&lt;/i&gt;&lt;br&gt; &lt;i&gt;那里有&lt;/i&gt;&lt;br&gt; &lt;i&gt;粉象，玛奇朵和黑森林蛋糕。&lt;/i&gt;&lt;br&gt; &lt;i&gt;当起子撬开瓶盖儿，&lt;/i&gt;&lt;br&gt; &lt;i&gt;吧台前的卡门，&lt;/i&gt;&lt;br&gt; &lt;i&gt;在混杂着大麦、卷烟与芝士的味道里，&lt;/i&gt;&lt;br&gt; &lt;i&gt;啜了一口酒，&lt;/i&gt;&lt;br&gt; &lt;i&gt;哼起哈巴涅拉。&lt;/i&gt;&lt;br&gt; &lt;i&gt;躲在旮旯的教皇，&lt;/i&gt;&lt;br&gt; &lt;i&gt;拿起银制调羹，&lt;/i&gt;&lt;br&gt; &lt;i&gt;吮着最上层的奶油，&lt;/i&gt;&lt;br&gt; &lt;i&gt;就像在每个礼拜日的晚上，&lt;/i&gt;&lt;br&gt; &lt;i&gt;舔舐他的情妇的乳尖。&lt;/i&gt;&lt;br&gt; &lt;i&gt;那个忙活的老年青，&lt;/i&gt;&lt;br&gt; &lt;i&gt;阿侑，&lt;/i&gt;&lt;br&gt; &lt;i&gt;是这间馆子的主人，他兀自舀着蛋液，&lt;/i&gt;&lt;br&gt; &lt;i&gt;只待把樱桃酱点上，&lt;/i&gt;&lt;br&gt; &lt;i&gt;那块儿可人的点心便要摆上柜台。&lt;/i&gt;&lt;br&gt; &lt;i&gt;他似乎在等着什么，&lt;/i&gt;&lt;br&gt; &lt;i&gt;也许是一道未竟的工序，&lt;/i&gt;&lt;br&gt; &lt;i&gt;也许是一个人。&lt;/i&gt;&lt;br&gt; &lt;i&gt;他希望大家能走进他的馆子里，&lt;/i&gt;&lt;br&gt; &lt;i&gt;因为咖啡馆&lt;/i&gt;&lt;br&gt; &lt;i&gt;是生活，&lt;/i&gt;&lt;br&gt; &lt;i&gt;是自由。&lt;/i&gt;&lt;br&gt; &lt;i&gt;即便至今，&lt;/i&gt;&lt;br&gt; &lt;i&gt;自由的清泉，&lt;/i&gt;&lt;br&gt; &lt;i&gt;仍未奔流到&lt;/i&gt;&lt;br&gt; &lt;i&gt;人们干渴的双唇上。&lt;/i&gt;&lt;br&gt;&lt;/p&gt;
&lt;p align=&quot;right&quot;&gt;
2019/1/28
&lt;/p&gt;
&lt;p align=&quot;right&quot;&gt;
于喵先生咖啡馆
&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
  </entry>
  <entry xml:base="https://lyyl.me/">
    <title type="text">Singleton 单例模式</title>
    <id>https://lyyl.me/posts/singleton</id>
    <updated>2021-08-14T00:00:00Z</updated>
    <published>2021-08-14T00:00:00Z</published>
    <link href="https://lyyl.me/posts/singleton" />
    <author>
      <name>YangLiu</name>
    </author>
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;
  &lt;title&gt;-&lt;/title&gt;
  &lt;style&gt;
    html {
      line-height: 1.5;
      font-family: Georgia, serif;
      font-size: 20px;
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      word-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 1em;
      }
    }
    @media print {
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li &gt; ol, li &gt; ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
      font-size: 85%;
      margin: 0;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
    pre &gt; code.sourceCode { white-space: pre; position: relative; }
    pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }
    pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }
    .sourceCode { overflow: visible; }
    code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }
    div.sourceCode { margin: 1em 0; }
    pre.sourceCode { margin: 0; }
    @media screen {
    div.sourceCode { overflow: auto; }
    }
    @media print {
    pre &gt; code.sourceCode { white-space: pre-wrap; }
    pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }
    }
    pre.numberSource code
      { counter-reset: source-line 0; }
    pre.numberSource code &gt; span
      { position: relative; left: -4em; counter-increment: source-line; }
    pre.numberSource code &gt; span &gt; a:first-child::before
      { content: counter(source-line);
        position: relative; left: -1em; text-align: right; vertical-align: baseline;
        border: none; display: inline-block;
        -webkit-touch-callout: none; -webkit-user-select: none;
        -khtml-user-select: none; -moz-user-select: none;
        -ms-user-select: none; user-select: none;
        padding: 0 4px; width: 4em;
        color: #aaaaaa;
      }
    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
    div.sourceCode
      {   }
    @media screen {
    pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }
    }
    code span.al { color: #ff0000; font-weight: bold; } /* Alert */
    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
    code span.at { color: #7d9029; } /* Attribute */
    code span.bn { color: #40a070; } /* BaseN */
    code span.bu { } /* BuiltIn */
    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
    code span.ch { color: #4070a0; } /* Char */
    code span.cn { color: #880000; } /* Constant */
    code span.co { color: #60a0b0; font-style: italic; } /* Comment */
    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
    code span.do { color: #ba2121; font-style: italic; } /* Documentation */
    code span.dt { color: #902000; } /* DataType */
    code span.dv { color: #40a070; } /* DecVal */
    code span.er { color: #ff0000; font-weight: bold; } /* Error */
    code span.ex { } /* Extension */
    code span.fl { color: #40a070; } /* Float */
    code span.fu { color: #06287e; } /* Function */
    code span.im { } /* Import */
    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
    code span.kw { color: #007020; font-weight: bold; } /* Keyword */
    code span.op { color: #666666; } /* Operator */
    code span.ot { color: #007020; } /* Other */
    code span.pp { color: #bc7a00; } /* Preprocessor */
    code span.sc { color: #4070a0; } /* SpecialChar */
    code span.ss { color: #bb6688; } /* SpecialString */
    code span.st { color: #4070a0; } /* String */
    code span.va { color: #19177c; } /* Variable */
    code span.vs { color: #4070a0; } /* VerbatimString */
    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h2 id=&quot;简介&quot;&gt;简介&lt;/h2&gt;
&lt;p&gt;单例模式(Singleton)，是一种常用的软件设计模式，顾名思义，“单例”意味着单例对象的类必须保证只有一个实例存在，引用单例模式设计的软件称为单例应用。&lt;/p&gt;
&lt;h2 id=&quot;使用情景&quot;&gt;使用情景&lt;/h2&gt;
&lt;p&gt;在单例模式适用的许多情况下，整个系统只需要且只应该拥有一个全局对象。比如我们需要建立从客户端到Redis数据库的Socket连接，为此设计了一个&lt;code&gt;RedisConn&lt;/code&gt;类，类封装了Redis的鉴权/读写等方法，假设系统中存在多个不同进程涉及Redis数据库的访问，需要反复地调用该类以创建连接对象，此时的系统内部就出现了多个实例，这无疑是一种不必要的开销（即便目前的Redis集群允许的连接数高达10w+）。好在我们现在学习了单例模式，在类似这样的情境下，就可以应用单例控制系统在任一时刻只存在一个RedisConn连接实例，从而减少由于频繁创建和销毁对象造成的资源浪费。&lt;/p&gt;
&lt;p&gt;一般来说，适合使用单例模式的包含资源共享的情况(e.g. Log File, App Config)；控制资源的情况(e.g. Thread Pool, OS FileSystem)。&lt;/p&gt;
&lt;h2 id=&quot;实现思路&quot;&gt;实现思路&lt;/h2&gt;
&lt;p&gt;单例模式要求实现一个获取类唯一实例的静态方法&lt;code&gt;getInstance&lt;/code&gt;，不论调用获取实例的方法多少次，每次调用都只能返回该类对象的同一个引用（即永远指向同一个实例）。&lt;/p&gt;
&lt;p&gt;单例模式有“饿”与“懒”之分，饿单例模式是指类加载时会自动实例化一个对象给自己的引用；懒单例模式是指仅在调用取得实例的方法(e.g. getInstance)时才会实例化对象。&lt;/p&gt;
&lt;p&gt;饿单例模式由于在类加载的同时就创建好了一个静态对象，调用时反映速度快，且多线程安全，其缺点在于资源的效率不高，因为getInstance方法可能从未被执行过。&lt;/p&gt;
&lt;p&gt;懒单例模式执行效率高，不执行getInstance就不会调用构造函数进行实例化操作。但缺点在于多线程环境下须考虑线程安全，需要加锁实现多线程同步，同步的开销较大。&lt;/p&gt;
&lt;p&gt;一般推荐采用饿汉式or局部静态变量式的懒单例实现。&lt;/p&gt;
&lt;h3 id=&quot;三种实现方式&quot;&gt;三种实现方式&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&quot;header&quot;&gt;
&lt;th&gt;实现方式&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td&gt;饿汉式&lt;/td&gt;
&lt;td&gt;若被其它编译单元的全局对象/静态对象使用, 有可能存在初始化顺序问题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td&gt;懒汉式&lt;/td&gt;
&lt;td&gt;加锁影响性能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td&gt;局部静态对象&lt;/td&gt;
&lt;td&gt;c++11以后较新版本的编译器才支持，推荐使用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;make-hands-dirty&quot;&gt;Make Hands Dirty&lt;/h2&gt;
&lt;p&gt;饿单例的实现如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;at&quot;&gt;static&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; getInstance&lt;span class=&quot;op&quot;&gt;(){&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; _instance&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;at&quot;&gt;static&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; _instance&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;_instance &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-13&quot;&gt;&lt;a href=&quot;#cb1-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; main&lt;span class=&quot;op&quot;&gt;(){&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-14&quot;&gt;&lt;a href=&quot;#cb1-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; obj1 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;getInstance&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-15&quot;&gt;&lt;a href=&quot;#cb1-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;obj1&amp;#39;s addr is: &amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; obj1 &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-16&quot;&gt;&lt;a href=&quot;#cb1-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-17&quot;&gt;&lt;a href=&quot;#cb1-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; obj2 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;getInstance&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-18&quot;&gt;&lt;a href=&quot;#cb1-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;obj2&amp;#39;s addr is: &amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; obj2 &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-19&quot;&gt;&lt;a href=&quot;#cb1-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-20&quot;&gt;&lt;a href=&quot;#cb1-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-21&quot;&gt;&lt;a href=&quot;#cb1-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;普通懒单例的实现如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;at&quot;&gt;static&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; getInstance&lt;span class=&quot;op&quot;&gt;(){&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;co&quot;&gt;// 判断_instance是否指向一个已存在的实例：&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;co&quot;&gt;// 若存在，则直接返回这个已存在的实例，&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;co&quot;&gt;// 若不存在，则调用构造函数创建一个实例并返回。&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;_instance &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-10&quot;&gt;&lt;a href=&quot;#cb2-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            _instance &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-11&quot;&gt;&lt;a href=&quot;#cb2-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; _instance&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-12&quot;&gt;&lt;a href=&quot;#cb2-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-13&quot;&gt;&lt;a href=&quot;#cb2-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-14&quot;&gt;&lt;a href=&quot;#cb2-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;at&quot;&gt;static&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; _instance&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;// 静态类成员在定义时是不能初始化的&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-15&quot;&gt;&lt;a href=&quot;#cb2-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-16&quot;&gt;&lt;a href=&quot;#cb2-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;_instance &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-17&quot;&gt;&lt;a href=&quot;#cb2-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-18&quot;&gt;&lt;a href=&quot;#cb2-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; main&lt;span class=&quot;op&quot;&gt;(){&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-19&quot;&gt;&lt;a href=&quot;#cb2-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; obj1 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;getInstance&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-20&quot;&gt;&lt;a href=&quot;#cb2-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;obj1&amp;#39;s addr is: &amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; obj1 &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-21&quot;&gt;&lt;a href=&quot;#cb2-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-22&quot;&gt;&lt;a href=&quot;#cb2-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; obj2 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;getInstance&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-23&quot;&gt;&lt;a href=&quot;#cb2-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;obj2&amp;#39;s addr is: &amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; obj2 &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-24&quot;&gt;&lt;a href=&quot;#cb2-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-25&quot;&gt;&lt;a href=&quot;#cb2-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;delete&lt;/span&gt; obj1&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-26&quot;&gt;&lt;a href=&quot;#cb2-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-27&quot;&gt;&lt;a href=&quot;#cb2-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-28&quot;&gt;&lt;a href=&quot;#cb2-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;推广一下，我们也可以设置一个阈值，允许类拥有可变数目个实例，实现一种可变数目的懒“单”例&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;constexpr&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; InstanceLimit &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;at&quot;&gt;static&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; getInstance&lt;span class=&quot;op&quot;&gt;(){&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-8&quot;&gt;&lt;a href=&quot;#cb3-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;_instance &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;nullptr&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;||&lt;/span&gt; _count &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; InstanceLimit&lt;span class=&quot;op&quot;&gt;){&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-9&quot;&gt;&lt;a href=&quot;#cb3-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            _instance &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-10&quot;&gt;&lt;a href=&quot;#cb3-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            _instance_array&lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;_count&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; _instance&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-11&quot;&gt;&lt;a href=&quot;#cb3-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;_count&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-12&quot;&gt;&lt;a href=&quot;#cb3-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; _instance&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-13&quot;&gt;&lt;a href=&quot;#cb3-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-14&quot;&gt;&lt;a href=&quot;#cb3-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; _instance_array&lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;// 若超过设置的实例上限，则返回创建的第一个实例&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-15&quot;&gt;&lt;a href=&quot;#cb3-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-16&quot;&gt;&lt;a href=&quot;#cb3-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-17&quot;&gt;&lt;a href=&quot;#cb3-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;at&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; _count&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-18&quot;&gt;&lt;a href=&quot;#cb3-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;at&quot;&gt;static&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; _instance&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;// 类成员在定义时是不能初始化的&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-19&quot;&gt;&lt;a href=&quot;#cb3-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;at&quot;&gt;static&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; _instance_array&lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;InstanceLimit&lt;span class=&quot;op&quot;&gt;];&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-20&quot;&gt;&lt;a href=&quot;#cb3-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-21&quot;&gt;&lt;a href=&quot;#cb3-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;_count &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-22&quot;&gt;&lt;a href=&quot;#cb3-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;_instance &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-23&quot;&gt;&lt;a href=&quot;#cb3-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;_instance_array&lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;InstanceLimit&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-24&quot;&gt;&lt;a href=&quot;#cb3-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-25&quot;&gt;&lt;a href=&quot;#cb3-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; main&lt;span class=&quot;op&quot;&gt;(){&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-26&quot;&gt;&lt;a href=&quot;#cb3-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; obj1 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;getInstance&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-27&quot;&gt;&lt;a href=&quot;#cb3-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;obj1&amp;#39;s addr is: &amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; obj1 &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-28&quot;&gt;&lt;a href=&quot;#cb3-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-29&quot;&gt;&lt;a href=&quot;#cb3-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; obj2 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;getInstance&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-30&quot;&gt;&lt;a href=&quot;#cb3-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;obj2&amp;#39;s addr is: &amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; obj2 &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-31&quot;&gt;&lt;a href=&quot;#cb3-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-32&quot;&gt;&lt;a href=&quot;#cb3-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; obj3 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;getInstance&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-33&quot;&gt;&lt;a href=&quot;#cb3-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;obj3&amp;#39;s addr is: &amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; obj3 &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-34&quot;&gt;&lt;a href=&quot;#cb3-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-35&quot;&gt;&lt;a href=&quot;#cb3-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-36&quot;&gt;&lt;a href=&quot;#cb3-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;考虑到线程安全，我们可以通过引入一个局部静态变量的方式，简捷地实现懒单例：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-5&quot;&gt;&lt;a href=&quot;#cb4-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;at&quot;&gt;static&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; getInstance&lt;span class=&quot;op&quot;&gt;(){&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-6&quot;&gt;&lt;a href=&quot;#cb4-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;co&quot;&gt;// 引入一个局部静态变量&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-7&quot;&gt;&lt;a href=&quot;#cb4-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;at&quot;&gt;static&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; _instance &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;new&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-8&quot;&gt;&lt;a href=&quot;#cb4-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; _instance&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-9&quot;&gt;&lt;a href=&quot;#cb4-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-10&quot;&gt;&lt;a href=&quot;#cb4-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-11&quot;&gt;&lt;a href=&quot;#cb4-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-12&quot;&gt;&lt;a href=&quot;#cb4-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; main&lt;span class=&quot;op&quot;&gt;(){&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-13&quot;&gt;&lt;a href=&quot;#cb4-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; obj1 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;getInstance&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-14&quot;&gt;&lt;a href=&quot;#cb4-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;obj1&amp;#39;s addr is: &amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; obj1 &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-15&quot;&gt;&lt;a href=&quot;#cb4-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-16&quot;&gt;&lt;a href=&quot;#cb4-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Singleton&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; obj2 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; Singleton&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;getInstance&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-17&quot;&gt;&lt;a href=&quot;#cb4-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;obj2&amp;#39;s addr is: &amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; obj2 &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-18&quot;&gt;&lt;a href=&quot;#cb4-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-19&quot;&gt;&lt;a href=&quot;#cb4-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-20&quot;&gt;&lt;a href=&quot;#cb4-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;优点：
&lt;ul&gt;
&lt;li&gt;在单例模式中，活动的单例只有一个实例，对单例类的所有实例化得到的都是相同的一个实例。这样就 防止其它对象对自己的实例化，确保所有的对象都访问一个实例；&lt;/li&gt;
&lt;li&gt;提供了对唯一实例的受控访问，避免对共享资源的多重占用；&lt;/li&gt;
&lt;li&gt;由于在系统内存中只存在一个对象，因此可以节约系统资源，当需要频繁创建和销毁的对象时引入单例模式可以提高系统的性能；&lt;/li&gt;
&lt;li&gt;允许可变数目的实例；&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;缺点:
&lt;ul&gt;
&lt;li&gt;不适用于变化的对象，如果同一类型的对象总是要在不同的用例场景发生变化，单例就会引起数据的错误，不能保存彼此的状态；&lt;/li&gt;
&lt;li&gt;滥用单例将带来一些负面问题，如为了节省资源将数据库连接池对象设计为的单例类，可能会导致共享连接池对象的程序过多而出现连接池溢出；如果实例化的对象长时间不被使用，系统(Java)会认为是垃圾而被回收，将导致对象状态的丢失。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;适用场景
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;频繁访问数据库或文件的对象。&lt;/li&gt;
&lt;li&gt;需要频繁实例化然后销毁的对象；&lt;/li&gt;
&lt;li&gt;创建对象时耗时过多或者耗资源过多，但又经常用到的对象；&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
  </entry>
  <entry xml:base="https://lyyl.me/">
    <title type="text">系统设计入门-概论</title>
    <id>https://lyyl.me/posts/SystemDesignForBeginner_00</id>
    <updated>2021-04-10T00:00:00Z</updated>
    <published>2021-04-10T00:00:00Z</published>
    <link href="https://lyyl.me/posts/SystemDesignForBeginner_00" />
    <author>
      <name>YangLiu</name>
    </author>
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;
  &lt;title&gt;-&lt;/title&gt;
  &lt;style&gt;
    html {
      line-height: 1.5;
      font-family: Georgia, serif;
      font-size: 20px;
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      word-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 1em;
      }
    }
    @media print {
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li &gt; ol, li &gt; ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
      font-size: 85%;
      margin: 0;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h2 id=&quot;toc告诉我最好有个小标题&quot;&gt;TOC告诉我最好有个小标题 :)&lt;/h2&gt;
&lt;p&gt;嗯，又是好几个月没更文章了，这期间做了些力扣题，除去毕设和实习上一些杂七杂八的事情，真正静下心来学习的时间还是很少。不过，目前给自己立的一个最新的Flag是学习系统设计方面的知识。&lt;/p&gt;
&lt;p&gt;想学的原因是自己毕竟用过了 &lt;em&gt;MongoDB, Redis, CDN&lt;/em&gt; 这些现代应用系统内常常会涉及到的组件，此外在之前折腾博客的时候也已经简单接触过了域名服务、缓存这样很有实用性的东西。也算在垒土之上，学着试着，看看能不能筑几层台。&lt;/p&gt;
&lt;h3 id=&quot;none&quot;&gt;None&lt;/h3&gt;
&lt;p&gt;这里先放一张表，表里记录了常见设备的时间性能（在想Latency在这里能不能给译作 —— 延迟？或者 —— 开销？）。这张表搬自有名的 &lt;a href=&quot;https://gist.github.com/jboner/2841832#file-latency-txt-L16&quot;&gt;&lt;em&gt;Latency Numbers Every Programmer Should Know&lt;/em&gt;&lt;/a&gt;，意译过来就是“程序员必知的设备开销量级”&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&quot;header&quot;&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;开销&lt;/th&gt;
&lt;th&gt;天文质量&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td&gt;L1 缓存引用&lt;/td&gt;
&lt;td&gt;0.5 ns&lt;/td&gt;
&lt;td&gt;1/2个地球或5个火星&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td&gt;分支预测错误&lt;/td&gt;
&lt;td&gt;5 ns&lt;/td&gt;
&lt;td&gt;5个地球&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td&gt;L2 缓存引用&lt;/td&gt;
&lt;td&gt;7 ns&lt;/td&gt;
&lt;td&gt;7个地球&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td&gt;互斥锁·加/解锁&lt;/td&gt;
&lt;td&gt;25 ns&lt;/td&gt;
&lt;td&gt;天王星 + 海王星&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td&gt;主存的引用&lt;/td&gt;
&lt;td&gt;100 ns&lt;/td&gt;
&lt;td&gt;土星 + 5个地球&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td&gt;在1Gbps带宽下以Zippy算法压缩1K字节&lt;/td&gt;
&lt;td&gt;3000 ns&lt;/td&gt;
&lt;td&gt;10个木星&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td&gt;在1Gbps带宽下发送1K字节&lt;/td&gt;
&lt;td&gt;10,000 ns&lt;/td&gt;
&lt;td&gt;全太阳系行星质量的20倍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td&gt;从固态硬盘中随机读取4K字节&lt;/td&gt;
&lt;td&gt;150,000 ns&lt;/td&gt;
&lt;td&gt;1.6倍的红矮星 Wolf 359&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td&gt;从内存中顺序读取1M字节&lt;/td&gt;
&lt;td&gt;250,000 ns&lt;/td&gt;
&lt;td&gt;四分之一个太阳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td&gt;从固态硬盘中顺序读取1M字节&lt;/td&gt;
&lt;td&gt;1,000,000 ns = 1ms&lt;/td&gt;
&lt;td&gt;一个太阳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td&gt;磁盘的seek操作&lt;/td&gt;
&lt;td&gt;10,000,000 ns = 10 ms&lt;/td&gt;
&lt;td&gt;10个太阳&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td&gt;从磁盘上顺序读取1M字节&lt;/td&gt;
&lt;td&gt;20,000,000 ns = 20 ms&lt;/td&gt;
&lt;td&gt;一个红巨星 R136a2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td&gt;一个网络报文从美国加州到荷兰的往返时间&lt;/td&gt;
&lt;td&gt;150,000,000 ns = 150 ms&lt;/td&gt;
&lt;td&gt;一个中等大小的黑洞&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;当然，上面这张表是2012年时候的数据，作为补充，这里有份&lt;a href=&quot;https://github.com/sirupsen/napkin-math#numbers&quot;&gt;17年的测试数据&lt;/a&gt;。根据摩尔定律（虽然它的斜率越来越平缓了），现在的内存和SSD等硬件的读写性能远非昔日能比【这不，马斯克的 starlink 也要上线了么，声称其全球平均时延 30ms ！】，同时这些数据也跟它的测试平台和硬件的体系结构强相关，所以表里的内容基本都过时了。但可以给我们的一个启发是，熟悉各种硬件性能对软件设计，尤其是系统设计，应该大有裨益【咱只是初学，有多裨益也不敢太肯定hhh】&lt;/p&gt;
&lt;h3 id=&quot;似懂非懂的问题&quot;&gt;似懂非懂的问题&lt;/h3&gt;
&lt;p&gt;我一直有些似懂非懂的问题，这些问题也持续困扰着自己，比如：为什么我的程序读写文件很慢（也就是CPU访问硬盘很慢？）、为什么有了Mongo这样支持高并发场景的数据库了业务上还需要缓存这样的东西？为什么你的博客第一次打开很慢，以后再打开就特别快了呢？……（简单地两句话是能解释的，但自己对这些问题的把握不够清晰，说到底还是东西学得不够扎实）&lt;/p&gt;
&lt;p&gt;可以看到这些都是些很实际的小问题，这些实际问题的解决往往离不开设计良好的系统支持，不期望能学会“系统设计”【小菜竟然敢提“学会”？】，而是尽量搞明白设计中的一些准则，熟悉各种常用的组件。这就算达到自己的预期了吧hhh【我还是太菜了，Flag立着立着好像自己就要倒了;-(】&lt;/p&gt;
&lt;h3 id=&quot;怎么学习&quot;&gt;怎么学习？&lt;/h3&gt;
&lt;p&gt;学习一门全新的东西，我们总要从最基础的东西抓起。比如初学一门编程语言，绕不开的就是看它的循环、分支怎么写，学用它的标准库，然后把握语言的突出特性，比如：哎你看现在人人都学Python是为啥咧？这其实就很好反映了Python本身是一个语法简明的解释型语言，学习的正循环建立的快，对初学者很是友好，不用考虑编译，熟练的上手就是半小时上百行的代码量，写起来就很舒心；哎我听说Golang最近很火拿来写微服务很合适，这就跟它语言层面对并发编程的支持有关系；哎我又听说最近那个Rust也很棒呀，特别安全就是，感觉未来区块链和高性能计算它会一枝独秀噢，这都跟它语言层面引入了所有权和生命期这种东西有关了。&lt;/p&gt;
&lt;p&gt;“搜嘎~ 可是你还是没有讲明白怎么学习系统设计呀？！“&lt;/p&gt;
&lt;p&gt;“啊这…其实怎么学习我也没谱hhh【明明都告诉咱是小菜了】”&lt;/p&gt;
&lt;p&gt;这里贴一个知乎上的答案，里边谈了该如何学习系统设计：&lt;a href=&quot;https://zhuanlan.zhihu.com/p/81953907&quot;&gt;浅谈系统设计&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我的理解是这东西只能多coding，比如以后有时间自己去实现一个kv数据库，或者自己去做一做微服务（之前试过，但浅尝辄止了），完了再就是多积累经验吧，这不可能像刷题一样短期内能见效，得讲静水深流的时候也只能让它慢慢流了hhh。&lt;/p&gt;
&lt;h3 id=&quot;学到什么时候才能设计&quot;&gt;学到什么时候才能设计？&lt;/h3&gt;
&lt;p&gt;其实这个问题的答案很明显，只能等自己功力足够深厚的时候才能谈得上“设计”吧，在这之前的阶段，自己写的程序大概能做好“我实现了xxx”并能确保代码的可读和鲁棒就已经是一枚及格的“螺丝钉”了hhh。以自己的经验来讲，看一个人写的文章、聊的东西其实就能很自然地展现他的功底到底怎样，比如下面注释2的叫&lt;code&gt;Draveness&lt;/code&gt;的博主，他的文章满是谈设计、剖析设计思路，远非csdn上的那种大段大段地贴代码然后一顿解释的文章（还有很多是半懂不懂的瞎解释）。&lt;/p&gt;
&lt;h3 id=&quot;资源推介&quot;&gt;资源推介&lt;/h3&gt;
&lt;p&gt;最后，推荐一些个人认为比较好的系统设计方面的学习资源：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;专门给我这样的小菜准备的好东西：https://github.com/donnemartin/system-design-primer&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;博主是K8S的贡献者【此处应留空，用来膜拜大神】，很多设计上的问题他都讲的很好：https://draveness.me/&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;这是一个精简的爬虫框架，可根据使用需求扩展之：https://github.com/kingname/Tinepeas&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;设计一个K-V数据库：http://blog.gainlo.co/index.php/2016/06/14/design-a-key-value-store-part-i/&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
  </entry>
  <entry xml:base="https://lyyl.me/">
    <title type="text">提问的智慧（转载）</title>
    <id>https://lyyl.me/posts/HowToAskQuestion</id>
    <updated>2021-08-13T00:00:00Z</updated>
    <published>2021-08-13T00:00:00Z</published>
    <link href="https://lyyl.me/posts/HowToAskQuestion" />
    <author>
      <name>YangLiu</name>
    </author>
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;
  &lt;title&gt;-&lt;/title&gt;
  &lt;style&gt;
    html {
      line-height: 1.5;
      font-family: Georgia, serif;
      font-size: 20px;
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      word-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 1em;
      }
    }
    @media print {
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li &gt; ol, li &gt; ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
      font-size: 85%;
      margin: 0;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;blockquote&gt;
&lt;p&gt;转载自：&lt;a href=&quot;https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md&quot;&gt;&lt;u&gt;提问的智慧&lt;/u&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;How To Ask Questions The Smart Way&lt;/p&gt;
&lt;p&gt;Copyright © 2001,2006,2014 Eric S. Raymond, Rick Moen&lt;/p&gt;
&lt;p&gt;本指南英文版版权为 Eric S. Raymond, Rick Moen 所有。&lt;/p&gt;
&lt;p&gt;原文网址：&lt;a href=&quot;http://www.catb.org/~esr/faqs/smart-questions.html&quot;&gt;http://www.catb.org/~esr/faqs/smart-questions.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyleft 2001 by D.H.Grand(nOBODY/Ginux), 2010 by Gasolin, 2015 by Ryan Wu&lt;/p&gt;
&lt;p&gt;本中文指南是基于原文 3.10 版以及 2010 年由 &lt;a href=&quot;https://github.com/gasolin&quot;&gt;Gasolin&lt;/a&gt; 所翻译版本的最新翻译；&lt;/p&gt;
&lt;p&gt;协助指出翻译问题，&lt;strong&gt;请&lt;a href=&quot;https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/issues/new&quot;&gt;发 Issue&lt;/a&gt;，或直接&lt;a href=&quot;https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/compare&quot;&gt;发 Pull Request&lt;/a&gt; 给我。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本文另有&lt;a href=&quot;README.md&quot;&gt;繁體中文版&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;原文版本历史&quot;&gt;&lt;a href=&quot;history.md&quot;&gt;原文版本历史&lt;/a&gt;&lt;/h2&gt;
&lt;h2 id=&quot;目录&quot;&gt;目录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#声明&quot;&gt;声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#简介&quot;&gt;简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#在提问之前&quot;&gt;在提问之前&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#当你提问时&quot;&gt;当你提问时&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#慎选提问的论坛&quot;&gt;慎选提问的论坛&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#stack-overflow&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#网站和-irc-论坛&quot;&gt;网站和 IRC 论坛&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#第二步使用项目邮件列表&quot;&gt;第二步，使用项目邮件列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#使用有意义且描述明确的标题&quot;&gt;使用有意义且描述明确的标题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#使问题容易回复&quot;&gt;使问题容易回复&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#用清晰、正确、精准且语法正确的语句&quot;&gt;用清晰、正确、精准且语法正确的语句&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#使用易于读取且标准的文件格式发送问题&quot;&gt;使用易于读取且标准的文件格式发送问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#精确地描述问题并言之有物&quot;&gt;精确地描述问题并言之有物&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#话不在多而在精&quot;&gt;话不在多而在精&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#别动辄声称找到-bug&quot;&gt;别动辄声称找到 Bug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#低声下气不能代替你的功课&quot;&gt;低声下气不能代替你的功课&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#描述问题症状而非你的猜测&quot;&gt;描述问题症状而非你的猜测&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#按发生时间先后列出问题症状&quot;&gt;按发生时间先后列出问题症状&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#描述目标而不是过程&quot;&gt;描述目标而不是过程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#别要求使用私人电邮回复&quot;&gt;别要求使用私人电邮回复&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#清楚明确的表达你的问题以及需求&quot;&gt;清楚明确的表达你的问题以及需求&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#询问有关代码的问题时&quot;&gt;询问有关代码的问题时&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#别把自己家庭作业的问题贴上来&quot;&gt;别把自己家庭作业的问题贴上来&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#去掉无意义的提问句&quot;&gt;去掉无意义的提问句&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#即使你很急也不要在标题写紧急&quot;&gt;即使你很急也不要在标题写紧急&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#礼多人不怪而且有时还很有帮助&quot;&gt;礼多人不怪，而且有时还很有帮助&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#问题解决后加个简短的补充说明&quot;&gt;问题解决后，加个简短的补充说明&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#如何解读答案&quot;&gt;如何解读答案&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#rtfm-和-stfw如何知道你已完全搞砸了&quot;&gt;RTFM 和 STFW：如何知道你已完全搞砸了&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#如果还是搞不懂&quot;&gt;如果还是搞不懂&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#处理无礼的回应&quot;&gt;处理无礼的回应&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#如何避免扮演失败者&quot;&gt;如何避免扮演失败者&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#不该问的问题&quot;&gt;不该问的问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#好问题与蠢问题&quot;&gt;好问题与蠢问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#如果得不到回答&quot;&gt;如果得不到回答&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#如何更好地回答问题&quot;&gt;如何更好地回答问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#相关资源&quot;&gt;相关资源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#鸣谢&quot;&gt;鸣谢&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;声明&quot;&gt;声明&lt;/h2&gt;
&lt;p&gt;许多项目在他们的使用协助/说明网页中链接了本指南，这么做很好，我们也鼓励大家都这么做。但如果你是负责管理这个项目网页的人，请在超链接附近的显著位置上注明：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本指南不提供此项目的实际支持服务！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们已经深刻领教到少了上述声明所带来的痛苦。因为少了这点声明，我们不停地被一些白痴纠缠。这些白痴认为既然我们发布了这本指南，那么我们就有责任解决世上所有的技术问题。&lt;/p&gt;
&lt;p&gt;如果你因寻求某些帮助而阅读本指南，并在离开时还觉得可以从本文作者这里得到直接帮助，那你就是我们之前说的那些白痴之一。别问我们问题，我们只会忽略你。我们在这本指南中是教你如何从那些真正懂得你所遇到软件或硬件问题的人取得协助，而 99% 的情况下那不会是我们。除非你确定本指南的作者之一刚好是你所遇到的问题领域的专家，否则请不要打扰我们，这样大家都会开心一点。&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;简介&lt;/h2&gt;
&lt;p&gt;在&lt;a href=&quot;http://www.catb.org/~esr/faqs/hacker-howto.html&quot;&gt;黑客&lt;/a&gt;的世界里，当你拋出一个技术问题时，最终是否能得到有用的回答，往往取决于你所提问和追问的方式。本指南将教你如何正确的提问以获得你满意的答案。&lt;/p&gt;
&lt;p&gt;不只是黑客，现在开源（Open Source）软件已经相当盛行，你常常也可以由其他有经验的使用者身上得到好答案，这是件&lt;strong&gt;好事&lt;/strong&gt;；使用者比起黑客来，往往对那些新手常遇到的问题更宽容一些。然而，将有经验的使用者视为黑客，并采用本指南所提的方法与他们沟通，同样也是能从他们身上得到满意回答的最有效方式。&lt;/p&gt;
&lt;p&gt;首先你应该明白，黑客们喜爱有挑战性的问题，或者能激发他们思维的好问题。如果我们并非如此，那我们也不会成为你想询问的对象。如果你给了我们一个值得反复咀嚼玩味的好问题，我们自会对你感激不尽。好问题是激励，是厚礼。好问题可以提高我们的理解力，而且通常会暴露我们以前从没意识到或者思考过的问题。对黑客而言，“好问题！”是诚挚的大力称赞。&lt;/p&gt;
&lt;p&gt;尽管如此，黑客们有着蔑视或傲慢面对简单问题的坏名声，这有时让我们看起来对新手、无知者似乎较有敌意，但其实不是那样的。&lt;/p&gt;
&lt;p&gt;我们不讳言我们对那些不愿思考、或者在发问前不做他们该做的事的人的蔑视。那些人是时间杀手 —— 他们只想索取，从不付出，消耗我们可用在更有趣的问题或更值得回答的人身上的时间。我们称这样的人为 &lt;code&gt;失败者（撸瑟）&lt;/code&gt; （由于历史原因，我们有时把它拼作 &lt;code&gt;lusers&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，电脑只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做。我们了解这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。尽管如此，我们回答问题的风格是指向那些真正对此有兴趣并愿意主动参与解决问题的人，这一点不会变，也不该变。如果连这都变了，我们就是在降低做自己最擅长的事情上的效率。&lt;/p&gt;
&lt;p&gt;我们（在很大程度上）是自愿的，从繁忙的生活中抽出时间来解答疑惑，而且时常被提问淹没。所以我们无情的滤掉一些话题，特别是拋弃那些看起来像失败者的家伙，以便更高效的利用时间来回答&lt;code&gt;赢家（winner）&lt;/code&gt;的问题。&lt;/p&gt;
&lt;p&gt;如果你厌恶我们的态度，高高在上，或过于傲慢，不妨也设身处地想想。我们并没有要求你向我们屈服 —— 事实上，我们大多数人非常乐意与你平等地交流，只要你付出小小努力来满足基本要求，我们就会欢迎你加入我们的文化。但让我们帮助那些不愿意帮助自己的人是没有效率的。无知没有关系，但装白痴就是不行。&lt;/p&gt;
&lt;p&gt;所以，你不必在技术上很在行才能吸引我们的注意，但你必须表现出能引导你变得在行的特质 —— 机敏、有想法、善于观察、乐于主动参与解决问题。如果你做不到这些使你与众不同的事情，我们建议你花点钱找家商业公司签个技术支持服务合同，而不是要求黑客个人无偿地帮助你。&lt;/p&gt;
&lt;p&gt;如果你决定向我们求助，当然你也不希望被视为失败者，更不愿成为失败者中的一员。能立刻得到快速并有效答案的最好方法，就是像赢家那样提问 —— 聪明、自信、有解决问题的思路，只是偶尔在特定的问题上需要获得一点帮助。&lt;/p&gt;
&lt;p&gt;（欢迎对本指南提出改进意见。你可以 email 你的建议至 &lt;a href=&quot;esr@thyrsus.com&quot;&gt;esr@thyrsus.com&lt;/a&gt; 或 &lt;a href=&quot;respond-auto@linuxmafia.com&quot;&gt;respond-auto@linuxmafia.com&lt;/a&gt;。然而请注意，本文并非&lt;a href=&quot;http://www.ietf.org/rfc/rfc1855.txt&quot;&gt;网络礼节&lt;/a&gt;的通用指南，而我们通常会拒绝无助于在技术论坛得到有用答案的建议）。&lt;/p&gt;
&lt;h2 id=&quot;在提问之前&quot;&gt;在提问之前&lt;/h2&gt;
&lt;p&gt;在你准备要通过电子邮件、新闻群组或者聊天室提出技术问题前，请先做到以下事情：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;尝试在你准备提问的论坛的旧文章中搜索答案。&lt;/li&gt;
&lt;li&gt;尝试上网搜索以找到答案。&lt;/li&gt;
&lt;li&gt;尝试阅读手册以找到答案。&lt;/li&gt;
&lt;li&gt;尝试阅读常见问题文件（FAQ）以找到答案。&lt;/li&gt;
&lt;li&gt;尝试自己检查或试验以找到答案。&lt;/li&gt;
&lt;li&gt;向你身边的强者朋友打听以找到答案。&lt;/li&gt;
&lt;li&gt;如果你是程序开发者，请尝试阅读源代码以找到答案。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当你提出问题的时候，请先表明你已经做了上述的努力；这将有助于树立你并不是一个不劳而获且浪费别人的时间的提问者。如果你能一并表达在做了上述努力的过程中所&lt;strong&gt;学到&lt;/strong&gt;的东西会更好，因为我们更乐于回答那些表现出能从答案中学习的人的问题。&lt;/p&gt;
&lt;p&gt;运用某些策略，比如先用 Google 搜索你所遇到的各种错误信息（搜索 &lt;a href=&quot;http://groups.google.com/&quot;&gt;Google 论坛&lt;/a&gt;和网页），这样很可能直接就找到了能解决问题的文件或邮件列表线索。即使没有结果，在邮件列表或新闻组寻求帮助时加上一句 &lt;code&gt;我在 Google 中搜过下列句子但没有找到什么有用的东西&lt;/code&gt; 也是件好事，即使它只是表明了搜索引擎不能提供哪些帮助。这么做（加上搜索过的字串）也让遇到相似问题的其他人能被搜索引擎引导到你的提问来。&lt;/p&gt;
&lt;p&gt;别着急，不要指望几秒钟的 Google 搜索就能解决一个复杂的问题。在向专家求助之前，再阅读一下常见问题文件（FAQ）、放轻松、坐舒服一些，再花点时间思考一下这个问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑拋出，只因你的第一次搜索没有找到答案（或者找到太多答案）。&lt;/p&gt;
&lt;p&gt;准备好你的问题，再将问题仔细的思考过一遍，因为草率的发问只能得到草率的回答，或者根本得不到任何答案。越是能表现出在寻求帮助前你为解决问题所付出的努力，你越有可能得到实质性的帮助。&lt;/p&gt;
&lt;p&gt;小心别问错了问题。如果你的问题基于错误的假设，某个普通黑客（J. Random Hacker）多半会一边在心里想着&lt;code&gt;蠢问题…&lt;/code&gt;， 一边用无意义的字面解释来答复你，希望着你会从问题的回答（而非你想得到的答案）中汲取教训。&lt;/p&gt;
&lt;p&gt;绝不要自以为&lt;strong&gt;够格&lt;/strong&gt;得到答案，你没有；你并没有。毕竟你没有为这种服务支付任何报酬。你将会是自己去&lt;strong&gt;挣到&lt;/strong&gt;一个答案，靠提出有内涵的、有趣的、有思维激励作用的问题 —— 一个有潜力能贡献社区经验的问题，而不仅仅是被动的从他人处索取知识。&lt;/p&gt;
&lt;p&gt;另一方面，表明你愿意在找答案的过程中做点什么是一个非常好的开端。&lt;code&gt;谁能给点提示？&lt;/code&gt;、&lt;code&gt;我的这个例子里缺了什么？&lt;/code&gt;以及&lt;code&gt;我应该检查什么地方&lt;/code&gt;比&lt;code&gt;请把我需要的确切的过程贴出来&lt;/code&gt;更容易得到答复。因为你表现出只要有人能指个正确方向，你就有完成它的能力和决心。&lt;/p&gt;
&lt;h2 id=&quot;当你提问时&quot;&gt;当你提问时&lt;/h2&gt;
&lt;h3 id=&quot;慎选提问的论坛&quot;&gt;慎选提问的论坛&lt;/h3&gt;
&lt;p&gt;小心选择你要提问的场合。如果你做了下述的事情，你很可能被忽略掉或者被看作失败者：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在与主题不合的论坛上贴出你的问题。&lt;/li&gt;
&lt;li&gt;在探讨进阶技术问题的论坛张贴非常初级的问题；反之亦然。&lt;/li&gt;
&lt;li&gt;在太多的不同新闻群组上重复转贴同样的问题（cross-post）。&lt;/li&gt;
&lt;li&gt;向既非熟人也没有义务解决你问题的人发送私人电邮。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;黑客会剔除掉那些搞错场合的问题，以保护他们沟通的渠道不被无关的东西淹没。你不会想让这种事发生在自己身上的。&lt;/p&gt;
&lt;p&gt;因此，第一步是找到对的论坛。再说一次，Google 和其它搜索引擎还是你的朋友，用它们来找到与你遭遇到困难的软硬件问题最相关的网站。通常那儿都有常见问题（FAQ）、邮件列表及相关说明文件的链接。如果你的努力（包括&lt;strong&gt;阅读&lt;/strong&gt; FAQ）都没有结果，网站上也许还有报告 Bug（Bug-reporting）的流程或链接，如果是这样，链过去看看。&lt;/p&gt;
&lt;p&gt;向陌生的人或论坛发送邮件最可能是风险最大的事情。举例来说，别假设一个提供丰富内容的网页的作者会想充当你的免费顾问。不要对你的问题是否会受到欢迎做太乐观的估计 —— 如果你不确定，那就向别处发送，或者压根别发。&lt;/p&gt;
&lt;p&gt;在选择论坛、新闻群组或邮件列表时，别太相信名字，先看看 FAQ 或者许可书以弄清楚你的问题是否切题。发文前先翻翻已有的话题，这样可以让你感受一下那里的文化。事实上，事先在新闻组或邮件列表的历史记录中搜索与你问题相关的关键词是个极好的主意，也许这样就找到答案了。即使没有，也能帮助你归纳出更好的问题。&lt;/p&gt;
&lt;p&gt;别像机关枪似的一次“扫射”所有的帮助渠道，这就像大喊大叫一样会使人不快。要一个一个地来。&lt;/p&gt;
&lt;p&gt;搞清楚你的主题！最典型的错误之一是在某种致力于跨平台可移植的语言、套件或工具的论坛中提关于 Unix 或 Windows 操作系统程序界面的问题。如果你不明白为什么这是大错，最好在搞清楚这之间差异之前什么也别问。&lt;/p&gt;
&lt;p&gt;一般来说，在仔细挑选的公共论坛中提问，会比在私有论坛中提同样的问题更容易得到有用的回答。有几个理由可以支持这点，一是看潜在的回复者有多少，二是看观众有多少。黑客较愿意回答那些能帮助到许多人的问题。&lt;/p&gt;
&lt;p&gt;可以理解的是，老练的黑客和一些热门软件的作者正在接受过多的错发信息。就像那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端 —— 已经好几次了，一些热门软件的作者从自己软件的支持中抽身出来，因为伴随而来涌入其私人邮箱的无用邮件变得无法忍受。&lt;/p&gt;
&lt;h3 id=&quot;stack-overflow&quot;&gt;Stack Overflow&lt;/h3&gt;
&lt;p&gt;搜索，&lt;strong&gt;然后&lt;/strong&gt; 在 Stack Exchange 问。&lt;/p&gt;
&lt;p&gt;近年来，Stack Exchange 社区已经成为回答技术及其他问题的主要渠道，尤其是那些开放源码的项目。&lt;/p&gt;
&lt;p&gt;因为 Google 索引是即时的，在看 Stack Exchange 之前先在 Google 搜索。有很高的机率某人已经问了一个类似的问题，而且 Stack Exchange 网站们往往会是搜索结果中最前面几个。如果你在 Google 上没有找到任何答案，你再到特定相关主题的网站去找。用标签（Tag）搜索能让你更缩小你的搜索结果。&lt;/p&gt;
&lt;p&gt;Stack Exchange 已经成长到&lt;a href=&quot;http://stackexchange.com/sites&quot;&gt;超过一百个网站&lt;/a&gt;，以下是最常用的几个站：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Super User 是问一些通用的电脑问题，如果你的问题跟代码或是写程序无关，只是一些网络连线之类的，请到这里。&lt;/li&gt;
&lt;li&gt;Stack Overflow 是问写程序有关的问题。&lt;/li&gt;
&lt;li&gt;Server Fault 是问服务器和网管相关的问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;网站和-irc-论坛&quot;&gt;网站和 IRC 论坛&lt;/h3&gt;
&lt;p&gt;本地的使用者群组（user group），或者你所用的 Linux 发行版本也许正在宣传他们的网页论坛或 IRC 频道，并提供新手帮助（在一些非英语国家，新手论坛很可能还是邮件列表）， 这些地方是开始提问的好首选，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。有广告赞助的 IRC 频道是公开欢迎提问的地方，通常可以即时得到回应。&lt;/p&gt;
&lt;p&gt;事实上，如果程序出的问题只发生在特定 Linux 发行版提供的版本（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的论坛或邮件列表提问。（否则）该项目的黑客可能仅仅回复 “用&lt;strong&gt;我们的&lt;/strong&gt;版本”。&lt;/p&gt;
&lt;p&gt;在任何论坛发文以前，先确认一下有没有搜索功能。如果有，就试着搜索一下问题的几个关键词，也许这会有帮助。如果在此之前你已做过通用的网页搜索（你也该这样做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。&lt;/p&gt;
&lt;p&gt;通过论坛或 IRC 频道来提供使用者支持服务有增长的趋势，电子邮件则大多为项目开发者间的交流而保留。所以最好先在论坛或 IRC 中寻求与该项目相关的协助。&lt;/p&gt;
&lt;p&gt;在使用 IRC 的时候，首先最好不要发布很长的问题描述，有些人称之为频道洪水。最好通过一句话的问题描述来开始聊天。&lt;/p&gt;
&lt;h3 id=&quot;第二步使用项目邮件列表&quot;&gt;第二步，使用项目邮件列表&lt;/h3&gt;
&lt;p&gt;当某个项目提供开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文件和首页，找到项目的邮件列表并使用它。有几个很好的理由支持我们采用这种办法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;任何好到需要向个别开发者提出的问题，也将对整个项目群组有益。反之，如果你认为自己的问题对整个项目群组来说太愚蠢，也不能成为骚扰个别开发者的理由。&lt;/li&gt;
&lt;li&gt;向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导人）也许太忙以至于没法回答你的问题。&lt;/li&gt;
&lt;li&gt;大多数邮件列表都会被存档，那些被存档的内容将被搜索引擎索引。如果你向列表提问并得到解答，将来其它人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。&lt;/li&gt;
&lt;li&gt;如果某些问题经常被问到，开发者可以利用此信息来改进说明文件或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果一个项目既有“使用者” 也有“开发者”（或“黑客”）邮件列表或论坛，而你又不会动到那些源代码，那么就向“使用者”列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会将你的提问视为干扰他们开发的噪音。&lt;/p&gt;
&lt;p&gt;然而，如果你&lt;strong&gt;确信&lt;/strong&gt;你的问题很特别，而且在“使用者” 列表或论坛中几天都没有回复，可以试试前往“开发者”列表或论坛发问。建议你在张贴前最好先暗地里观察几天以了解那里的行事方式（事实上这是参与任何私有或半私有列表的好主意）&lt;/p&gt;
&lt;p&gt;如果你找不到一个项目的邮件列表，而只能查到项目维护者的电子邮件地址，尽管向他发信。即使是在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中，请陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。&lt;/p&gt;
&lt;h3 id=&quot;使用有意义且描述明确的标题&quot;&gt;使用有意义且描述明确的标题&lt;/h3&gt;
&lt;p&gt;在邮件列表、新闻群组或论坛中，大约 50 字以内的标题是抓住资深专家注意力的好机会。别用喋喋不休的&lt;code&gt;帮帮忙&lt;/code&gt;、&lt;code&gt;跪求&lt;/code&gt;、&lt;code&gt;急&lt;/code&gt;（更别说&lt;code&gt;救命啊！！！！&lt;/code&gt;这样让人反感的话，用这种标题会被条件反射式地忽略）来浪费这个机会。不要妄想用你的痛苦程度来打动我们，而应该是在这点空间中使用极简单扼要的描述方式来提出问题。&lt;/p&gt;
&lt;p&gt;一个好标题范例是&lt;code&gt;目标 —— 差异&lt;/code&gt;式的描述，许多技术支持组织就是这样做的。在&lt;code&gt;目标&lt;/code&gt;部分指出是哪一个或哪一组东西有问题，在&lt;code&gt;差异&lt;/code&gt;部分则描述与期望的行为不一致的地方。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;蠢问题：救命啊！我的笔记本电脑不能正常显示了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;聪明问题：X.org 6.8.1 的鼠标光标会变形，某牌显卡 MV1005 芯片组。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;更聪明问题：X.org 6.8.1 的鼠标光标，在某牌显卡 MV1005 芯片组环境下 - 会变形。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;编写&lt;code&gt;目标 —— 差异&lt;/code&gt; 式描述的过程有助于你组织对问题的细致思考。是什么被影响了？ 仅仅是鼠标光标或者还有其它图形？只在 X.org 的 X 版中出现？或只是出现在 6.8.1 版中？ 是针对某牌显卡芯片组？或者只是其中的 MV1005 型号？ 一个黑客只需瞄一眼就能够立即明白你的环境&lt;strong&gt;和&lt;/strong&gt;你遇到的问题。&lt;/p&gt;
&lt;p&gt;总而言之，请想像一下你正在一个只显示标题的存档讨论串（Thread）索引中查寻。让你的标题更好地反映问题，可使下一个搜索类似问题的人能够关注这个讨论串，而不用再次提问相同的问题。&lt;/p&gt;
&lt;p&gt;如果你想在回复中提出问题，记得要修改内容标题，以表明你是在问一个问题， 一个看起来像 &lt;code&gt;Re: 测试&lt;/code&gt; 或者 &lt;code&gt;Re: 新 bug&lt;/code&gt; 的标题很难引起足够重视。另外，在不影响连贯性之下，适当引用并删减前文的内容，能给新来的读者留下线索。&lt;/p&gt;
&lt;p&gt;对于讨论串，不要直接点击回复来开始一个全新的讨论串，这将限制你的观众。因为有些邮件阅读程序，比如 mutt ，允许使用者按讨论串排序并通过折叠讨论串来隐藏消息，这样做的人永远看不到你发的消息。&lt;/p&gt;
&lt;p&gt;仅仅改变标题还不够。mutt 和其它一些邮件阅读程序还会检查邮件标题以外的其它信息，以便为其指定讨论串。所以宁可发一个全新的邮件。&lt;/p&gt;
&lt;p&gt;在网页论坛上，好的提问方式稍有不同，因为讨论串与特定的信息紧密结合，并且通常在讨论串外就看不到里面的内容，故通过回复提问，而非改变标题是可接受的。不是所有论坛都允许在回复中出现分离的标题，而且这样做了基本上没有人会去看。不过，通过回复提问，这本身就是暧昧的做法，因为它们只会被正在查看该标题的人读到。所以，除非你&lt;strong&gt;只想&lt;/strong&gt;在该讨论串当前活跃的人群中提问，不然还是另起炉灶比较好。&lt;/p&gt;
&lt;h3 id=&quot;使问题容易回复&quot;&gt;使问题容易回复&lt;/h3&gt;
&lt;p&gt;以&lt;code&gt;请将你的回复发送到……&lt;/code&gt;来结束你的问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟思考你的问题更麻烦。如果你的邮件程序不支持这样做，&lt;a href=&quot;http://linuxmafia.com/faq/Mail/muas.html&quot;&gt;换个好点的&lt;/a&gt;；如果是操作系统不支持这种邮件程序，也换个好点的。&lt;/p&gt;
&lt;p&gt;在论坛，要求通过电子邮件回复是非常无礼的，除非你认为回复的信息可能比较敏感（有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复讨论串时得到电子邮件提醒，可以要求网页论坛发送给你。几乎所有论坛都支持诸如&lt;code&gt;追踪此讨论串&lt;/code&gt;、&lt;code&gt;有回复时发送邮件提醒&lt;/code&gt;等功能。&lt;/p&gt;
&lt;h3 id=&quot;用清晰正确精准且语法正确的语句&quot;&gt;用清晰、正确、精准且语法正确的语句&lt;/h3&gt;
&lt;p&gt;我们从经验中发现，粗心的提问者通常也会粗心的写程序与思考（我敢打包票）。回答粗心大意者的问题很不值得，我们宁愿把时间耗在别处。&lt;/p&gt;
&lt;p&gt;正确的拼写、标点符号和大小写是很重要的。一般来说，如果你觉得这样做很麻烦，不想在乎这些，那我们也觉得麻烦，不想在乎你的提问。花点额外的精力斟酌一下字句，用不着太僵硬与正式 —— 事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它&lt;strong&gt;必须很&lt;/strong&gt;准确，而且有迹象表明你是在思考和关注问题。&lt;/p&gt;
&lt;p&gt;正确地拼写、使用标点和大小写，不要将&lt;code&gt;its&lt;/code&gt;混淆为&lt;code&gt;it's&lt;/code&gt;，&lt;code&gt;loose&lt;/code&gt;搞成&lt;code&gt;lose&lt;/code&gt;或者将&lt;code&gt;discrete&lt;/code&gt;弄成&lt;code&gt;discreet&lt;/code&gt;。不要&lt;strong&gt;全部用大写&lt;/strong&gt;，这会被视为无礼的大声嚷嚷（全部小写也好不到哪去，因为不易阅读。&lt;a href=&quot;http://en.wikipedia.org/wiki/Alan_Cox&quot;&gt;Alan Cox&lt;/a&gt; 也许可以这样做，但你不行）。&lt;/p&gt;
&lt;p&gt;更白话的说，如果你写得像是个半文盲[译注：&lt;a href=&quot;http://zh.wikipedia.org/wiki/小白&quot;&gt;小白&lt;/a&gt;]，那多半得不到理睬。也不要使用即时通信中的简写或&lt;a href=&quot;http://zh.wikipedia.org/wiki/火星文&quot;&gt;火星文&lt;/a&gt;，如将&lt;code&gt;的&lt;/code&gt;简化为&lt;code&gt;d&lt;/code&gt;会使你看起来像一个为了少打几个键而省字的小白。更糟的是，如果像个小孩似地鬼画符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。&lt;/p&gt;
&lt;p&gt;如果在使用非母语的论坛提问，你可以犯点拼写和语法上的小错，但决不能在思考上马虎（没错，我们通常能弄清两者的分别）。同时，除非你知道回复者使用的语言，否则请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂语言写的消息。在网络上英语是通用语言，用英语书写可以将你的问题在尚未被阅读就被直接删除的可能性降到最低。&lt;/p&gt;
&lt;p&gt;如果英文是你的外语（Second language），提示潜在回复者你有潜在的语言困难是很好的： [译注：以下附上原文以供使用]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;English is not my native language; please excuse typing errors.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;英文不是我的母语，请原谅我的错字或语法。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;If you speak $LANGUAGE, please email/PM me; I may need assistance translating my question.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;如果你说&lt;strong&gt;某语言&lt;/strong&gt;，请寄信/私讯给我；我需要有人协助我翻译我的问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;I am familiar with the technical terms, but some slang expressions and idioms are difficult for me.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;我对技术名词很熟悉，但对于俗语或是特别用法比较不甚了解。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;I’ve posted my question in $LANGUAGE and English. I’ll be glad to translate responses, if you only use one or the other.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;我把我的问题用&lt;strong&gt;某语言&lt;/strong&gt;和英文写出来，如果你只用一种语言回答，我会乐意将其翻译成另一种。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;使用易于读取且标准的文件格式发送问题&quot;&gt;使用易于读取且标准的文件格式发送问题&lt;/h3&gt;
&lt;p&gt;如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用纯文字而不是 HTML (&lt;a href=&quot;http://archive.birdhouse.org/etc/evilmail.html&quot;&gt;关闭 HTML&lt;/a&gt; 并不难）。&lt;/li&gt;
&lt;li&gt;使用 MIME 附件通常是可以的，前提是真正有内容（譬如附带的源代码或 patch），而不仅仅是邮件程序生成的模板（譬如只是信件内容的拷贝）。&lt;/li&gt;
&lt;li&gt;不要发送一段文字只是一行句子但自动换行后会变成多行的邮件（这使得回复部分内容非常困难）。设想你的读者是在 80 个字符宽的终端机上阅读邮件，最好设置你的换行分割点小于 80 字。&lt;/li&gt;
&lt;li&gt;但是，对一些特殊的文件&lt;strong&gt;不要&lt;/strong&gt;设置固定宽度（譬如日志文件拷贝或会话记录）。数据应该原样包含，让回复者有信心他们看到的是和你看到的一样的东西。&lt;/li&gt;
&lt;li&gt;在英语论坛中，不要使用&lt;code&gt;Quoted-Printable&lt;/code&gt; MIME 编码发送消息。这种编码对于张贴非 ASCII 语言可能是必须的，但很多邮件程序并不支持这种编码。当它们处理换行时，那些文本中四处散布的&lt;code&gt;=20&lt;/code&gt;符号既难看也分散注意力，甚至有可能破坏内容的语意。&lt;/li&gt;
&lt;li&gt;绝对，&lt;strong&gt;永远&lt;/strong&gt;不要指望黑客们阅读使用封闭格式编写的文档，像微软公司的 Word 或 Excel 文件等。大多数黑客对此的反应就像有人将还在冒热气的猪粪倒在你家门口时你的反应一样。即便他们能够处理，他们也很厌恶这么做。&lt;/li&gt;
&lt;li&gt;如果你从使用 Windows 的电脑发送电子邮件，关闭微软愚蠢的&lt;code&gt;智能引号&lt;/code&gt;功能 （从[选项] &amp;gt; [校订] &amp;gt; [自动校正选项]，勾选掉&lt;code&gt;智能引号&lt;/code&gt;单选框），以免在你的邮件中到处散布垃圾字符。&lt;/li&gt;
&lt;li&gt;在论坛，勿滥用&lt;code&gt;表情符号&lt;/code&gt;和&lt;code&gt;HTML&lt;/code&gt;功能（当它们提供时）。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来像个傻笑的小姑娘。这通常不是个好主意，除非你只是对性而不是对答案感兴趣。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你使用图形用户界面的邮件程序（如微软公司的 Outlook 或者其它类似的），注意它们的默认设置不一定满足这些要求。大多数这类程序有基于选单的&lt;code&gt;查看源代码&lt;/code&gt;命令，用它来检查发送文件夹中的邮件，以确保发送的是纯文本文件同时没有一些奇怪的字符。&lt;/p&gt;
&lt;h3 id=&quot;精确地描述问题并言之有物&quot;&gt;精确地描述问题并言之有物&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;仔细、清楚地描述你的问题或 Bug 的症状。&lt;/li&gt;
&lt;li&gt;描述问题发生的环境（机器配置、操作系统、应用程序、以及相关的信息），提供经销商的发行版和版本号（如：&lt;code&gt;Fedora Core 4&lt;/code&gt;、&lt;code&gt;Slackware 9.1&lt;/code&gt;等）。&lt;/li&gt;
&lt;li&gt;描述在提问前你是怎样去研究和理解这个问题的。&lt;/li&gt;
&lt;li&gt;描述在提问前为确定问题而采取的诊断步骤。&lt;/li&gt;
&lt;li&gt;描述最近做过什么可能相关的硬件或软件变更。&lt;/li&gt;
&lt;li&gt;尽可能的提供一个可以&lt;code&gt;重现这个问题的可控环境&lt;/code&gt;的方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;尽量去揣测一个黑客会怎样反问你，在你提问之前预先将黑客们可能遇到的问题回答一遍。&lt;/p&gt;
&lt;p&gt;以上几点中，当你报告的是你认为可能在代码中的问题时，给黑客一个可以重现你的问题的环境尤其重要。当你这么做时，你得到有效的回答的机会和速度都会大大的提升。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.chiark.greenend.org.uk/~sgtatham/&quot;&gt;Simon Tatham&lt;/a&gt; 写过一篇名为《&lt;a href=&quot;http://www.chiark.greenend.org.uk/~sgtatham/bugs-cn.html&quot;&gt;如何有效的报告 Bug&lt;/a&gt;》的出色文章。强力推荐你也读一读。&lt;/p&gt;
&lt;h3 id=&quot;话不在多而在精&quot;&gt;话不在多而在精&lt;/h3&gt;
&lt;p&gt;你需要提供精确有内容的信息。这并不是要求你简单的把成堆的出错代码或者资料完全转录到你的提问中。如果你有庞大而复杂的测试样例能重现程序挂掉的情境，尽量将它剪裁得越小越好。&lt;/p&gt;
&lt;p&gt;这样做的用处至少有三点。 第一，表现出你为简化问题付出了努力，这可以使你得到回答的机会增加； 第二，简化问题使你更有可能得到&lt;strong&gt;有用&lt;/strong&gt;的答案； 第三，在精炼你的 bug 报告的过程中，你很可能就自己找到了解决方法或权宜之计。&lt;/p&gt;
&lt;h3 id=&quot;别动辄声称找到-bug&quot;&gt;别动辄声称找到 Bug&lt;/h3&gt;
&lt;p&gt;当你在使用软件中遇到问题，除非你非常、&lt;strong&gt;非常&lt;/strong&gt;的有根据，不要动辄声称找到了 Bug。提示：除非你能提供解决问题的源代码补丁，或者提供回归测试来表明前一版本中行为不正确，否则你都多半不够完全确信。这同样适用在网页和文件，如果你（声称）发现了文件的&lt;code&gt;Bug&lt;/code&gt;，你应该能提供相应位置的修正或替代文件。&lt;/p&gt;
&lt;p&gt;请记得，还有许多其它使用者没遇到你发现的问题，否则你在阅读文件或搜索网页时就应该发现了（你在抱怨前&lt;a href=&quot;#在提问之前&quot;&gt;已经做了这些，是吧&lt;/a&gt;？）。这也意味着很有可能是你弄错了而不是软件本身有问题。&lt;/p&gt;
&lt;p&gt;编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了 Bug，也就是在质疑他们的能力，即使你是对的，也有可能会冒犯到其中某部分人。当你在标题中嚷嚷着有&lt;code&gt;Bug&lt;/code&gt;时，这尤其严重。&lt;/p&gt;
&lt;p&gt;提问时，即使你私下非常确信已经发现一个真正的 Bug，最好写得像是&lt;strong&gt;你&lt;/strong&gt;做错了什么。如果真的有 Bug，你会在回复中看到这点。这样做的话，如果真有 Bug，维护者就会向你道歉，这总比你惹恼别人然后欠别人一个道歉要好一点。&lt;/p&gt;
&lt;h3 id=&quot;低声下气不能代替你的功课&quot;&gt;低声下气不能代替你的功课&lt;/h3&gt;
&lt;p&gt;有些人明白他们不该粗鲁或傲慢的提问并要求得到答复，但他们选择另一个极端 —— 低声下气：&lt;code&gt;我知道我只是个可悲的新手，一个撸瑟，但...&lt;/code&gt;。这既使人困扰，也没有用，尤其是伴随着与实际问题含糊不清的描述时更令人反感。&lt;/p&gt;
&lt;p&gt;别用原始灵长类动物的把戏来浪费你我的时间。取而代之的是，尽可能清楚地描述背景条件和你的问题情况。这比低声下气更好地定位了你的位置。&lt;/p&gt;
&lt;p&gt;有时网页论坛会设有专为新手提问的版面，如果你真的认为遇到了初学者的问题，到那去就是了，但一样别那么低声下气。&lt;/p&gt;
&lt;h3 id=&quot;描述问题症状而非你的猜测&quot;&gt;描述问题症状而非你的猜测&lt;/h3&gt;
&lt;p&gt;告诉黑客们你认为问题是怎样造成的并没什么帮助。（如果你的推断如此有效，还用向别人求助吗？），因此要确信你原原本本告诉了他们问题的症状，而不是你的解释和理论；让黑客们来推测和诊断。如果你认为陈述自己的猜测很重要，清楚地说明这只是你的猜测，并描述为什么它们不起作用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;蠢问题&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我在编译内核时接连遇到 SIG11 错误， 我怀疑某条飞线搭在主板的走线上了，这种情况应该怎样检查最好？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;聪明问题&lt;/strong&gt; &amp;gt; 我的组装电脑是 FIC-PA2007 主机板搭载 AMD K6/233 CPU（威盛 Apollo VP2 芯片组）， &amp;gt; 256MB Corsair PC133 SDRAM 内存，在编译内核时，从开机 20 分钟以后就频频产生 SIG11 错误， &amp;gt; 但是在头 20 分钟内从没发生过相同的问题。重新启动也没有用，但是关机一晚上就又能工作 20 分钟。 &amp;gt; 所有内存都换过了，没有效果。相关部分的标准编译记录如下…。&lt;/p&gt;
&lt;p&gt;由于以上这点似乎让许多人觉得难以配合，这里有句话可以提醒你：&lt;code&gt;所有的诊断专家都来自密苏里州。&lt;/code&gt; 美国国务院的官方座右铭则是：&lt;code&gt;让我看看&lt;/code&gt;（出自国会议员 Willard D. Vandiver 在 1899 年时的讲话：&lt;code&gt;我来自一个出产玉米，棉花，牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。&lt;/code&gt;） 针对诊断者而言，这并不是一种怀疑，而只是一种真实而有用的需求，以便让他们看到的是与你看到的原始证据尽可能一致的东西，而不是你的猜测与归纳的结论。所以，大方的展示给我们看吧！&lt;/p&gt;
&lt;h3 id=&quot;按发生时间先后列出问题症状&quot;&gt;按发生时间先后列出问题症状&lt;/h3&gt;
&lt;p&gt;问题发生前的一系列操作，往往就是对找出问题最有帮助的线索。因此，你的说明里应该包含你的操作步骤，以及机器和软件的反应，直到问题发生。在命令行处理的情况下，提供一段操作记录（例如运行脚本工具所生成的），并引用相关的若干行（如 20 行）记录会非常有帮助。&lt;/p&gt;
&lt;p&gt;如果挂掉的程序有诊断选项（如 -v 的详述开关），试着选择这些能在记录中增加调试信息的选项。记住，&lt;code&gt;多&lt;/code&gt;不等于&lt;code&gt;好&lt;/code&gt;。试着选取适当的调试级别以便提供有用的信息而不是让读者淹没在垃圾中。&lt;/p&gt;
&lt;p&gt;如果你的说明很长（如超过四个段落），在开头简述问题，接下来再按时间顺序详述会有所帮助。这样黑客们在读你的记录时就知道该注意哪些内容了。&lt;/p&gt;
&lt;h3 id=&quot;描述目标而不是过程&quot;&gt;描述目标而不是过程&lt;/h3&gt;
&lt;p&gt;如果你想弄清楚如何做某事（而不是报告一个 Bug），在开头就描述你的目标，然后才陈述重现你所卡住的特定步骤。&lt;/p&gt;
&lt;p&gt;经常寻求技术帮助的人在心中有个更高层次的目标，而他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身就有问题。结果要费很大的劲才能搞定。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;蠢问题&lt;/strong&gt; &amp;gt; 我怎样才能从某绘图程序的颜色选择器中取得十六进制的的 RGB 值？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;聪明问题&lt;/strong&gt; &amp;gt; 我正试着用替换一幅图片的色码（color table）成自己选定的色码，我现在知道的唯一方法是编辑每个色码区块（table slot）， &amp;gt; 但却无法从某绘图程序的颜色选择器取得十六进制的的 RGB 值。&lt;/p&gt;
&lt;p&gt;第二种提问法比较聪明，你可能得到像是&lt;code&gt;建议采用另一个更合适的工具&lt;/code&gt;的回复。&lt;/p&gt;
&lt;h3 id=&quot;别要求使用私人电邮回复&quot;&gt;别要求使用私人电邮回复&lt;/h3&gt;
&lt;p&gt;黑客们认为问题的解决过程应该公开、透明，此过程中如果更有经验的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为提供帮助者可以得到一些奖励，奖励就是他的能力和学识被其他同行看到。&lt;/p&gt;
&lt;p&gt;当你要求私下回复时，这个过程和奖励都被中止。别这样做，让&lt;strong&gt;回复者&lt;/strong&gt;来决定是否私下回答 —— 如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于对其它人没有兴趣。&lt;/p&gt;
&lt;p&gt;这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么这个神奇的提问句会是&lt;code&gt;向我发电邮，我将为论坛归纳这些回复&lt;/code&gt;。试着将邮件列表或新闻群组从洪水般的雷同回复中解救出来是非常有礼貌的 —— 但你必须信守诺言。&lt;/p&gt;
&lt;h3 id=&quot;清楚明确的表达你的问题以及需求&quot;&gt;清楚明确的表达你的问题以及需求&lt;/h3&gt;
&lt;p&gt;漫无边际的提问是近乎无休无止的时间黑洞。最有可能给你有用答案的人通常也正是最忙的人（他们忙是因为要亲自完成大部分工作）。这样的人对无节制的时间黑洞相当厌恶，所以他们也倾向于厌恶那些漫无边际的提问。&lt;/p&gt;
&lt;p&gt;如果你明确表述需要回答者做什么（如提供指点、发送一段代码、检查你的补丁、或是其他等等），就最有可能得到有用的答案。因为这会定出一个时间和精力的上限，便于回答者能集中精力来帮你。这么做很棒。&lt;/p&gt;
&lt;p&gt;要理解专家们所处的世界，请把专业技能想像为充裕的资源，而回复的时间则是稀缺的资源。你要求他们奉献的时间越少，你越有可能从真正专业而且很忙的专家那里得到解答。&lt;/p&gt;
&lt;p&gt;所以，界定一下你的问题，使专家花在辨识你的问题和回答所需要付出的时间减到最少，这技巧对你有用答案相当有帮助 —— 但这技巧通常和简化问题有所区别。因此，问&lt;code&gt;我想更好的理解 X，可否指点一下哪有好一点说明？&lt;/code&gt;通常比问&lt;code&gt;你能解释一下 X 吗？&lt;/code&gt;更好。如果你的代码不能运作，通常请别人看看哪里有问题，比要求别人替你改正要明智得多。&lt;/p&gt;
&lt;h3 id=&quot;询问有关代码的问题时&quot;&gt;询问有关代码的问题时&lt;/h3&gt;
&lt;p&gt;别要求他人帮你调试有问题的代码，不提示一下应该从何入手。张贴几百行的代码，然后说一声：&lt;code&gt;它不能工作&lt;/code&gt;会让你完全被忽略。只贴几十行代码，然后说一句：&lt;code&gt;在第七行以后，我期待它显示 &amp;lt;x&amp;gt;，但实际出现的是 &amp;lt;y&amp;gt;&lt;/code&gt;比较有可能让你得到回应。&lt;/p&gt;
&lt;p&gt;最有效描述程序问题的方法是提供最精简的 Bug 展示测试用例（bug-demonstrating test case）。什么是最精简的测试用例？那是问题的缩影；一小个程序片段能&lt;strong&gt;刚好&lt;/strong&gt;展示出程序的异常行为，而不包含其他令人分散注意力的内容。怎么制作最精简的测试用例？如果你知道哪一行或哪一段代码会造成异常的行为，复制下来并加入足够重现这个状况的代码（例如，足以让这段代码能被编译/直译/被应用程序处理）。如果你无法将问题缩减到一个特定区块，就复制一份代码并移除不影响产生问题行为的部分。总之，测试用例越小越好（查看&lt;a href=&quot;#话不在多而在精&quot;&gt;话不在多而在精&lt;/a&gt;一节）。&lt;/p&gt;
&lt;p&gt;一般而言，要得到一段相当精简的测试用例并不太容易，但永远先尝试这样做的是种好习惯。这种方式可以帮助你了解如何自行解决这个问题 —— 而且即使你的尝试不成功，黑客们也会看到你在尝试取得答案的过程中付出了努力，这可以让他们更愿意与你合作。&lt;/p&gt;
&lt;p&gt;如果你只是想让别人帮忙审查（Review）一下代码，在信的开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。&lt;/p&gt;
&lt;h3 id=&quot;别把自己家庭作业的问题贴上来&quot;&gt;别把自己家庭作业的问题贴上来&lt;/h3&gt;
&lt;p&gt;黑客们很擅长分辨哪些问题是家庭作业式的问题；因为我们中的大多数都曾自己解决这类问题。同样，这些问题得由&lt;strong&gt;你&lt;/strong&gt;来搞定，你会从中学到东西。你可以要求给点提示，但别要求得到完整的解决方案。&lt;/p&gt;
&lt;p&gt;如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在使用者群组，论坛或（最后一招）在项目的&lt;strong&gt;使用者&lt;/strong&gt;邮件列表或论坛中提问。尽管黑客们&lt;strong&gt;会&lt;/strong&gt;看出来，但一些有经验的使用者也许仍会给你一些提示。&lt;/p&gt;
&lt;h3 id=&quot;去掉无意义的提问句&quot;&gt;去掉无意义的提问句&lt;/h3&gt;
&lt;p&gt;避免用无意义的话结束提问，例如&lt;code&gt;有人能帮我吗？&lt;/code&gt;或者&lt;code&gt;这有答案吗？&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;首先：如果你对问题的描述不是很好，这样问更是画蛇添足。&lt;/p&gt;
&lt;p&gt;其次：由于这样问是画蛇添足，黑客们会很厌烦你 —— 而且通常会用逻辑上正确，但毫无意义的回答来表示他们的蔑视， 例如：&lt;code&gt;没错，有人能帮你&lt;/code&gt;或者&lt;code&gt;不，没答案&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;一般来说，避免用 &lt;code&gt;是或否&lt;/code&gt;、&lt;code&gt;对或错&lt;/code&gt;、&lt;code&gt;有或没有&lt;/code&gt;类型的问句，除非你想得到&lt;a href=&quot;http://homepage.ntlworld.com./jonathan.deboynepollard/FGA/questions-with-yes-or-no-answers.html&quot;&gt;是或否类型的回答&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;即使你很急也不要在标题写紧急&quot;&gt;即使你很急也不要在标题写&lt;code&gt;紧急&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;这是你的问题，不是我们的。宣称&lt;code&gt;紧急&lt;/code&gt;极有可能事与愿违：大多数黑客会直接删除无礼和自私地企图即时引起关注的问题。更严重的是，&lt;code&gt;紧急&lt;/code&gt;这个字（或是其他企图引起关注的标题）通常会被垃圾信过滤器过滤掉 —— 你希望能看到你问题的人可能永远也看不到。&lt;/p&gt;
&lt;p&gt;有半个例外的情况是，如果你是在一些很高调，会使黑客们兴奋的地方，也许值得这样去做。在这种情况下，如果你有时间压力，也很有礼貌地提到这点，人们也许会有兴趣回答快一点。&lt;/p&gt;
&lt;p&gt;当然，这风险很大，因为黑客们兴奋的点多半与你的不同。譬如从 NASA 国际空间站（International Space Station）发这样的标题没有问题，但用自我感觉良好的慈善行为或政治原因发肯定不行。事实上，张贴诸如&lt;code&gt;紧急：帮我救救这个毛绒绒的小海豹！&lt;/code&gt;肯定让你被黑客忽略或惹恼他们，即使他们认为毛绒绒的小海豹很重要。&lt;/p&gt;
&lt;p&gt;如果你觉得这点很不可思议，最好再把这份指南剩下的内容多读几遍，直到你弄懂了再发文。&lt;/p&gt;
&lt;h3 id=&quot;礼多人不怪而且有时还很有帮助&quot;&gt;礼多人不怪，而且有时还很有帮助&lt;/h3&gt;
&lt;p&gt;彬彬有礼，多用&lt;code&gt;请&lt;/code&gt;和&lt;code&gt;谢谢您的关注&lt;/code&gt;，或&lt;code&gt;谢谢你的关照&lt;/code&gt;。让大家都知道你对他们花时间免费提供帮助心存感激。&lt;/p&gt;
&lt;p&gt;坦白说，这一点并没有比清晰、正确、精准并合法语法和避免使用专用格式重要（也不能取而代之）。黑客们一般宁可读有点唐突但技术上鲜明的 Bug 报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教给我们什么来评价问题的价值的）&lt;/p&gt;
&lt;p&gt;然而，如果你有一串的问题待解决，客气一点肯定会增加你得到有用回应的机会。&lt;/p&gt;
&lt;p&gt;（我们注意到，自从本指南发布后，从资深黑客那里得到的唯一严重缺陷反馈，就是对预先道谢这一条。一些黑客觉得&lt;code&gt;先谢了&lt;/code&gt;意味着事后就不用再感谢任何人的暗示。我们的建议是要么先说&lt;code&gt;先谢了&lt;/code&gt;，&lt;strong&gt;然后&lt;/strong&gt;事后再对回复者表示感谢，或者换种方式表达感激，譬如用&lt;code&gt;谢谢你的关注&lt;/code&gt;或&lt;code&gt;谢谢你的关照&lt;/code&gt;。）&lt;/p&gt;
&lt;h3 id=&quot;问题解决后加个简短的补充说明&quot;&gt;问题解决后，加个简短的补充说明&lt;/h3&gt;
&lt;p&gt;问题解决后，向所有帮助过你的人发个说明，让他们知道问题是怎样解决的，并再一次向他们表示感谢。如果问题在新闻组或者邮件列表中引起了广泛关注，应该在那里贴一个说明比较恰当。&lt;/p&gt;
&lt;p&gt;最理想的方式是向最初提问的话题回复此消息，并在标题中包含&lt;code&gt;已修正&lt;/code&gt;，&lt;code&gt;已解决&lt;/code&gt;或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见讨论串&lt;code&gt;问题 X&lt;/code&gt;和&lt;code&gt;问题 X - 已解决&lt;/code&gt;的潜在回复者就明白不用再浪费时间了（除非他个人觉得&lt;code&gt;问题 X&lt;/code&gt;的有趣），因此可以利用此时间去解决其它问题。&lt;/p&gt;
&lt;p&gt;补充说明不必很长或是很深入；简单的一句&lt;code&gt;你好，原来是网线出了问题！谢谢大家 – Bill&lt;/code&gt;比什么也不说要来的好。事实上，除非结论真的很有技术含量，否则简短可爱的小结比长篇大论更好。说明问题是怎样解决的，但大可不必将解决问题的过程复述一遍。&lt;/p&gt;
&lt;p&gt;对于有深度的问题，张贴调试记录的摘要是有帮助的。描述问题的最终状态，说明是什么解决了问题，在此&lt;strong&gt;之后&lt;/strong&gt;才指明可以避免的盲点。避免盲点的部分应放在正确的解决方案和其它总结材料之后，而不要将此信息搞成侦探推理小说。列出那些帮助过你的名字，会让你交到更多朋友。&lt;/p&gt;
&lt;p&gt;除了有礼貌和有内涵以外，这种类型的补充也有助于他人在邮件列表/新闻群组/论坛中搜索到真正解决你问题的方案，让他们也从中受益。&lt;/p&gt;
&lt;p&gt;至少，这种补充有助于让每位参与协助的人因问题的解决而从中得到满足感。如果你自己不是技术专家或者黑客，那就相信我们，这种感觉对于那些你向他们求助的大师或者专家而言，是非常重要的。问题悬而未决会让人灰心；黑客们渴望看到问题被解决。好人有好报，满足他们的渴望，你会在下次提问时尝到甜头。&lt;/p&gt;
&lt;p&gt;思考一下怎样才能避免他人将来也遇到类似的问题，自问写一份文件或加个常见问题（FAQ）会不会有帮助。如果是的话就将它们发给维护者。&lt;/p&gt;
&lt;p&gt;在黑客中，这种良好的后继行动实际上比传统的礼节更为重要，也是你如何透过善待他人而赢得声誉的方式，这是非常有价值的资产。&lt;/p&gt;
&lt;h2 id=&quot;如何解读答案&quot;&gt;如何解读答案&lt;/h2&gt;
&lt;p&gt;&lt;a id=&quot;RTFM&quot;&gt;&lt;/a&gt; ## RTFM 和 STFW：如何知道你已完全搞砸了&lt;/p&gt;
&lt;p&gt;有一个古老而神圣的传统：如果你收到&lt;code&gt;RTFM （Read The Fucking Manual）&lt;/code&gt;的回应，回答者认为你&lt;strong&gt;应该去读他妈的手册&lt;/strong&gt;。当然，基本上他是对的，你应该去读一读。&lt;/p&gt;
&lt;p&gt;RTFM 有一个年轻的亲戚。如果你收到&lt;code&gt;STFW（Search The Fucking Web）&lt;/code&gt;的回应，回答者认为你&lt;strong&gt;应该到他妈的网上搜索&lt;/strong&gt;。那人多半也是对的，去搜索一下吧。（更温和一点的说法是 &lt;strong&gt;&lt;a href=&quot;http://lmgtfy.com/&quot;&gt;Google 是你的朋友&lt;/a&gt;&lt;/strong&gt;！）&lt;/p&gt;
&lt;p&gt;在论坛，你也可能被要求去爬爬论坛的旧文。事实上，有人甚至可能热心地为你提供以前解决此问题的讨论串。但不要依赖这种关照，提问前应该先搜索一下旧文。&lt;/p&gt;
&lt;p&gt;通常，用这两句之一回答你的人会给你一份包含你需要内容的手册或者一个网址，而且他们打这些字的时候也正在读着。这些答复意味着回答者认为&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;你需要的信息非常容易获得&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;你自己去搜索这些信息比灌给你，能让你学到更多&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你不应该因此不爽；&lt;strong&gt;依照黑客的标准，他已经表示了对你一定程度的关注，而没有对你的要求视而不见&lt;/strong&gt;。你应该对他祖母般的慈祥表示感谢。&lt;/p&gt;
&lt;h3 id=&quot;如果还是搞不懂&quot;&gt;如果还是搞不懂&lt;/h3&gt;
&lt;p&gt;如果你看不懂回应，别立刻要求对方解释。像你以前试着自己解决问题时那样（利用手册，FAQ，网络，身边的高手），先试着去搞懂他的回应。如果你真的需要对方解释，记得表现出你已经从中学到了点什么。&lt;/p&gt;
&lt;p&gt;比方说，如果我回答你：&lt;code&gt;看来似乎是 zentry 卡住了；你应该先清除它。&lt;/code&gt;，然后，这是一个&lt;strong&gt;很糟的&lt;/strong&gt;后续问题回应：&lt;code&gt;zentry 是什么？&lt;/code&gt; &lt;strong&gt;好&lt;/strong&gt;的问法应该是这样：&lt;code&gt;哦~~~我看过说明了但是只有 -z 和 -p 两个参数中提到了 zentries，而且还都没有清楚的解释如何清除它。你是指这两个中的哪一个吗？还是我看漏了什么？&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;处理无礼的回应&quot;&gt;处理无礼的回应&lt;/h3&gt;
&lt;p&gt;很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直接了当，一针见血式的交流风格，这种风格更注重解决问题，而不是使人感觉舒服而却模模糊糊。&lt;/p&gt;
&lt;p&gt;如果你觉得被冒犯了，试着平静地反应。如果有人真的做了出格的事，邮件列表、新闻群组或论坛中的前辈多半会招呼他。如果这&lt;strong&gt;没有&lt;/strong&gt;发生而你却发火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而&lt;strong&gt;你&lt;/strong&gt;将被视为有错的一方，这将伤害到你获取信息或帮助的机会。&lt;/p&gt;
&lt;p&gt;另一方面，你偶尔真的会碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击，用犀利的语言将其驳得体无完肤都是可以接受的。然而，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外人，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。&lt;/p&gt;
&lt;p&gt;（有些人断言很多黑客都有轻度的自闭症或亚斯伯格综合症，缺少用于润滑人类社会&lt;strong&gt;正常&lt;/strong&gt;交往所需的能力。这既可能是真也可能是假的。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们&lt;strong&gt;喜欢&lt;/strong&gt;我们现在这个样子，并且通常对病患标记都有站得住脚的怀疑）。&lt;/p&gt;
&lt;p&gt;Jeff Bigler 的观察总结和这个相关也值得一读 (&lt;strong&gt;&lt;a href=&quot;http://www.mit.edu/~jcb/tact.html&quot;&gt;tact filters&lt;/a&gt;&lt;/strong&gt;)。&lt;/p&gt;
&lt;p&gt;在下一节，我们会谈到另一个问题，当&lt;strong&gt;你&lt;/strong&gt;行为不当时所会受到的&lt;code&gt;冒犯&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;如何避免扮演失败者&quot;&gt;如何避免扮演失败者&lt;/h2&gt;
&lt;p&gt;在黑客社区的论坛中有那么几次你可能会搞砸 —— 以本指南所描述到的或类似的方式。而你会在公开场合中被告知你是如何搞砸的，也许攻击的言语中还会带点夹七夹八的颜色。&lt;/p&gt;
&lt;p&gt;这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被口头攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、忘了关马桶盖等等。相反地，你该这么做：&lt;/p&gt;
&lt;p&gt;熬过去，这很正常。事实上，它是有益健康且合理的。&lt;/p&gt;
&lt;p&gt;社区的标准不会自行维持，它们是通过参与者积极而&lt;strong&gt;公开地&lt;/strong&gt;执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，它不是这样运作的。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。&lt;/p&gt;
&lt;p&gt;也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称&lt;code&gt;如果你不想帮助用户就闭嘴。&lt;/code&gt; 结果造成有想法的参与者纷纷离开，这么做只会使它们沦为毫无意义的唠叨与无用的技术论坛。&lt;/p&gt;
&lt;p&gt;夸张的讲法是：你要的是“友善”（以上述方式）还是有用？两个里面挑一个。&lt;/p&gt;
&lt;p&gt;记着：当黑客说你搞砸了，并且（无论多么刺耳）告诉你别再这样做时，他正在为关心&lt;strong&gt;你&lt;/strong&gt;和&lt;strong&gt;他的社区&lt;/strong&gt;而行动。对他而言，不理你并将你从他的生活中滤掉更简单。如果你无法做到感谢，至少要表现得有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人像对待脆弱的洋娃娃那样对你。&lt;/p&gt;
&lt;p&gt;有时候，即使你没有搞砸（或者只是在他的想像中你搞砸了），有些人也会无缘无故地攻击你本人。在这种情况下，抱怨倒是&lt;strong&gt;真的&lt;/strong&gt;会把问题搞砸。&lt;/p&gt;
&lt;p&gt;这些来找麻烦的人要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些来找麻烦的人在给他们自己找麻烦，这点你不用操心。&lt;/p&gt;
&lt;p&gt;也别让自己卷入口水战，最好不要理睬大多数的口水战 —— 当然，这是在你检验它们只是口水战，并且未指出你有搞砸的地方，同时也没有巧妙地将问题真正的答案藏于其后（这也是有可能的）。&lt;/p&gt;
&lt;h2 id=&quot;不该问的问题&quot;&gt;不该问的问题&lt;/h2&gt;
&lt;p&gt;以下是几个经典蠢问题，以及黑客没回答时心中所想的：&lt;/p&gt;
&lt;p&gt;问题：&lt;a href=&quot;#q1&quot;&gt;我能在哪找到 X 程序或 X 资源？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;问题：&lt;a href=&quot;#q2&quot;&gt;我怎样用 X 做 Y？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;问题：&lt;a href=&quot;#q3&quot;&gt;如何设定我的 shell 提示？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;问题：&lt;a href=&quot;#q4&quot;&gt;我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文件转换为 TeX 格式吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;问题：&lt;a href=&quot;#q5&quot;&gt;我的程序/设定/SQL 语句没有用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;问题：&lt;a href=&quot;#q6&quot;&gt;我的 Windows 电脑有问题，你能帮我吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;问题：&lt;a href=&quot;#q7&quot;&gt;我的程序不会动了，我认为系统工具 X 有问题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;问题：&lt;a href=&quot;#q8&quot;&gt;我在安装 Linux（或者 X ）时有问题，你能帮我吗？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;问题：&lt;a href=&quot;#q9&quot;&gt;我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a id=&quot;q1&quot;&gt;&lt;/a&gt; &amp;gt; 问题：我能在哪找到 X 程序或 X 资源？&lt;/p&gt;
&lt;p&gt;回答：就在我找到它的地方啊，白痴 —— 搜索引擎的那一头。天哪！难道还有人不会用 &lt;a href=&quot;http://www.google.com&quot;&gt;Google&lt;/a&gt; 吗？&lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;q2&quot;&gt;&lt;/a&gt; &amp;gt; 问题：我怎样用 X 做 Y？&lt;/p&gt;
&lt;p&gt;回答：如果你想解决的是 Y ，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 X 完全无知，也对 Y 要解决的问题糊涂，还被特定形势禁锢了思维。最好忽略这种人，等他们把问题搞清楚了再说。&lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;q3&quot;&gt;&lt;/a&gt; &amp;gt;问题：如何设定我的 shell 提示？？&lt;/p&gt;
&lt;p&gt;回答：如果你有足够的智慧提这个问题，你也该有足够的智慧去 &lt;a href=&quot;#RTFM&quot;&gt;RTFM&lt;/a&gt;，然后自己去找出来。&lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;q4&quot;&gt;&lt;/a&gt; &amp;gt; 问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文件转换为 TeX 格式吗？&lt;/p&gt;
&lt;p&gt;回答：试试看就知道了。如果你试过，你既知道了答案，就不用浪费我的时间了。&lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;q5&quot;&gt;&lt;/a&gt; &amp;gt; 问题：我的{程序/设定/SQL 语句}不工作&lt;/p&gt;
&lt;p&gt;回答：这不算是问题吧，我对要我问你二十个问题才找得出你真正问题的问题没兴趣 —— 我有更有意思的事要做呢。在看到这类问题的时候，我的反应通常不外如下三种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你还有什么要补充的吗？&lt;/li&gt;
&lt;li&gt;真糟糕，希望你能搞定。&lt;/li&gt;
&lt;li&gt;这关我屁事？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a id=&quot;q6&quot;&gt;&lt;/a&gt; &amp;gt; 问题：我的 Windows 电脑有问题，你能帮我吗？&lt;/p&gt;
&lt;p&gt;回答：能啊，扔掉微软的垃圾，换个像 Linux 或 BSD 的开源操作系统吧。&lt;/p&gt;
&lt;p&gt;注意：如果程序有官方版 Windows 或者与 Windows 有互动（如 Samba），你&lt;strong&gt;可以&lt;/strong&gt;问与 Windows 相关的问题， 只是别对问题是由 Windows 操作系统而不是程序本身造成的回复感到惊讶， 因为 Windows 一般来说实在太烂，这种说法通常都是对的。&lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;q7&quot;&gt;&lt;/a&gt; &amp;gt; 问题：我的程序不会动了，我认为系统工具 X 有问题&lt;/p&gt;
&lt;p&gt;回答：你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与函数库文件有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文件作后盾。&lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;q8&quot;&gt;&lt;/a&gt; &amp;gt; 问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？&lt;/p&gt;
&lt;p&gt;回答：不能，我只有亲自在你的电脑上动手才能找到毛病。还是去找你当地的 Linux 使用群组者寻求实际的指导吧（你能在&lt;a href=&quot;http://www.linux.org/groups/index.html&quot;&gt;这儿&lt;/a&gt;找到使用者群组的清单）。&lt;/p&gt;
&lt;p&gt;注意：如果安装问题与某 Linux 的发行版有关，在它的邮件列表、论坛或本地使用者群组中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 &lt;code&gt;Linux&lt;/code&gt; 和&lt;strong&gt;所有&lt;/strong&gt;被怀疑的硬件作关键词仔细搜索。&lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;q9&quot;&gt;&lt;/a&gt; &amp;gt; 问题：我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？&lt;/p&gt;
&lt;p&gt;回答：想要这样做，说明了你是个卑鄙小人；想找个黑客帮你，说明你是个白痴！&lt;/p&gt;
&lt;h2 id=&quot;好问题与蠢问题&quot;&gt;好问题与蠢问题&lt;/h2&gt;
&lt;p&gt;最后，我将透过举一些例子，来说明怎样聪明的提问；同一个问题的两种问法被放在一起，一种是愚蠢的，另一种才是明智的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;蠢问题&lt;/strong&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我可以在哪儿找到关于 Foonly Flurbamatic 的资料？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这种问法无非想得到 &lt;a href=&quot;#RTFM&quot;&gt;STFW&lt;/a&gt; 这样的回答。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;聪明问题&lt;/strong&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我用 Google 搜索过 “Foonly Flurbamatic 2600”，但是没找到有用的结果。谁知道上哪儿去找对这种设备编程的资料？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个问题已经 STFW 过了，看起来他真的遇到了麻烦。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;蠢问题&lt;/strong&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我从 foo 项目找来的源码没法编译。它怎么这么烂？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;他觉得都是别人的错，这个傲慢自大的提问者。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;聪明问题&lt;/strong&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;foo 项目代码在 Nulix 6.2 版下无法编译通过。我读过了 FAQ，但里面没有提到跟 Nulix 有关的问题。这是我编译过程的记录，我有什么做的不对的地方吗？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;提问者已经指明了环境，也读过了 FAQ，还列出了错误，并且他没有把问题的责任推到别人头上，他的问题值得被关注。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;蠢问题&lt;/strong&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我的主机板有问题了，谁来帮我？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;某黑客对这类问题的回答通常是：&lt;code&gt;好的，还要帮你拍拍背和换尿布吗？&lt;/code&gt;，然后按下删除键。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;聪明问题&lt;/strong&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我在 S2464 主机板上试过了 X 、 Y 和 Z ，但没什么作用，我又试了 A 、 B 和 C 。请注意当我尝试 C 时的奇怪现象。显然 florbish 正在 grommicking，但结果出人意料。通常在 Athlon MP 主机板上引起 grommicking 的原因是什么？有谁知道接下来我该做些什么测试才能找出问题？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个家伙，从另一个角度来看，值得去回答他。他表现出了解决问题的能力，而不是坐等天上掉答案。&lt;/p&gt;
&lt;p&gt;在最后一个问题中，注意&lt;code&gt;告诉我答案&lt;/code&gt;和&lt;code&gt;给我启示，指出我还应该做什么诊断工作&lt;/code&gt;之间微妙而又重要的区别。&lt;/p&gt;
&lt;p&gt;事实上，后一个问题源自于 2001 年 8 月在 Linux 内核邮件列表（lkml）上的一个真实的提问。我（Eric）就是那个提出问题的人。我在 Tyan S2464 主板上观察到了这种无法解释的锁定现象，列表成员们提供了解决这一问题的重要信息。&lt;/p&gt;
&lt;p&gt;通过我的提问方法，我给了别人可以咀嚼玩味的东西；我设法让人们很容易参与并且被吸引进来。我显示了自己具备和他们同等的能力，并邀请他们与我共同探讨。通过告诉他们我所走过的弯路，以避免他们再浪费时间，我也表明了对他们宝贵时间的尊重。&lt;/p&gt;
&lt;p&gt;事后，当我向每个人表示感谢，并且赞赏这次良好的讨论经历的时候， 一个 Linux 内核邮件列表的成员表示，他觉得我的问题得到解决并非由于我是这个列表中的&lt;strong&gt;名&lt;/strong&gt;人，而是因为我用了正确的方式来提问。&lt;/p&gt;
&lt;p&gt;黑客从某种角度来说是拥有丰富知识但缺乏人情味的家伙；我相信他是对的，如果我&lt;strong&gt;像&lt;/strong&gt;个乞讨者那样提问，不论我是谁，一定会惹恼某些人或者被他们忽视。他建议我记下这件事，这直接导致了本指南的出现。&lt;/p&gt;
&lt;h2 id=&quot;如果得不到回答&quot;&gt;如果得不到回答&lt;/h2&gt;
&lt;p&gt;如果仍得不到回答，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。&lt;/p&gt;
&lt;p&gt;总的来说，简单的重复张贴问题是个很糟的点子。这将被视为无意义的喧闹。有点耐心，知道你问题答案的人可能生活在不同的时区，可能正在睡觉，也有可能你的问题一开始就没有组织好。&lt;/p&gt;
&lt;p&gt;你可以通过其他渠道获得帮助，这些渠道通常更适合初学者的需要。&lt;/p&gt;
&lt;p&gt;有许多网上的以及本地的使用者群组，由热情的软件爱好者（即使他们可能从没亲自写过任何软件）组成。通常人们组建这样的团体来互相帮助并帮助新手。&lt;/p&gt;
&lt;p&gt;另外，你可以向很多商业公司寻求帮助，不论公司大还是小。别为要付费才能获得帮助而感到沮丧！毕竟，假使你的汽车发动机汽缸密封圈爆掉了 —— 完全可能如此 —— 你还得把它送到修车铺，并且为维修付费。就算软件没花费你一分钱，你也不能强求技术支持总是免费的。&lt;/p&gt;
&lt;p&gt;对像是 Linux 这种大众化的软件，每个开发者至少会对应到上万名使用者。根本不可能由一个人来处理来自上万名使用者的求助电话。要知道，即使你要为这些协助付费，和你所购买的同类软件相比，你所付出的也是微不足道的（通常封闭源代码软件的技术支持费用比开源软件的要高得多，且内容也没那么丰富）。&lt;/p&gt;
&lt;h2 id=&quot;如何更好地回答问题&quot;&gt;如何更好地回答问题&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;态度和善一点&lt;/strong&gt;。问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对初犯者私下回复&lt;/strong&gt;。对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找常见问题都不知道。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果你不确定，一定要说出来&lt;/strong&gt;！一个听起来权威的错误回复比没有还要糟，别因为听起来像个专家很好玩，就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果帮不了忙，也别妨碍他&lt;/strong&gt;。不要在实际步骤上开玩笑，那样也许会毁了使用者的设置 —— 有些可怜的呆瓜会把它当成真的指令。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;试探性的反问以引出更多的细节&lt;/strong&gt;。如果你做得好，提问者可以学到点东西 —— 你也可以。试试将蠢问题转变成好问题，别忘了我们都曾是新手。&lt;/p&gt;
&lt;p&gt;尽管对那些懒虫抱怨一声 RTFM 是正当的，能指出文件的位置（即使只是建议个 Google 搜索关键词）会更好。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果你决定回答，就请给出好的答案&lt;/strong&gt;。当别人正在用错误的工具或方法时别建议笨拙的权宜之计（workaround），应推荐更好的工具，重新界定问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;正面的回答问题&lt;/strong&gt;！如果这个提问者已经很深入的研究而且也表明已经试过 X 、 Y 、 Z 、 A 、 B 、 C 但没得到结果，回答 &lt;code&gt;试试看 A 或是 B&lt;/code&gt; 或者 &lt;code&gt;试试 X 、 Y 、 Z 、 A 、 B 、 C&lt;/code&gt; 并附上一个链接一点用都没有。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;帮助你的社区从问题中学习&lt;/strong&gt;。当回复一个好问题时，问问自己&lt;code&gt;如何修改相关文件或常见问题文件以免再次解答同样的问题？&lt;/code&gt;，接着再向文件维护者发一份补丁。&lt;/p&gt;
&lt;p&gt;如果你是在研究一番后才做出的回答，&lt;strong&gt;展现你的技巧而不是直接端出结果&lt;/strong&gt;。毕竟&lt;code&gt;授人以鱼不如授人以渔&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;相关资源&quot;&gt;相关资源&lt;/h2&gt;
&lt;p&gt;如果你需要个人电脑、Unix 系统和网络如何运作的基础知识，参阅 &lt;a href=&quot;http://en.tldp.org/HOWTO/Unix-and-Internet-Fundamentals-HOWTO/&quot;&gt;Unix 系统和网络基本原理&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;当你发布软件或补丁时，试着按&lt;a href=&quot;http://en.tldp.org/HOWTO/Software-Release-Practice-HOWTO/index.html&quot;&gt;软件发布实践&lt;/a&gt;操作。&lt;/p&gt;
&lt;h2 id=&quot;鸣谢&quot;&gt;鸣谢&lt;/h2&gt;
&lt;p&gt;Evelyn Mitchel 贡献了一些愚蠢问题例子并启发了编写&lt;code&gt;如何更好地回答问题&lt;/code&gt;这一节， Mikhail Ramendik 贡献了一些特别有价值的建议和改进。&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
  </entry>
  <entry xml:base="https://lyyl.me/">
    <title type="text">Adaptor 适配器模式</title>
    <id>https://lyyl.me/posts/adaptor</id>
    <updated>2021-10-09T00:00:00Z</updated>
    <published>2021-10-09T00:00:00Z</published>
    <link href="https://lyyl.me/posts/adaptor" />
    <author>
      <name>YangLiu</name>
    </author>
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;
  &lt;title&gt;-&lt;/title&gt;
  &lt;style&gt;
    html {
      line-height: 1.5;
      font-family: Georgia, serif;
      font-size: 20px;
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      word-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 1em;
      }
    }
    @media print {
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li &gt; ol, li &gt; ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
      font-size: 85%;
      margin: 0;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
    pre &gt; code.sourceCode { white-space: pre; position: relative; }
    pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }
    pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }
    .sourceCode { overflow: visible; }
    code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }
    div.sourceCode { margin: 1em 0; }
    pre.sourceCode { margin: 0; }
    @media screen {
    div.sourceCode { overflow: auto; }
    }
    @media print {
    pre &gt; code.sourceCode { white-space: pre-wrap; }
    pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }
    }
    pre.numberSource code
      { counter-reset: source-line 0; }
    pre.numberSource code &gt; span
      { position: relative; left: -4em; counter-increment: source-line; }
    pre.numberSource code &gt; span &gt; a:first-child::before
      { content: counter(source-line);
        position: relative; left: -1em; text-align: right; vertical-align: baseline;
        border: none; display: inline-block;
        -webkit-touch-callout: none; -webkit-user-select: none;
        -khtml-user-select: none; -moz-user-select: none;
        -ms-user-select: none; user-select: none;
        padding: 0 4px; width: 4em;
        color: #aaaaaa;
      }
    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
    div.sourceCode
      {   }
    @media screen {
    pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }
    }
    code span.al { color: #ff0000; font-weight: bold; } /* Alert */
    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
    code span.at { color: #7d9029; } /* Attribute */
    code span.bn { color: #40a070; } /* BaseN */
    code span.bu { } /* BuiltIn */
    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
    code span.ch { color: #4070a0; } /* Char */
    code span.cn { color: #880000; } /* Constant */
    code span.co { color: #60a0b0; font-style: italic; } /* Comment */
    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
    code span.do { color: #ba2121; font-style: italic; } /* Documentation */
    code span.dt { color: #902000; } /* DataType */
    code span.dv { color: #40a070; } /* DecVal */
    code span.er { color: #ff0000; font-weight: bold; } /* Error */
    code span.ex { } /* Extension */
    code span.fl { color: #40a070; } /* Float */
    code span.fu { color: #06287e; } /* Function */
    code span.im { } /* Import */
    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
    code span.kw { color: #007020; font-weight: bold; } /* Keyword */
    code span.op { color: #666666; } /* Operator */
    code span.ot { color: #007020; } /* Other */
    code span.pp { color: #bc7a00; } /* Preprocessor */
    code span.sc { color: #4070a0; } /* SpecialChar */
    code span.ss { color: #bb6688; } /* SpecialString */
    code span.st { color: #4070a0; } /* String */
    code span.va { color: #19177c; } /* Variable */
    code span.vs { color: #4070a0; } /* VerbatimString */
    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h2 id=&quot;序&quot;&gt;序&lt;/h2&gt;
&lt;p&gt;今天看了侯捷先生的视频课，才发现 queue 这个容器实际上是 deque 的一层封装，这样的设计对应了设计模式中的 Adaptor ，即：适配器模式，本文就着适配器模式，基于类库的 deque ，来 step-by-step 地适配一份 queue 的实现。&lt;/p&gt;
&lt;p&gt;其实适配器模式也反映了所谓的 Composition(i.e. 复合/组合) 这种类间关系，通过进行类的组合，提高接口和代码的复用性，从而减少为了适配不同接口而造成相同组件的重复开发(e.g. queue 和 deque 都有队头弹出的操作，但如果我们已经实现了 deque 中的 pop_front 方法，那么对于 queue 而言就不必重复写一份 queue 的 pop_front 逻辑，而是吃现成，直接拿 deque 的来用就好了)。&lt;/p&gt;
&lt;p&gt;值得注意的是，组合模式(Composite Pattern)也是一种常见的设计模式，这里提“组合”并不是说适配器模式等价于组合模式，适配器模式，而组合模式则更体现了一种相似对象间的结构关系(可以想象组合模式就是设计一个由对象构成的树模型，保持了单个节点访问和树整体访问时接口的一致性)。&lt;/p&gt;
&lt;h2 id=&quot;常见的有哪几种适配器&quot;&gt;常见的有哪几种适配器？&lt;/h2&gt;
&lt;h3 id=&quot;类适配器&quot;&gt;类适配器&lt;/h3&gt;
&lt;p&gt;适配器类需要继承被适配器类（原来的东西）实现目标接口（转换得到的东西）。它的缺点是由于继承导致的强耦合性，暴露了被适配器中的方法，好处是可以按需重写所有方法。&lt;/p&gt;
&lt;h3 id=&quot;对象适配器&quot;&gt;对象适配器&lt;/h3&gt;
&lt;p&gt;不需要继承，而是通过 new 一个实例，包装了通过实例调用的原类所实现的方法，从而产生间接适配的效果。复杂系统中尽量不使用继承关系，所以对象适配器是最常用的一种适配器类型。&lt;/p&gt;
&lt;h3 id=&quot;接口适配器&quot;&gt;接口适配器&lt;/h3&gt;
&lt;p&gt;有些适配方法不需要全部实现，这种情况下可以使用一个抽象类实现接口中的全部方法，然后用匿名内部类的方式实现自己用的方法，类似于监听器类。&lt;/p&gt;
&lt;h2 id=&quot;sgi-stl-中的-queue&quot;&gt;SGI-STL 中的 queue&lt;/h2&gt;
&lt;p&gt;一般在 Linux 服务器上，使用居多的 C++ 编译器分别是前辈 g++ 和后起之秀 clang++。libstdc++ 是 GCC 项目内的 C++ 标准库实现，由 g++ 编译的代码会自动链接到 libstdc++；libc++ 则是由 LLVM 搞的另一套 C++ 标准库实现，由 clang++ 编译的代码默认链接到 libc++（当然目前多数的 Linux 发行版系统上都不会自带它，用之前需要我们手动安装）。&lt;/p&gt;
&lt;p&gt;gcc 项目里的 libstdc++ 文件夹下包含了从 C++98 到 C++20 的所有库内头文件，优点是许多新的特性都得到了实现；但同时也许是因为一直在维护，所以头文件内都有大量的如 &lt;code&gt;__cplusplus&lt;/code&gt; 等判断编译版本的宏的存在，可读性不佳。&lt;/p&gt;
&lt;p&gt;SGI-STL 是一版可读性较高的 STL 实现，缺点是目前不再维护，年代较久远，SourceForge 上的最新版本也是08年上传的了。但就学习 STL 源码来说，SIG-STL 确是一个不错的选择。&lt;/p&gt;
&lt;h2 id=&quot;如何通过适配实现-queue&quot;&gt;如何通过适配实现 queue&lt;/h2&gt;
&lt;p&gt;前面讲了，STL 中的 queue 是基于双端队列 deque 的封装，也就是说，queue 的主要功能来自于 deque 模板类，是一种“受限的”deque。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://myblog-1304161589.cos.ap-beijing.myqcloud.com/static/posts/Adaptor/queue_cppref.png&quot; title=&quot;C++ 文档对 Queue 的描述&quot; caption=&quot;我们需要实现上面的这几个方法&quot; alt=&quot;image load failed&quot; width=&quot;750px&quot; position=&quot;center&quot;&gt;&lt;/p&gt;
&lt;p&gt;根据 cppreference 中对 queue 的成员描述，我们可以轻松地写出一份按类适配的 queue 实现。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#ifndef __QUEUE_H_&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#define __QUEUE_H_&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;deque&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;namespace&lt;/span&gt; MiniSTL &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;typename&lt;/span&gt; T&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Queue &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;deque&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// Alias&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;size_type&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;size_t&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;value_type&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; T&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-13&quot;&gt;&lt;a href=&quot;#cb1-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;using&lt;/span&gt; reference &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;value_type&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;amp;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-14&quot;&gt;&lt;a href=&quot;#cb1-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;using&lt;/span&gt; const_reference &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;value_type&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;amp;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-15&quot;&gt;&lt;a href=&quot;#cb1-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;using&lt;/span&gt; r_reference &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;value_type&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-16&quot;&gt;&lt;a href=&quot;#cb1-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;using&lt;/span&gt; pointer &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;value_type&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-17&quot;&gt;&lt;a href=&quot;#cb1-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;using&lt;/span&gt; const_pointer &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;value_type&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-18&quot;&gt;&lt;a href=&quot;#cb1-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-19&quot;&gt;&lt;a href=&quot;#cb1-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;typename&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;deque&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; Container&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-20&quot;&gt;&lt;a href=&quot;#cb1-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;typename&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;deque&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&quot;op&quot;&gt;&amp;gt;::&lt;/span&gt;iterator iterator&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-21&quot;&gt;&lt;a href=&quot;#cb1-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;typename&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;deque&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&quot;op&quot;&gt;&amp;gt;::&lt;/span&gt;const_iterator const_iterator&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-22&quot;&gt;&lt;a href=&quot;#cb1-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-23&quot;&gt;&lt;a href=&quot;#cb1-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// Special Member Functions&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-24&quot;&gt;&lt;a href=&quot;#cb1-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Queue&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-25&quot;&gt;&lt;a href=&quot;#cb1-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-26&quot;&gt;&lt;a href=&quot;#cb1-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Queue&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;const&lt;/span&gt; Queue&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; rhs&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-27&quot;&gt;&lt;a href=&quot;#cb1-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-28&quot;&gt;&lt;a href=&quot;#cb1-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Queue&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;Queue&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rhs&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-29&quot;&gt;&lt;a href=&quot;#cb1-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-30&quot;&gt;&lt;a href=&quot;#cb1-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Queue&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;const&lt;/span&gt; Queue&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; rhs&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-31&quot;&gt;&lt;a href=&quot;#cb1-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-32&quot;&gt;&lt;a href=&quot;#cb1-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Queue&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=(&lt;/span&gt;Queue&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rhs&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-33&quot;&gt;&lt;a href=&quot;#cb1-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-34&quot;&gt;&lt;a href=&quot;#cb1-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;~&lt;/span&gt;Queue&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-35&quot;&gt;&lt;a href=&quot;#cb1-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-36&quot;&gt;&lt;a href=&quot;#cb1-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// Element access&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-37&quot;&gt;&lt;a href=&quot;#cb1-37&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    reference front&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&amp;gt;&lt;/span&gt;front&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-38&quot;&gt;&lt;a href=&quot;#cb1-38&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    const_reference front&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&amp;gt;&lt;/span&gt;front&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-39&quot;&gt;&lt;a href=&quot;#cb1-39&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    reference back&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&amp;gt;&lt;/span&gt;back&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-40&quot;&gt;&lt;a href=&quot;#cb1-40&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    const_reference back&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&amp;gt;&lt;/span&gt;back&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-41&quot;&gt;&lt;a href=&quot;#cb1-41&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-42&quot;&gt;&lt;a href=&quot;#cb1-42&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// Capacity&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-43&quot;&gt;&lt;a href=&quot;#cb1-43&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;bool&lt;/span&gt; empty&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; Container&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;empty&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-44&quot;&gt;&lt;a href=&quot;#cb1-44&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;size_type&lt;/span&gt; size&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;noexcept&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; Container&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;size&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-45&quot;&gt;&lt;a href=&quot;#cb1-45&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;/* [[nodiscard]] bool empty() const {}; */&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// since C++20&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-46&quot;&gt;&lt;a href=&quot;#cb1-46&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-47&quot;&gt;&lt;a href=&quot;#cb1-47&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// Modifiers&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-48&quot;&gt;&lt;a href=&quot;#cb1-48&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; push&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;value_type&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; val&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&amp;gt;&lt;/span&gt;push_back&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;val&lt;span class=&quot;op&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-49&quot;&gt;&lt;a href=&quot;#cb1-49&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; push&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;value_type&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; val&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&amp;gt;&lt;/span&gt;push_back&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;val&lt;span class=&quot;op&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-50&quot;&gt;&lt;a href=&quot;#cb1-50&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-51&quot;&gt;&lt;a href=&quot;#cb1-51&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;typename&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;...&lt;/span&gt; Args&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-52&quot;&gt;&lt;a href=&quot;#cb1-52&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; emplace&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;Args&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;...&lt;/span&gt; args&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{}&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// To-do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-53&quot;&gt;&lt;a href=&quot;#cb1-53&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;typename&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;...&lt;/span&gt; Args&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-54&quot;&gt;&lt;a href=&quot;#cb1-54&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;decltype&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; emplace&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;Args&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;...&lt;/span&gt; args&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{}&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// To-do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-55&quot;&gt;&lt;a href=&quot;#cb1-55&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-56&quot;&gt;&lt;a href=&quot;#cb1-56&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; pop&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&amp;gt;&lt;/span&gt;pop_front&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-57&quot;&gt;&lt;a href=&quot;#cb1-57&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-58&quot;&gt;&lt;a href=&quot;#cb1-58&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; swap&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;Queue&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;noexcept&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&amp;gt;&lt;/span&gt;swap&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;other&lt;span class=&quot;op&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-59&quot;&gt;&lt;a href=&quot;#cb1-59&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-60&quot;&gt;&lt;a href=&quot;#cb1-60&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// namespace MiniSTL&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-61&quot;&gt;&lt;a href=&quot;#cb1-61&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-62&quot;&gt;&lt;a href=&quot;#cb1-62&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#endif&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;采用继承的方式该如何实现呢&quot;&gt;采用继承的方式该如何实现呢？&lt;/h3&gt;
&lt;p&gt;如果采用的是继承的方式，我们就可以直接在类内部构造一个 private / protect 的 deque 对象，然后再通过封装 queue 中对外开放的方法，这样即可实现上文提到的对象适配器。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://myblog-1304161589.cos.ap-beijing.myqcloud.com/static/posts/Adaptor/sgi_stl_queue.png&quot; title=&quot;SGI-STL stl_queue.h&quot; caption=&quot;queue 类模板内构造了一个 _Sequence 类对象，_Sequence 模板参数的默认值是 std::deque&lt;_Tp&gt;，所以实际上 c 就是一个 deque 对象。&quot; alt=&quot;image load failed&quot; width=&quot;750px&quot; position=&quot;center&quot;&gt;&lt;/p&gt;
&lt;p&gt;其实，不管是 libstdc++ 还是 SGI-STL ，queue 的实现均采用的是对象适配器模式。相比于类适配器，对象适配器是更常见的，在复杂系统中，同时也是更推荐的一种实现类型。&lt;/p&gt;
&lt;h3 id=&quot;为什么是适配而不是继承&quot;&gt;为什么是适配？而不是继承？&lt;/h3&gt;
&lt;p&gt;从代码复用的角度看，queue 似乎可以作为 deque 的子类，直接继承 deque 类的大部分方法，不一定非得采用 Adaptor 才能复用大部分代码。所以，为什么是适配？而不是直接继承呢？&lt;/p&gt;
&lt;p&gt;这里打个岔，这个问题让笔者想起了 Ivan Čukić 说过的这段话，大意是讲 C++ 似乎更应该被成为一种泛型编程语言，因为 STL 本身的大部分实现是建立在模板(由编译期完成的静态绑定式泛型)和一些函数式编程(更注重解决什么问题，而非如何解决问题)的概念之上的，真正用到继承式的面向对象(由运行时藉由虚函数表实现的动态绑定式泛型)写法少之又少。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’ve always been amused that most developers say C++ is an object-oriented language. The reason this is amusing is that barely any parts of the standard library of the C++ programming language (commonly referred to as the Standard Template Library, or STL) use inheritance-based polymorphism, which is at the heart of the OOP paradigm. The STL was created by Alexander Stepanov, a vocal critic of OOP. He wanted to create a generic programming library, and he did so by using the C++ template system combined with a few FP techniques. ———— &lt;strong&gt;&lt;em&gt;Functional Programming in C++&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;综上，笔者猜测的原因如下： 1. 写继承代码比较麻烦，需要考虑的东西比较多？ 2. 可能 STL 的作者或者只是考虑代码风格的一致性(毕竟模板库中以模板类和模板函数为主体，似乎没用到基于虚函数的动态绑定？)才没使用继承的形式吧。 3. 水平有限，暂时想不到了…&lt;/p&gt;
&lt;h2 id=&quot;参考引用&quot;&gt;参考&amp;amp;引用&lt;/h2&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://book.douban.com/subject/34923168/&quot;&gt;C++ 函数式编程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.cppreference.com/w/cpp/container/queue&quot;&gt;Cppreference - Queue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.cppreference.com/w/cpp/container/deque&quot;&gt;Cppreference - Deque&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/karottc/sgi-stl/blob/master/stl_queue.h&quot;&gt;SGI-STL - stl_queue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/karottc/sgi-stl/blob/master/stl_deque.h&quot;&gt;SGI-STL - stl_deque&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
  </entry>
  <entry xml:base="https://lyyl.me/">
    <title type="text">只有她</title>
    <id>https://lyyl.me/posts/only_her</id>
    <updated>2019-01-25T00:00:00Z</updated>
    <published>2019-01-25T00:00:00Z</published>
    <link href="https://lyyl.me/posts/only_her" />
    <author>
      <name>YangLiu</name>
    </author>
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;
  &lt;title&gt;-&lt;/title&gt;
  &lt;style&gt;
    html {
      line-height: 1.5;
      font-family: Georgia, serif;
      font-size: 20px;
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      word-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 1em;
      }
    }
    @media print {
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li &gt; ol, li &gt; ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
      font-size: 85%;
      margin: 0;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;&lt;i&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;快瞧，快瞧！&lt;/i&gt;&lt;br&gt; &lt;i&gt;快瞧那块儿芝宝打火机，&lt;/i&gt;&lt;br&gt; &lt;i&gt;她是多么的精致，&lt;/i&gt;&lt;br&gt; &lt;i&gt;多么的令人惬意。&lt;/i&gt;&lt;br&gt; &lt;i&gt;当我的食指滑过，&lt;/i&gt;&lt;br&gt; &lt;i&gt;滑过她绛色漆皮的外壳儿，&lt;/i&gt;&lt;br&gt; &lt;i&gt;机壳儿上流过油润的光泽，&lt;/i&gt;&lt;br&gt; &lt;i&gt;我仿佛看见，&lt;/i&gt;&lt;br&gt; &lt;i&gt;一个绝美的少妇，&lt;/i&gt;&lt;br&gt; &lt;i&gt;裹在她的裘皮大衣里，&lt;/i&gt;&lt;br&gt; &lt;i&gt;颔首低眉，忍俊不禁。&lt;/i&gt;&lt;br&gt; &lt;i&gt;大衣后背的彩绘——&lt;/i&gt;&lt;br&gt; &lt;i&gt;是安迪沃霍的番茄罐头，&lt;/i&gt;&lt;br&gt; &lt;i&gt;略显遗憾的是，&lt;/i&gt;&lt;br&gt; &lt;i&gt;“坎贝尔”的白色斜体字，&lt;/i&gt;&lt;br&gt; &lt;i&gt;一直显得——模糊不清&lt;/i&gt;&lt;br&gt; &lt;i&gt;直到那天晚上，&lt;/i&gt;&lt;br&gt; &lt;i&gt;负责印染的师傅，&lt;/i&gt;&lt;br&gt; &lt;i&gt;攥着1664的空瓶子，&lt;/i&gt;&lt;br&gt; &lt;i&gt;喝得酩酊大醉，&lt;/i&gt;&lt;br&gt; &lt;i&gt;他心里只挂念着&lt;/i&gt;&lt;br&gt; &lt;i&gt;那只红色的尤物。&lt;/i&gt;&lt;br&gt; &lt;i&gt;索性填补了空白处，&lt;/i&gt;&lt;br&gt; &lt;i&gt;写上最自私的话，&lt;/i&gt;&lt;br&gt; &lt;i&gt;只有她。&lt;/i&gt;&lt;br&gt;&lt;/p&gt;
&lt;p align=&quot;right&quot;&gt;
2019/1/25
&lt;/p&gt;
&lt;p align=&quot;right&quot;&gt;
于喵先生咖啡馆
&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
  </entry>
  <entry xml:base="https://lyyl.me/">
    <title type="text">教务系统选课小助手</title>
    <id>https://lyyl.me/posts/USTBJwAssistance</id>
    <updated>2020-02-28T00:00:00Z</updated>
    <published>2020-02-28T00:00:00Z</published>
    <link href="https://lyyl.me/posts/USTBJwAssistance" />
    <author>
      <name>YangLiu</name>
    </author>
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;
  &lt;title&gt;-&lt;/title&gt;
  &lt;style&gt;
    html {
      line-height: 1.5;
      font-family: Georgia, serif;
      font-size: 20px;
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      word-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 1em;
      }
    }
    @media print {
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li &gt; ol, li &gt; ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
      font-size: 85%;
      margin: 0;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
    pre &gt; code.sourceCode { white-space: pre; position: relative; }
    pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }
    pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }
    .sourceCode { overflow: visible; }
    code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }
    div.sourceCode { margin: 1em 0; }
    pre.sourceCode { margin: 0; }
    @media screen {
    div.sourceCode { overflow: auto; }
    }
    @media print {
    pre &gt; code.sourceCode { white-space: pre-wrap; }
    pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }
    }
    pre.numberSource code
      { counter-reset: source-line 0; }
    pre.numberSource code &gt; span
      { position: relative; left: -4em; counter-increment: source-line; }
    pre.numberSource code &gt; span &gt; a:first-child::before
      { content: counter(source-line);
        position: relative; left: -1em; text-align: right; vertical-align: baseline;
        border: none; display: inline-block;
        -webkit-touch-callout: none; -webkit-user-select: none;
        -khtml-user-select: none; -moz-user-select: none;
        -ms-user-select: none; user-select: none;
        padding: 0 4px; width: 4em;
        color: #aaaaaa;
      }
    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
    div.sourceCode
      {   }
    @media screen {
    pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }
    }
    code span.al { color: #ff0000; font-weight: bold; } /* Alert */
    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
    code span.at { color: #7d9029; } /* Attribute */
    code span.bn { color: #40a070; } /* BaseN */
    code span.bu { } /* BuiltIn */
    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
    code span.ch { color: #4070a0; } /* Char */
    code span.cn { color: #880000; } /* Constant */
    code span.co { color: #60a0b0; font-style: italic; } /* Comment */
    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
    code span.do { color: #ba2121; font-style: italic; } /* Documentation */
    code span.dt { color: #902000; } /* DataType */
    code span.dv { color: #40a070; } /* DecVal */
    code span.er { color: #ff0000; font-weight: bold; } /* Error */
    code span.ex { } /* Extension */
    code span.fl { color: #40a070; } /* Float */
    code span.fu { color: #06287e; } /* Function */
    code span.im { } /* Import */
    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
    code span.kw { color: #007020; font-weight: bold; } /* Keyword */
    code span.op { color: #666666; } /* Operator */
    code span.ot { color: #007020; } /* Other */
    code span.pp { color: #bc7a00; } /* Preprocessor */
    code span.sc { color: #4070a0; } /* SpecialChar */
    code span.ss { color: #bb6688; } /* SpecialString */
    code span.st { color: #4070a0; } /* String */
    code span.va { color: #19177c; } /* Variable */
    code span.vs { color: #4070a0; } /* VerbatimString */
    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h2 id=&quot;项目起源&quot;&gt;&lt;del&gt;项目&lt;/del&gt;起源&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;假期宅家闲散，整日足不出户，&lt;/p&gt;
&lt;p&gt;适逢学校要求选课，选课所使用的「USTB本科教学网（vpn途径访问）」渲染太多，加载较慢。&lt;/p&gt;
&lt;p&gt;这一点对家里网络环境较差的选课学生（我）不够友好，&lt;/p&gt;
&lt;p&gt;加上自己宅家实在无聊，于是，便萌生出了写一个能够替代浏览器的自动选课脚本的想法。&lt;/p&gt;
&lt;h2 id=&quot;项目现状&quot;&gt;&lt;del&gt;项目&lt;/del&gt;现状&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;脚本的最初目的很简单：&lt;/p&gt;
&lt;p&gt;即「帮助本校同学迅速地获知实时的可选公选课的相关信息，并针对自己喜欢的课程去重复地进行选课尝试」，&lt;/p&gt;
&lt;p&gt;重复的选课尝试功能是由脚本自动实现的，这一点无须使用者上心。&lt;/p&gt;
&lt;p&gt;使用者在启动脚本后仅需根据提示来键入相关的登陆&amp;amp;选课信息，等待选课结果即可。&lt;/p&gt;
&lt;p&gt;此外，脚本目前已基本实现了：自动选课&amp;amp;退课，自动获取课程表、创新学分、以及课程成绩等一切原网站所能够获取的个人数据并清洗入库。&lt;/p&gt;
&lt;p&gt;另：脚本中涉及的个人账号&amp;amp;密码将不以任何形式存储在任何实体中；&lt;/p&gt;
&lt;p&gt;​ 脚本概不提供各请求所涉及到的任何 api，烹饪菜谱已备齐，请食用者自行获取原食材&lt;/p&gt;
&lt;h2 id=&quot;使用指南&quot;&gt;使用指南&lt;/h2&gt;
&lt;hr /&gt;
&lt;h5 id=&quot;安装依赖&quot;&gt;安装依赖&lt;/h5&gt;
&lt;p&gt;如果你想体验脚本的功能，请按如下步骤进行：&lt;/p&gt;
&lt;p&gt;（默认使用者已安装CPython37以上的 &lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt; 发行版）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进入ustbJwspider根目录下，启动cmd命令行/Terminal，键入：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;pip3 install &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;r requirements.txt                    &lt;span class=&quot;co&quot;&gt;#使用pip安装&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;到 MongoDB 官网上下载适配自己系统版本的 &lt;a href=&quot;https://www.mongodb.com/download-center/community&quot;&gt;MongoDB&lt;/a&gt; 安装包，解压安装&lt;/p&gt;
&lt;p&gt;到 RoboStudio 官网下载 &lt;a href=&quot;https://robomongo.org/download&quot;&gt;Robo3T&lt;/a&gt;（GUI），安装后打开GUI，建立位于本地的MongoClient&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;使用脚本&quot;&gt;使用脚本&lt;/h5&gt;
&lt;p&gt;进入ustbJwspider根目录下，运行app.py文件，根据操作提示键入相关信息即可。&lt;/p&gt;
&lt;h2 id=&quot;运行截图&quot;&gt;运行截图&lt;/h2&gt;
&lt;hr /&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot; checked=&quot;&quot; /&gt;
&lt;strong&gt;&lt;em&gt;脚本登陆&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&quot;https://myblog-1304161589.cos.ap-beijing.myqcloud.com/ustbJwcrawler/1.png&quot; alt=&quot;脚本登陆&quot; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot; checked=&quot;&quot; /&gt;
&lt;strong&gt;&lt;em&gt;功能选择&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&quot;https://myblog-1304161589.cos.ap-beijing.myqcloud.com/ustbJwcrawler/2.png&quot; alt=&quot;功能选择&quot; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot; checked=&quot;&quot; /&gt;
&lt;strong&gt;&lt;em&gt;尝试选课&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&quot;https://myblog-1304161589.cos.ap-beijing.myqcloud.com/ustbJwcrawler/3.png&quot; alt=&quot;尝试选课&quot; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot; checked=&quot;&quot; /&gt;
&lt;strong&gt;&lt;em&gt;尝试退课&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&quot;https://myblog-1304161589.cos.ap-beijing.myqcloud.com/ustbJwcrawler/4.png&quot; alt=&quot;尝试退课&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;已知问题&quot;&gt;已知问题&lt;/h2&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;代码繁冗，有待重构&amp;amp;封装&lt;/li&gt;
&lt;li&gt;脚本在「与用户交互」方面优化不足&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;to-do-list&quot;&gt;To-do List&lt;/h2&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;GUI&lt;/li&gt;
&lt;li&gt;针对个人成绩进行可视化分析&lt;/li&gt;
&lt;li&gt;部署上线，将各功能封装为可替代原网址内容的接口&lt;/li&gt;
&lt;li&gt;&lt;del&gt;spider有夸大的嫌疑，应将项目更名为：ustbJwcrawler&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;交流沟通&quot;&gt;交流沟通&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;由于作者水平有限，在脚本执行的过程中，难免会出现这样或那样的问题，&lt;/p&gt;
&lt;p&gt;除了目前已发现的问题外，若脚本由于别的原因而屡次报错，欢迎来提Issue 和 PR (〃‘▽’〃)。&lt;/p&gt;
&lt;h2 id=&quot;版本历史&quot;&gt;版本历史&lt;/h2&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;0.1.2
&lt;ul&gt;
&lt;li&gt;实现选课和退课功能&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;0.1.1
&lt;ul&gt;
&lt;li&gt;实现公选课数据的清洗&amp;amp;入库&lt;/li&gt;
&lt;li&gt;实现登陆&amp;amp;选课的交互逻辑&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;0.1.0
&lt;ul&gt;
&lt;li&gt;main()编写完成&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;更新-202073&quot;&gt;更新-2020/7/3&lt;/h2&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;猜测：因为疫情，学校为方便学生登陆 elearning，故开放了 elearning 公网接入，&lt;/p&gt;
&lt;p&gt;​ 此次更新替换了走学校vpn的登陆方式，改为公网登入 elearning。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;license&quot;&gt;LICENSE&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jacklanda/ustbJwspider/blob/master/LICENSE&quot;&gt;MIT License&lt;/a&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
  </entry>
  <entry xml:base="https://lyyl.me/">
    <title type="text">C++的拷贝与移动</title>
    <id>https://lyyl.me/posts/cpp_copy_and_move</id>
    <updated>2021-09-07T00:00:00Z</updated>
    <published>2021-09-07T00:00:00Z</published>
    <link href="https://lyyl.me/posts/cpp_copy_and_move" />
    <author>
      <name>YangLiu</name>
    </author>
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;
  &lt;title&gt;-&lt;/title&gt;
  &lt;style&gt;
    html {
      line-height: 1.5;
      font-family: Georgia, serif;
      font-size: 20px;
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      word-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 1em;
      }
    }
    @media print {
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li &gt; ol, li &gt; ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
      font-size: 85%;
      margin: 0;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
    pre &gt; code.sourceCode { white-space: pre; position: relative; }
    pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }
    pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }
    .sourceCode { overflow: visible; }
    code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }
    div.sourceCode { margin: 1em 0; }
    pre.sourceCode { margin: 0; }
    @media screen {
    div.sourceCode { overflow: auto; }
    }
    @media print {
    pre &gt; code.sourceCode { white-space: pre-wrap; }
    pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }
    }
    pre.numberSource code
      { counter-reset: source-line 0; }
    pre.numberSource code &gt; span
      { position: relative; left: -4em; counter-increment: source-line; }
    pre.numberSource code &gt; span &gt; a:first-child::before
      { content: counter(source-line);
        position: relative; left: -1em; text-align: right; vertical-align: baseline;
        border: none; display: inline-block;
        -webkit-touch-callout: none; -webkit-user-select: none;
        -khtml-user-select: none; -moz-user-select: none;
        -ms-user-select: none; user-select: none;
        padding: 0 4px; width: 4em;
        color: #aaaaaa;
      }
    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
    div.sourceCode
      {   }
    @media screen {
    pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }
    }
    code span.al { color: #ff0000; font-weight: bold; } /* Alert */
    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
    code span.at { color: #7d9029; } /* Attribute */
    code span.bn { color: #40a070; } /* BaseN */
    code span.bu { } /* BuiltIn */
    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
    code span.ch { color: #4070a0; } /* Char */
    code span.cn { color: #880000; } /* Constant */
    code span.co { color: #60a0b0; font-style: italic; } /* Comment */
    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
    code span.do { color: #ba2121; font-style: italic; } /* Documentation */
    code span.dt { color: #902000; } /* DataType */
    code span.dv { color: #40a070; } /* DecVal */
    code span.er { color: #ff0000; font-weight: bold; } /* Error */
    code span.ex { } /* Extension */
    code span.fl { color: #40a070; } /* Float */
    code span.fu { color: #06287e; } /* Function */
    code span.im { } /* Import */
    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
    code span.kw { color: #007020; font-weight: bold; } /* Keyword */
    code span.op { color: #666666; } /* Operator */
    code span.ot { color: #007020; } /* Other */
    code span.pp { color: #bc7a00; } /* Preprocessor */
    code span.sc { color: #4070a0; } /* SpecialChar */
    code span.ss { color: #bb6688; } /* SpecialString */
    code span.st { color: #4070a0; } /* String */
    code span.va { color: #19177c; } /* Variable */
    code span.vs { color: #4070a0; } /* VerbatimString */
    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h2 id=&quot;序&quot;&gt;序&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;试想，搬家的时候是把家里的东西直接搬到新家去，而不是将所有东西拷贝一份（重买）再放到新家、再把原来的东西全部扔掉（销毁），这是非常反人类的一件事情。               —— —— 《现代C++教程》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作为一名初级开发者，每当你向一个函数传入某个参数的时候，是否习惯了 &lt;code&gt;input -&amp;gt; blackbox -&amp;gt; output&lt;/code&gt; 这样的黑盒思维，并认为“我不需要关心函数内部到底发生了什么，只需考虑调用什么接口能帮我实现什么样的需求就好了。”、“我可以按着官方文档的说明传参并顺利获取返回值即可，能 work 就行，别的我管不着。”… …&lt;/p&gt;
&lt;p&gt;假如你是一名单纯的 Pythonist，这样或许还情有可原(原因在下文会提到)。但作为一名 C/C++ 程序员乃至系统编程人员，这种思维直接证明了“确实，你是个新手”，且并未领略到 C++ 这门优秀语言的真正优势。”&lt;/p&gt;
&lt;p&gt;这篇文章记录了自己这一周以来学习到的有关“左右值”、“拷贝语义”、“移动语义”的知识，以及可以针对性地考虑使用一些 trick，这可以帮助我们优化程序性能。&lt;/p&gt;
&lt;h2 id=&quot;实验环境&quot;&gt;实验环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;x86-64 gcc 10.1&lt;/li&gt;
&lt;li&gt;汇编代码由在线编译平台 &lt;u&gt;&lt;a href=&quot;https://godbolt.org/&quot;&gt;Compiler Explorer&lt;/a&gt;&lt;/u&gt; 生成。&lt;/li&gt;
&lt;li&gt;涉及的编译标志位：-std=c++11, -std=c++17, -fno-elide-constructors&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;prior-knowledge&quot;&gt;Prior knowledge&lt;/h2&gt;
&lt;p&gt;本文假定读者已经掌握了面向对象以及 C++ 的构造/析构函数、运算符重载等基本概念。&lt;/p&gt;
&lt;h3 id=&quot;区别构造和赋值&quot;&gt;区别构造和赋值&lt;/h3&gt;
&lt;h3 id=&quot;一样的结果不一样的行为&quot;&gt;一样的结果&amp;amp;不一样的行为&lt;/h3&gt;
&lt;p&gt;为了便于理解后面的内容，我们定义了一个 Widget 类。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; Widget &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Widget&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;                       &lt;span class=&quot;co&quot;&gt;// 默认构造函数&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Widget&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;bool&lt;/span&gt; sign&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; isAvailable&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;sign&lt;span class=&quot;op&quot;&gt;){};&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 普通构造函数&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Widget&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;const&lt;/span&gt; Widget&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; isAvailable&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;w&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;isAvailable&lt;span class=&quot;op&quot;&gt;){};&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 拷贝构造函数&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Widget&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;Widget&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; isAvailable&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;exchange&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;w&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;isAvailable&lt;span class=&quot;op&quot;&gt;)){};&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 移动构造函数&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Widget&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;const&lt;/span&gt; Widget&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 拷贝赋值函数(操作符)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        isAvailable &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; w&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;isAvailable&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Widget&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=(&lt;/span&gt;Widget&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; w&lt;span class=&quot;op&quot;&gt;){&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 移动赋值函数(操作符)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        isAvailable &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; w&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;isAvailable&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-13&quot;&gt;&lt;a href=&quot;#cb1-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-14&quot;&gt;&lt;a href=&quot;#cb1-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-15&quot;&gt;&lt;a href=&quot;#cb1-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;~&lt;/span&gt;Widget&lt;span class=&quot;op&quot;&gt;(){};&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 析构函数&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-16&quot;&gt;&lt;a href=&quot;#cb1-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-17&quot;&gt;&lt;a href=&quot;#cb1-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;bool&lt;/span&gt; isAvailable &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-18&quot;&gt;&lt;a href=&quot;#cb1-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; s&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-19&quot;&gt;&lt;a href=&quot;#cb1-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接着，咱们来创建几个 Widget 类对象&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; main&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Widget w1&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;        &lt;span class=&quot;co&quot;&gt;// 1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Widget w2&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Widget w3&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;w1&lt;span class=&quot;op&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;co&quot;&gt;// 3&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Widget w4 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; w3&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;co&quot;&gt;// 4&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    w4 &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; w2&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;          &lt;span class=&quot;co&quot;&gt;// 5&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;那么问题来了，上面这四种对象的创建方式，他们有什么异同呢？&lt;/p&gt;
&lt;p&gt;首先，你已经观察到我们在 Widget 类中声明并实现了7个特殊成员函数，从上到下依次是：默认构造函数，普通构造函数，拷贝构造函数，拷贝赋值函数，析构函数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第1种方式创建了新对象 w1，且在创建时没有任何的入参，调用的是默认构造函数；&lt;/li&gt;
&lt;li&gt;第2种方式根据传入的一个布尔字面量 &lt;code&gt;true&lt;/code&gt; 创建了新对象 w2，调用的是普通构造函数；&lt;/li&gt;
&lt;li&gt;第3种方式传入了我们先前创建的 w1 对象，根据现有对象构造新对象 w3，调用了拷贝构造函数；&lt;/li&gt;
&lt;li&gt;第4种方式根据等号右边的现有对象 w3 创建了新对象 w4，同样调用了拷贝构造函数；&lt;/li&gt;
&lt;li&gt;第5种方式看似与第四种方式相同，但不难发现它其实是根据已有对象对同样是已有对象 w4 的重新赋值，因此调用的是拷贝赋值函数，而非拷贝构造函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;怎么 C++ 创建一个对象有这么多花里胡哨的方式？ 的确，最初看到这几个语句的时候我也很疑惑，但随着学习的深入，越来越认同“C++ 给了开发者更多的自由，也给了它们更多的心智负担。”但讲到的这部分内容仅仅是给本文开了个头，暂且先带着疑惑，继续读下去吧~&lt;/p&gt;
&lt;p&gt;这里引出了第一个知识点：构造行为和赋值行为。第3和第4条语句的行为其实是完全等效的，实际调用的都是 Widget 的拷贝构造函数 &lt;code&gt;Widget(const Widget&amp;amp; w)&lt;/code&gt; 。而第5条语句则是先前已经建立了 w2 与 w4 对象，现在是将 w2 对象赋给 w4 对象，属于赋值行为。&lt;/p&gt;
&lt;p&gt;(n.b. 至此，如果你已经十分清楚上面这些语句为什么行为不同，就不用继续跟进下面的内容了。)&lt;/p&gt;
&lt;h3 id=&quot;rule-of-threefivezero&quot;&gt;Rule of three/five/zero&lt;/h3&gt;
&lt;p&gt;我们知道 C++11 是 C++ 发展历程中的一个重要版本，引入了许多现代编程语言特性。在 C++11 以前，只有 “Rule of three” 这种说法，C++11 以后，随着移动语义的引入，便扩展为 “Rule of five” 。&lt;/p&gt;
&lt;p&gt;three 指的类内的三个特殊成员函数：拷贝构造、拷贝赋值和析构。我们上边讲的就是 Rule of three 的内容。&lt;/p&gt;
&lt;p&gt;five 指的是在 three 的基础上引入移动语义(下文会讲)，增加了移动构造函数与移动赋值函数(操作符)，加上原来的3个一共就是5个特殊成员函数。程序员需要手动地显式声明与实现这5个特殊成员函数，因而得名 The rule of five。&lt;/p&gt;
&lt;p&gt;zero 则站在 five 的对立面，也就是说：要么将5个特殊成员函数显式地定义清楚(显式地自定义实现 / 显式地设为默认 default / 显式地通过 delete 禁用)，实现 Rule of five；要么就 Rule of zero，干脆啥也不去定义、实现。&lt;/p&gt;
&lt;h3 id=&quot;语义分类&quot;&gt;语义分类&lt;/h3&gt;
&lt;h4 id=&quot;value-categories&quot;&gt;Value categories&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Each C++ expression (an operator with its operands, a literal, a variable name, etc.) is characterized by two independent properties: a type and a value categories. Each expression has some non-reference type, and each expression belongs to exactly one of the three primary value categories: prvalue, xvalue, and lvalue. &lt;br&gt;        —— —— cppreference/value categories&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面这段话的意思是：每个 C++ 表达式都具有两个独立的属性，一个是类型 (type)，另一个是值类别 (value categories)，如：char, int, double 这些都是常见的 type；而 value categories 则包含了3种类别：左值、纯右值与将亡值。下面将简单介绍一下这几个类别的含义。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&quot;header&quot;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;拥有身份(glvalue)&lt;/th&gt;
&lt;th&gt;不拥有身份&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td&gt;可移动 (rvalue)&lt;/td&gt;
&lt;td&gt;xvalue&lt;/td&gt;
&lt;td&gt;prvalue&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td&gt;不可移动&lt;/td&gt;
&lt;td&gt;lvalue&lt;/td&gt;
&lt;td&gt;不存在&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&quot;左值lvalue&quot;&gt;左值(lvalue)&lt;/h5&gt;
&lt;p&gt;顾名思义左值是位于赋值符号=左边的值，准确地说，左值是在内存中有具体内存位置的值，是在表达式(e.g. 赋值表达式=)运算后依然存在的持久对象。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// lvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; num &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1055&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// lvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;++&lt;/span&gt;num&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// lvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; p_num &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt;num&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// lvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; access&lt;span class=&quot;op&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; num&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;access&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// lvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-8&quot;&gt;&lt;a href=&quot;#cb3-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-9&quot;&gt;&lt;a href=&quot;#cb3-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; arr&lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;]{};&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// lvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-10&quot;&gt;&lt;a href=&quot;#cb3-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;arr&lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;];&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// lvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-11&quot;&gt;&lt;a href=&quot;#cb3-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-12&quot;&gt;&lt;a href=&quot;#cb3-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; foo&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-13&quot;&gt;&lt;a href=&quot;#cb3-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rr_foo &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; foo&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// lvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-14&quot;&gt;&lt;a href=&quot;#cb3-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-15&quot;&gt;&lt;a href=&quot;#cb3-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;struct&lt;/span&gt; A&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;m_a&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-16&quot;&gt;&lt;a href=&quot;#cb3-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;A obj&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// lvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-17&quot;&gt;&lt;a href=&quot;#cb3-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;obj&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_a&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// lvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-18&quot;&gt;&lt;a href=&quot;#cb3-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;A&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; p_obj &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt;obj&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// lvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-19&quot;&gt;&lt;a href=&quot;#cb3-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;A&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; r_obj &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; obj&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// lvalue&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在上例中，不论是值类型变量 num，指针类型变量 p_num，类类型值对象 obj，类类型指针对象 p_obj，左值引用对象 r_obj，右值引用对象 rr_foo，它们都属于左值。&lt;/p&gt;
&lt;p&gt;lvalue 具有以下特征： - 所有 glvalue 具有的特征 - 可以通过取址运算符获取其地址 - 可修改的左值可用作内建赋值和内建符合赋值运算符的左操作数 - 可以用来初始化左值引用（下文会讲）&lt;/p&gt;
&lt;h5 id=&quot;纯右值prvalue&quot;&gt;纯右值(prvalue)&lt;/h5&gt;
&lt;p&gt;在 C++11 前，value categories 只划分为了左值和右值两种类型，C++11 以后，由于引入移动语义(又是它)的需要，又将右值细分为了纯右值和将亡值。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dv&quot;&gt;1055&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// prvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// prvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fl&quot;&gt;1.0&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// prvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-5&quot;&gt;&lt;a href=&quot;#cb4-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-6&quot;&gt;&lt;a href=&quot;#cb4-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; a&lt;span class=&quot;op&quot;&gt;{},&lt;/span&gt; b&lt;span class=&quot;op&quot;&gt;{};&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// both lvalues&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-7&quot;&gt;&lt;a href=&quot;#cb4-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;a &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; b&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// prvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-8&quot;&gt;&lt;a href=&quot;#cb4-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt;a&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// prvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-9&quot;&gt;&lt;a href=&quot;#cb4-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-10&quot;&gt;&lt;a href=&quot;#cb4-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;a&lt;span class=&quot;op&quot;&gt;++;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// prvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-11&quot;&gt;&lt;a href=&quot;#cb4-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;b&lt;span class=&quot;op&quot;&gt;--;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// prvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-12&quot;&gt;&lt;a href=&quot;#cb4-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-13&quot;&gt;&lt;a href=&quot;#cb4-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;a &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; b&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// prvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-14&quot;&gt;&lt;a href=&quot;#cb4-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;a &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; b&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// prvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-15&quot;&gt;&lt;a href=&quot;#cb4-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-16&quot;&gt;&lt;a href=&quot;#cb4-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{};&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// prvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-17&quot;&gt;&lt;a href=&quot;#cb4-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-18&quot;&gt;&lt;a href=&quot;#cb4-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;vector&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;_Tp&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{};&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// prvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-19&quot;&gt;&lt;a href=&quot;#cb4-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-20&quot;&gt;&lt;a href=&quot;#cb4-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;/* 5. Lambda Expression */&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-21&quot;&gt;&lt;a href=&quot;#cb4-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;[](&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; a&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; b&lt;span class=&quot;op&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; b&lt;span class=&quot;op&quot;&gt;;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;顾名思义，纯右值就是纯粹的右值，要么是纯粹的字面量，要么是求值结果相当于字面量或匿名临时对象。如上所示，例1和例2是原始字面量；例3属于运算表达式产生的临时变量；例4属于非引用返回的临时变量，在调用 func 函数后将返回一个值对象 obj ，这个值对象会通过拷贝构造函数在 main 函数内产生一个临时对象，这个临时对象属于纯右值；例5则是一个 Lambda 表达式，以上这些表达式在 C++ 里都称为纯右值。&lt;/p&gt;
&lt;h5 id=&quot;将亡值xvalue&quot;&gt;将亡值(xvalue)&lt;/h5&gt;
&lt;p&gt;将亡值是即将被销毁（将亡值对象处于生命期的末尾），但却能够被移动的值。常见的将亡值有：由纯右值实体化创建的临时变量，函数内部将要被 return 的某个局部变量（在它生命的最后时刻）。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;bool&lt;/span&gt; b &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// lvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;move&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;b&lt;span class=&quot;op&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// xvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;static_cast&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&amp;gt;(&lt;/span&gt;b&lt;span class=&quot;op&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// xvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-4&quot;&gt;&lt;a href=&quot;#cb5-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-5&quot;&gt;&lt;a href=&quot;#cb5-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; foo&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-6&quot;&gt;&lt;a href=&quot;#cb5-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;foo&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// xvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-7&quot;&gt;&lt;a href=&quot;#cb5-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-8&quot;&gt;&lt;a href=&quot;#cb5-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;struct&lt;/span&gt; foo &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;m_a&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-9&quot;&gt;&lt;a href=&quot;#cb5-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;move&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;foo&lt;span class=&quot;op&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_a&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// xvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-10&quot;&gt;&lt;a href=&quot;#cb5-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;foo&lt;span class=&quot;op&quot;&gt;{}.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_a&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// xvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-11&quot;&gt;&lt;a href=&quot;#cb5-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-12&quot;&gt;&lt;a href=&quot;#cb5-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; arr&lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;]{};&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-13&quot;&gt;&lt;a href=&quot;#cb5-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;move&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;arr&lt;span class=&quot;op&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// xvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-14&quot;&gt;&lt;a href=&quot;#cb5-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;move&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;arr&lt;span class=&quot;op&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;];&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// xvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-15&quot;&gt;&lt;a href=&quot;#cb5-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-16&quot;&gt;&lt;a href=&quot;#cb5-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;]{}[&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;];&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// xvalue&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-17&quot;&gt;&lt;a href=&quot;#cb5-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-18&quot;&gt;&lt;a href=&quot;#cb5-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;/* nums 属于 xvalue */&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-19&quot;&gt;&lt;a href=&quot;#cb5-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; create&lt;span class=&quot;op&quot;&gt;(){&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-20&quot;&gt;&lt;a href=&quot;#cb5-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; nums&lt;span class=&quot;op&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-21&quot;&gt;&lt;a href=&quot;#cb5-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; nums&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;// Warning!&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-22&quot;&gt;&lt;a href=&quot;#cb5-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-23&quot;&gt;&lt;a href=&quot;#cb5-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; main&lt;span class=&quot;op&quot;&gt;(){&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-24&quot;&gt;&lt;a href=&quot;#cb5-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; arr &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; create&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb5-25&quot;&gt;&lt;a href=&quot;#cb5-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如上所示的栈数组 nums 是在 create() 内创建的局部变量，如果不采取额外的措施(e.g. 使用 static 将数组分配在静态存储区，or 使用移动语义延长对象的生命期)，编译器将抛出 Warning，因为其指向的对象将在 return 的时候被销毁(由 leave 汇编语句释放当前栈帧使用的资源)。所以在初学 C 语言时，老师反复强调的“不能返回指向当前栈帧内存的局部变量”就是这么来的。&lt;/p&gt;
&lt;p&gt;xvalue 具有所有 glvalue 和 rvalue 拥有的特征。&lt;/p&gt;
&lt;h4 id=&quot;左右值引用引用坍缩&quot;&gt;左/右值引用&amp;amp;引用坍缩&lt;/h4&gt;
&lt;p&gt;好了，现在我们知道什么是左值、纯右值与将亡值了。接着讲一下基于左值的左值引用以及基于右值的右值引用。&lt;/p&gt;
&lt;h5 id=&quot;左值引用&quot;&gt;左值引用&lt;/h5&gt;
&lt;p&gt;C++11 前，我们所说的引用没有歧义，指的就是对左值进行引用。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-2&quot;&gt;&lt;a href=&quot;#cb6-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;type_traits&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-3&quot;&gt;&lt;a href=&quot;#cb6-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-4&quot;&gt;&lt;a href=&quot;#cb6-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; A &lt;span class=&quot;op&quot;&gt;{};&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-5&quot;&gt;&lt;a href=&quot;#cb6-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-6&quot;&gt;&lt;a href=&quot;#cb6-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; main&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-7&quot;&gt;&lt;a href=&quot;#cb6-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;boolalpha&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-8&quot;&gt;&lt;a href=&quot;#cb6-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;is_lvalue_reference&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;::&lt;/span&gt;value &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 输出: false&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-9&quot;&gt;&lt;a href=&quot;#cb6-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;is_lvalue_reference&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;gt;::&lt;/span&gt;value &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 输出: true&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-10&quot;&gt;&lt;a href=&quot;#cb6-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;is_lvalue_reference&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;A&lt;span class=&quot;op&quot;&gt;&amp;gt;::&lt;/span&gt;value &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;co&quot;&gt;// 输出: false&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-11&quot;&gt;&lt;a href=&quot;#cb6-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;is_lvalue_reference&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;A&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;gt;::&lt;/span&gt;value &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 输出: true&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb6-12&quot;&gt;&lt;a href=&quot;#cb6-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;btw, C++ 里的左值引用其实暗含了一次对指向对象的解引用操作，原因在于 &lt;code&gt;int&amp;amp;&lt;/code&gt; ↔︎ &lt;code&gt;int* const&lt;/code&gt;，&lt;code&gt;A&amp;amp;&lt;/code&gt; ↔︎ &lt;code&gt;A* const&lt;/code&gt; 。&lt;/p&gt;
&lt;h5 id=&quot;右值引用&quot;&gt;右值引用&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;传统的 C++ 没有区分『移动』和 『拷贝』的概念，造成了大量的数据拷贝，浪费时间和空间。右值引用的出现恰好就解决了这两个概念的混淆问题。  —— —— 《现代C++教程》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;C++11 提出了右值引用这一概念，合理化了 &lt;code&gt;int&amp;amp;&amp;amp; num = 3&lt;/code&gt; 这种对右值3取引用的写法。此外，C++11 提供了 &lt;code&gt;std::move&lt;/code&gt; 方法让我们可以把左值无条件地转换为右值(viz. xvalue)。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;type_traits&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-3&quot;&gt;&lt;a href=&quot;#cb7-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt; &lt;/span&gt;
&lt;span id=&quot;cb7-4&quot;&gt;&lt;a href=&quot;#cb7-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; A &lt;span class=&quot;op&quot;&gt;{};&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-5&quot;&gt;&lt;a href=&quot;#cb7-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt; &lt;/span&gt;
&lt;span id=&quot;cb7-6&quot;&gt;&lt;a href=&quot;#cb7-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; main&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;/span&gt;
&lt;span id=&quot;cb7-7&quot;&gt;&lt;a href=&quot;#cb7-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-8&quot;&gt;&lt;a href=&quot;#cb7-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;boolalpha&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-9&quot;&gt;&lt;a href=&quot;#cb7-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;is_rvalue_reference&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;A&lt;span class=&quot;op&quot;&gt;&amp;gt;::&lt;/span&gt;value &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 输出: false&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-10&quot;&gt;&lt;a href=&quot;#cb7-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;is_rvalue_reference&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;A&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;gt;::&lt;/span&gt;value &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 输出: false&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-11&quot;&gt;&lt;a href=&quot;#cb7-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;is_rvalue_reference&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;A&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&amp;gt;::&lt;/span&gt;value &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 输出: true&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-12&quot;&gt;&lt;a href=&quot;#cb7-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;is_rvalue_reference&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;::&lt;/span&gt;value &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 输出: false&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-13&quot;&gt;&lt;a href=&quot;#cb7-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;is_rvalue_reference&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;gt;::&lt;/span&gt;value &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 输出: false&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-14&quot;&gt;&lt;a href=&quot;#cb7-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;is_rvalue_reference&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&amp;gt;::&lt;/span&gt;value &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 输出: true&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb7-15&quot;&gt;&lt;a href=&quot;#cb7-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5 id=&quot;引用坍缩&quot;&gt;引用坍缩&lt;/h5&gt;
&lt;p&gt;传统C++里规定不能对一个引用类型继续进行引用，但在右值引用出现后就允许我们对引用进行新的左/右引用，即产生了所谓的引用坍缩规则:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&quot;header&quot;&gt;
&lt;th style=&quot;text-align: left;&quot;&gt;函数形参类型&lt;/th&gt;
&lt;th style=&quot;text-align: left;&quot;&gt;实参参数类型&lt;/th&gt;
&lt;th style=&quot;text-align: left;&quot;&gt;推导后函数形参类型&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;T&amp;amp;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;左引用&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;T&amp;amp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;T&amp;amp;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;右引用&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;T&amp;amp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;T&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;左引用&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;T&amp;amp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;T&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;右引用&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;T&amp;amp;&amp;amp;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;因为引用坍缩的存在，如果我们希望入参在调用函数内部保持传入前的参数类型，则需通过 &lt;code&gt;std::forward&lt;/code&gt; 进行完美转发，详细用法网上有很多，这里就不展开了。&lt;/p&gt;
&lt;h4 id=&quot;a-和-a-的区别&quot;&gt;++a 和 a++ 的区别？&lt;/h4&gt;
&lt;p&gt;C 语言课上，老师从使用效果上讲过 ++a 和 a++ 的区别：++a 表示变量值 a 先自增加1后返回这个值，a++ 叫后自增，表示自增 + 1 了，但返回的是自增前的变量值。但这一过程是如何是实现的呢？&lt;/p&gt;
&lt;p&gt;现在，我们知道了左右值以及它们引用的概念，可以从代码上来一窥究竟了：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;/* 前缀自增 */&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;++(){&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-4&quot;&gt;&lt;a href=&quot;#cb8-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-5&quot;&gt;&lt;a href=&quot;#cb8-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-6&quot;&gt;&lt;a href=&quot;#cb8-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-7&quot;&gt;&lt;a href=&quot;#cb8-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;/* 后缀自增 */&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-8&quot;&gt;&lt;a href=&quot;#cb8-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;at&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;++(&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;){&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-9&quot;&gt;&lt;a href=&quot;#cb8-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; old_val &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-10&quot;&gt;&lt;a href=&quot;#cb8-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;++(*&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-11&quot;&gt;&lt;a href=&quot;#cb8-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; old_val&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb8-12&quot;&gt;&lt;a href=&quot;#cb8-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;也许，看了上面的代码，你会对左右值以及自增运算符有了更清晰的认识。&lt;/p&gt;
&lt;h4 id=&quot;所有权&quot;&gt;所有权&lt;/h4&gt;
&lt;p&gt;在讲拷贝/移动语义前，笔者打算简单说一下自己对于 “所有权(Ownership)” 概念的理解。笔者最初在学 Rust 的时候接触的“所有权”这一概念，不同于 C++ 语句默认采用拷贝语义，Rust 语句默认使用移动语义，也正是由于所有权的规约，无 GC 的 Rust 一直以高效、内存安全著称。&lt;/p&gt;
&lt;p&gt;首先明确一点，所有权针对的是堆区内存，因为栈区内存是编译期确定且随着函数栈帧的创建/释放自动管理的，而堆区内存的分配和使用只有运行时才得以确定，因此 Rust 所有权的职责说白了就是追踪堆内存数据的动向。&lt;/p&gt;
&lt;h4 id=&quot;拷贝语义&quot;&gt;拷贝语义&lt;/h4&gt;
&lt;p&gt;如&lt;a href=&quot;#一样的结果不一样的行为&quot;&gt;本文开头&lt;/a&gt;所举的那个例子，C++ 中的拷贝语义由拷贝构造函数和拷贝赋值操作符承担。 - 拷贝构造函数 (Copy Construction)：负责让对象被创建作为一个对现有对象的副本 的类内特殊成员函数。 - 拷贝赋值操作符 (Copy Assignment)：负责让现有对象的内容被赋值替换为另一现有对象的内容 的类内特殊成员函数。&lt;/p&gt;
&lt;h5 id=&quot;自定义拷贝构造函数&quot;&gt;自定义拷贝构造函数&lt;/h5&gt;
&lt;p&gt;在使用类库的时候，我们可以使用 &lt;code&gt;std::vector&amp;lt;int&amp;gt; new_vec = old_vec;&lt;/code&gt; 这样的写法，是因为类库中的模板类 vector 已经给我们实现好了拷贝构造函数。对于我们自己的类，设计时如果用到了拷贝语义，就需要手动实现一份拷贝构造函数。&lt;/p&gt;
&lt;p&gt;如下，假设我们需要设计一个自己的 vector 模板类。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;typename&lt;/span&gt; T&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-2&quot;&gt;&lt;a href=&quot;#cb9-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; vector&lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-3&quot;&gt;&lt;a href=&quot;#cb9-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-4&quot;&gt;&lt;a href=&quot;#cb9-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;/* copy construction */&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-5&quot;&gt;&lt;a href=&quot;#cb9-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    vector&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;const&lt;/span&gt; vector&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;){&lt;/span&gt; &lt;/span&gt;
&lt;span id=&quot;cb9-6&quot;&gt;&lt;a href=&quot;#cb9-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;m_size&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_size&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-7&quot;&gt;&lt;a href=&quot;#cb9-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;m_capacity&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_capacity&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-8&quot;&gt;&lt;a href=&quot;#cb9-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;copy&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_elems&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_elems&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_size&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;m_elems&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-9&quot;&gt;&lt;a href=&quot;#cb9-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-10&quot;&gt;&lt;a href=&quot;#cb9-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;private&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-11&quot;&gt;&lt;a href=&quot;#cb9-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;m_size&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-12&quot;&gt;&lt;a href=&quot;#cb9-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;m_capacity&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-13&quot;&gt;&lt;a href=&quot;#cb9-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;m_elems&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb9-14&quot;&gt;&lt;a href=&quot;#cb9-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5 id=&quot;自定义拷贝赋值操作符&quot;&gt;自定义拷贝赋值操作符&lt;/h5&gt;
&lt;p&gt;同理，我们也需要自己实现赋值操作符的重载。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-2&quot;&gt;&lt;a href=&quot;#cb10-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;/* copy assignment */&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-3&quot;&gt;&lt;a href=&quot;#cb10-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    vector&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; vector&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;const&lt;/span&gt; vector&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;){&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-4&quot;&gt;&lt;a href=&quot;#cb10-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;m_size&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_size&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-5&quot;&gt;&lt;a href=&quot;#cb10-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;va&quot;&gt;m_capacity&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_capacity&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-6&quot;&gt;&lt;a href=&quot;#cb10-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        resize&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_size&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-7&quot;&gt;&lt;a href=&quot;#cb10-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;copy&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_elems&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_elems&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_size&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;m_elems&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-8&quot;&gt;&lt;a href=&quot;#cb10-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-9&quot;&gt;&lt;a href=&quot;#cb10-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb10-10&quot;&gt;&lt;a href=&quot;#cb10-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;移动语义&quot;&gt;移动语义&lt;/h4&gt;
&lt;p&gt;终于讲到移动啦！与 Rust 对左值的“直接移动”不同，C++ 的移动语义需要先通过 &lt;code&gt;std::move()&lt;/code&gt; 将左值转换为将亡值(n.b. C++ 中只有右值可以被 move)，然后再将此将亡值赋给新的变量（借助移动构造/赋值函数），这才走完了所有权移动的过程。&lt;/p&gt;
&lt;p&gt;上面提过的 xvalue, prvalue 以及 lvalue ，这三者遵循着一套移动规则以及对应着不同的构造方法：&lt;/p&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 30%&quot; /&gt;
&lt;col style=&quot;width: 35%&quot; /&gt;
&lt;col style=&quot;width: 33%&quot; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&quot;header&quot;&gt;
&lt;th style=&quot;text-align: left;&quot;&gt;Value categories&lt;/th&gt;
&lt;th style=&quot;text-align: left;&quot;&gt;移动规则&lt;/th&gt;
&lt;th style=&quot;text-align: left;&quot;&gt;调用构造方法&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;xvalue&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;可以被直接移动&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;调用移动构造函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;prvale&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;被移动的时候，会生成一个临时变量 xvalue，这个 xvalue 被移动了&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;prvalue 初始化 lvalue，直接构建，不调用拷贝/移动构造函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;lvalue&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;移动时需要使用 std::move 将 lvalue 变成 xvalue，然后再移动这个 xvalue&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;调用拷贝构造函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;发生移动后，原来的被移动的变量指向的值的所有权转移到了新的变量中，原变量变成了“空值”状态。在下面的这个例子中，我们通过 std::move 将变量 old_str 变成了一个 xvalue，并将它赋给变量 new_str，这时候将程序调用 std::string 类型的移动函数来操作与管理 old_str 指向的资源 “hello world”&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;string&lt;span class=&quot;op&quot;&gt; &lt;/span&gt;old_str &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb11-2&quot;&gt;&lt;a href=&quot;#cb11-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;string&lt;span class=&quot;op&quot;&gt; &lt;/span&gt;new_str &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;move&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;old_str&lt;span class=&quot;op&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// after moved, old_str == &amp;quot;&amp;quot;, new_str == &amp;quot;hello world&amp;quot;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5 id=&quot;自定义移动构造函数&quot;&gt;自定义移动构造函数&lt;/h5&gt;
&lt;p&gt;同样，我们实现一个移动构造函数&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-2&quot;&gt;&lt;a href=&quot;#cb12-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;/* move construction */&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-3&quot;&gt;&lt;a href=&quot;#cb12-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;vector&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;const&lt;/span&gt; vector&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;){&lt;/span&gt; &lt;/span&gt;
&lt;span id=&quot;cb12-4&quot;&gt;&lt;a href=&quot;#cb12-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;m_size&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_size&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-5&quot;&gt;&lt;a href=&quot;#cb12-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;m_capacity&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_capacity&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-6&quot;&gt;&lt;a href=&quot;#cb12-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;m_elems&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_elems&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-7&quot;&gt;&lt;a href=&quot;#cb12-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_size&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-8&quot;&gt;&lt;a href=&quot;#cb12-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_capacity&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-9&quot;&gt;&lt;a href=&quot;#cb12-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_elems&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-10&quot;&gt;&lt;a href=&quot;#cb12-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb12-11&quot;&gt;&lt;a href=&quot;#cb12-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5 id=&quot;自定义移动赋值操作符&quot;&gt;自定义移动赋值操作符&lt;/h5&gt;
&lt;p&gt;以及，重载移动赋值操作符。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-2&quot;&gt;&lt;a href=&quot;#cb13-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;/* move alignment */&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-3&quot;&gt;&lt;a href=&quot;#cb13-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;vector&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; vector&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=(&lt;/span&gt;vector&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;amp;&amp;amp;&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;){&lt;/span&gt; &lt;/span&gt;
&lt;span id=&quot;cb13-4&quot;&gt;&lt;a href=&quot;#cb13-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;m_size&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_size&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-5&quot;&gt;&lt;a href=&quot;#cb13-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;m_capacity&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_capacity&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-6&quot;&gt;&lt;a href=&quot;#cb13-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    resize&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_size&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-7&quot;&gt;&lt;a href=&quot;#cb13-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;va&quot;&gt;m_elems&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_elems&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-8&quot;&gt;&lt;a href=&quot;#cb13-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_size&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-9&quot;&gt;&lt;a href=&quot;#cb13-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_capacity&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-10&quot;&gt;&lt;a href=&quot;#cb13-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    other&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;m_elems&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-11&quot;&gt;&lt;a href=&quot;#cb13-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-12&quot;&gt;&lt;a href=&quot;#cb13-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb13-13&quot;&gt;&lt;a href=&quot;#cb13-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;性能优化&quot;&gt;性能优化&lt;/h3&gt;
&lt;h4 id=&quot;编译期优化&quot;&gt;编译期优化&lt;/h4&gt;
&lt;p&gt;Copy elision 和 RVO/NRVO 是两套独立的优化策略。 #### 拷贝省略 拷贝省略（Copy elision）是编译期的重要优化之一，将不需要的 copy/move 操作以及析构操作在编译期直接去除，从而减少多次操作带来的开销。我们将用一个例子说明在拷贝省略的过程中编译器究竟为我们做了哪些事情。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-2&quot;&gt;&lt;a href=&quot;#cb14-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-3&quot;&gt;&lt;a href=&quot;#cb14-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; A &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-4&quot;&gt;&lt;a href=&quot;#cb14-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-5&quot;&gt;&lt;a href=&quot;#cb14-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    A&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Constructed&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-6&quot;&gt;&lt;a href=&quot;#cb14-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    A&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;at&quot;&gt;const&lt;/span&gt; A&lt;span class=&quot;op&quot;&gt;&amp;amp;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Copied&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-7&quot;&gt;&lt;a href=&quot;#cb14-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    A&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;A&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Moved&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-8&quot;&gt;&lt;a href=&quot;#cb14-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-9&quot;&gt;&lt;a href=&quot;#cb14-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-10&quot;&gt;&lt;a href=&quot;#cb14-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;A create&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-11&quot;&gt;&lt;a href=&quot;#cb14-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    A obj_create&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-12&quot;&gt;&lt;a href=&quot;#cb14-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; obj_create&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-13&quot;&gt;&lt;a href=&quot;#cb14-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-14&quot;&gt;&lt;a href=&quot;#cb14-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-15&quot;&gt;&lt;a href=&quot;#cb14-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; main&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-16&quot;&gt;&lt;a href=&quot;#cb14-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    A obj &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; create&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb14-17&quot;&gt;&lt;a href=&quot;#cb14-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;不管是 C++11 还是 C++17 ，它们都把拷贝省略把移动操作(对拷贝同理，没有移动构造函数的时候省略拷贝构造函数)给省略了。那么不禁要问是在什么时候发生的以及是怎么省略的呢？&lt;/p&gt;
&lt;p&gt;这里先给出结论：如果不发生拷贝省略，C++11 编译出的 &lt;code&gt;A obj = create();&lt;/code&gt; 语句将发生下面的5件事：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;调用函数 create 前，使用一块内存 “obj_mem” 用来存储对象 obj；&lt;/li&gt;
&lt;li&gt;准备进入函数 create 栈帧前，选择一块临时内存 “tmp_mem” 来接收函数的返回值；&lt;/li&gt;
&lt;li&gt;压入 create 函数栈帧后，选择一块当前函数帧上的内存来创建局部对象 obj_create；&lt;/li&gt;
&lt;li&gt;函数返回时，将局部对象 obj_create 移动到上个函数帧的临时内存 “tmp_mem” 上；&lt;/li&gt;
&lt;li&gt;“赋值”的时候，从 “tmp_mem” 上将 obj_create 的内容移动给“obj_mem”。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可以看到这个过程一共发生了两次移动（第四和第五步），为了进一步验证其背后的行为，我们来探索上例编译后生成的汇编代码。&lt;/p&gt;
&lt;p&gt;让我们关闭编译器的拷贝优化，观察没有拷贝省略的时候会发生什么。&lt;/p&gt;
&lt;p&gt;使用 C++11 编译代码并运行 &lt;code&gt;clang++ -std=c++11 -fno-elide-constructors main.cpp -o main &amp;amp;&amp;amp; ./main&lt;/code&gt; ，输出：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb15&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb15-1&quot;&gt;&lt;a href=&quot;#cb15-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;Constructed&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-2&quot;&gt;&lt;a href=&quot;#cb15-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;Moved&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb15-3&quot;&gt;&lt;a href=&quot;#cb15-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;Moved&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;生成汇编如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb16&quot;&gt;&lt;pre class=&quot;sourceCode asm&quot;&gt;&lt;code class=&quot;sourceCode fasm&quot;&gt;&lt;span id=&quot;cb16-1&quot;&gt;&lt;a href=&quot;#cb16-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;create&lt;span class=&quot;op&quot;&gt;():&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-2&quot;&gt;&lt;a href=&quot;#cb16-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-3&quot;&gt;&lt;a href=&quot;#cb16-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rsp&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-4&quot;&gt;&lt;a href=&quot;#cb16-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;sub&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;32&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-5&quot;&gt;&lt;a href=&quot;#cb16-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;QWORD&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PTR&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rdi&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-6&quot;&gt;&lt;a href=&quot;#cb16-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;lea&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-7&quot;&gt;&lt;a href=&quot;#cb16-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rdi&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-8&quot;&gt;&lt;a href=&quot;#cb16-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;call&lt;/span&gt;    A&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;A&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;complete object constructor&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-9&quot;&gt;&lt;a href=&quot;#cb16-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;lea&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rdx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-10&quot;&gt;&lt;a href=&quot;#cb16-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;QWORD&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PTR&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-11&quot;&gt;&lt;a href=&quot;#cb16-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rsi&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rdx&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-12&quot;&gt;&lt;a href=&quot;#cb16-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rdi&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-13&quot;&gt;&lt;a href=&quot;#cb16-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;call&lt;/span&gt;    A&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;A&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;A&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;complete object constructor&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-14&quot;&gt;&lt;a href=&quot;#cb16-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;QWORD&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PTR&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-15&quot;&gt;&lt;a href=&quot;#cb16-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;leave&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-16&quot;&gt;&lt;a href=&quot;#cb16-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;ret&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-17&quot;&gt;&lt;a href=&quot;#cb16-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;main:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-18&quot;&gt;&lt;a href=&quot;#cb16-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-19&quot;&gt;&lt;a href=&quot;#cb16-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rsp&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-20&quot;&gt;&lt;a href=&quot;#cb16-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;sub&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-21&quot;&gt;&lt;a href=&quot;#cb16-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;lea&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-22&quot;&gt;&lt;a href=&quot;#cb16-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rdi&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-23&quot;&gt;&lt;a href=&quot;#cb16-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;call&lt;/span&gt;    create&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-24&quot;&gt;&lt;a href=&quot;#cb16-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;lea&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rdx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-25&quot;&gt;&lt;a href=&quot;#cb16-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;lea&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-26&quot;&gt;&lt;a href=&quot;#cb16-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rsi&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rdx&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-27&quot;&gt;&lt;a href=&quot;#cb16-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rdi&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-28&quot;&gt;&lt;a href=&quot;#cb16-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;call&lt;/span&gt;    A&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;A&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;A&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;complete object constructor&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-29&quot;&gt;&lt;a href=&quot;#cb16-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;eax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-30&quot;&gt;&lt;a href=&quot;#cb16-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;leave&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb16-31&quot;&gt;&lt;a href=&quot;#cb16-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;ret&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到，在 C++11 无拷贝优化下，我们的代码在 create() 与 main() 里分别 call 了两次 A::A(A&amp;amp;&amp;amp;)，即两次移动构造。&lt;/p&gt;
&lt;p&gt;使用 C++17 编译代码和运行 &lt;code&gt;clang++ -std=c++17 -fno-elide-constructors main.cpp -o main &amp;amp;&amp;amp; ./main&lt;/code&gt; ，输出：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb17&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb17-1&quot;&gt;&lt;a href=&quot;#cb17-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;Constructed&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb17-2&quot;&gt;&lt;a href=&quot;#cb17-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;Moved&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;生成汇编如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb18&quot;&gt;&lt;pre class=&quot;sourceCode asm&quot;&gt;&lt;code class=&quot;sourceCode fasm&quot;&gt;&lt;span id=&quot;cb18-1&quot;&gt;&lt;a href=&quot;#cb18-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;create&lt;span class=&quot;op&quot;&gt;():&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-2&quot;&gt;&lt;a href=&quot;#cb18-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-3&quot;&gt;&lt;a href=&quot;#cb18-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rsp&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-4&quot;&gt;&lt;a href=&quot;#cb18-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;sub&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;32&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-5&quot;&gt;&lt;a href=&quot;#cb18-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;QWORD&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PTR&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rdi&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-6&quot;&gt;&lt;a href=&quot;#cb18-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;lea&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-7&quot;&gt;&lt;a href=&quot;#cb18-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rdi&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-8&quot;&gt;&lt;a href=&quot;#cb18-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;call&lt;/span&gt;    A&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;A&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;complete object constructor&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-9&quot;&gt;&lt;a href=&quot;#cb18-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;lea&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rdx&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-10&quot;&gt;&lt;a href=&quot;#cb18-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;QWORD&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PTR&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-11&quot;&gt;&lt;a href=&quot;#cb18-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rsi&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rdx&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-12&quot;&gt;&lt;a href=&quot;#cb18-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rdi&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-13&quot;&gt;&lt;a href=&quot;#cb18-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;call&lt;/span&gt;    A&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;A&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;A&lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;complete object constructor&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-14&quot;&gt;&lt;a href=&quot;#cb18-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;QWORD&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PTR&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-15&quot;&gt;&lt;a href=&quot;#cb18-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;leave&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-16&quot;&gt;&lt;a href=&quot;#cb18-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;ret&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-17&quot;&gt;&lt;a href=&quot;#cb18-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;main:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-18&quot;&gt;&lt;a href=&quot;#cb18-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-19&quot;&gt;&lt;a href=&quot;#cb18-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rsp&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-20&quot;&gt;&lt;a href=&quot;#cb18-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;sub&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-21&quot;&gt;&lt;a href=&quot;#cb18-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;lea&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-22&quot;&gt;&lt;a href=&quot;#cb18-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rdi&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-23&quot;&gt;&lt;a href=&quot;#cb18-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;call&lt;/span&gt;    create&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-24&quot;&gt;&lt;a href=&quot;#cb18-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;eax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-25&quot;&gt;&lt;a href=&quot;#cb18-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;leave&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb18-26&quot;&gt;&lt;a href=&quot;#cb18-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;ret&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可见，在 C++17 无拷贝优化下，我们的代码只在 create() 中调用了一次移动构造函数 A::A(A&amp;amp;&amp;amp;) 。&lt;/p&gt;
&lt;p&gt;很神奇的发现：在对象被构造出来后，C++11 分别在 create() 和 main() 内 各自 move 了一次，C++17 只在 create() 内 move 了一次。&lt;/p&gt;
&lt;p&gt;如果我们启用拷贝省略进行编译：&lt;code&gt;g++ -std=c++11 main.cpp -o main &amp;amp;&amp;amp; ./main&lt;/code&gt; (&lt;code&gt;g++ -std=c++17 main.cpp -o main &amp;amp;&amp;amp; ./main&lt;/code&gt;) 这时候会发生什么呢？&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb19&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb19-1&quot;&gt;&lt;a href=&quot;#cb19-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;Constructed&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对应的汇编如下：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb20&quot;&gt;&lt;pre class=&quot;sourceCode asm&quot;&gt;&lt;code class=&quot;sourceCode fasm&quot;&gt;&lt;span id=&quot;cb20-1&quot;&gt;&lt;a href=&quot;#cb20-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;A:&lt;/span&gt;:A&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;base object constructor&lt;span class=&quot;op&quot;&gt;]:&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;; 类A&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-2&quot;&gt;&lt;a href=&quot;#cb20-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-3&quot;&gt;&lt;a href=&quot;#cb20-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rsp&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-4&quot;&gt;&lt;a href=&quot;#cb20-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;sub&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-5&quot;&gt;&lt;a href=&quot;#cb20-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;QWORD&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PTR&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rdi&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-6&quot;&gt;&lt;a href=&quot;#cb20-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;esi&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; OFFSET FLAT&lt;span class=&quot;op&quot;&gt;:.&lt;/span&gt;LC0&lt;/span&gt;
&lt;span id=&quot;cb20-7&quot;&gt;&lt;a href=&quot;#cb20-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;edi&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; OFFSET FLAT&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;_ZSt4cout&lt;/span&gt;
&lt;span id=&quot;cb20-8&quot;&gt;&lt;a href=&quot;#cb20-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;call&lt;/span&gt;    std&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;basic_ostream&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;char&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; std&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;char_traits&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;char&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt; std&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;operator&lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;std&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;char_traits&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;char&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;(&lt;/span&gt;std&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;basic_ostream&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;char&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; std&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;char_traits&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;char&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;amp;,&lt;/span&gt; char const&lt;span class=&quot;op&quot;&gt;*)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-9&quot;&gt;&lt;a href=&quot;#cb20-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;nop&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-10&quot;&gt;&lt;a href=&quot;#cb20-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;leave&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-11&quot;&gt;&lt;a href=&quot;#cb20-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;ret&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-12&quot;&gt;&lt;a href=&quot;#cb20-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;create&lt;span class=&quot;op&quot;&gt;():&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;; create()函数入口&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-13&quot;&gt;&lt;a href=&quot;#cb20-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-14&quot;&gt;&lt;a href=&quot;#cb20-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rsp&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;; 函数帧序言&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-15&quot;&gt;&lt;a href=&quot;#cb20-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;sub&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-16&quot;&gt;&lt;a href=&quot;#cb20-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;QWORD&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PTR&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rdi&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;; 将rdi内容赋给内存中的[rbp-8]处，QWORD PTR 意为解释后接内存区域[rbp-8]为4个字(8字节)的指针类型&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-17&quot;&gt;&lt;a href=&quot;#cb20-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;QWORD&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PTR&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-18&quot;&gt;&lt;a href=&quot;#cb20-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rdi&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-19&quot;&gt;&lt;a href=&quot;#cb20-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;call&lt;/span&gt;    A&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;A&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;complete object constructor&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;; 调用类A的普通构造函数&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-20&quot;&gt;&lt;a href=&quot;#cb20-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;nop&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-21&quot;&gt;&lt;a href=&quot;#cb20-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;QWORD&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PTR&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-22&quot;&gt;&lt;a href=&quot;#cb20-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;leave&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-23&quot;&gt;&lt;a href=&quot;#cb20-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;ret&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-24&quot;&gt;&lt;a href=&quot;#cb20-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;main:&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;; main()函数入口&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-25&quot;&gt;&lt;a href=&quot;#cb20-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-26&quot;&gt;&lt;a href=&quot;#cb20-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rsp&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;; 函数帧序言&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-27&quot;&gt;&lt;a href=&quot;#cb20-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;sub&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-28&quot;&gt;&lt;a href=&quot;#cb20-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;lea&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;]&lt;/span&gt;   &lt;span class=&quot;co&quot;&gt;; 将 [rbp-1] 内存的地址(非内存中存储的内容)赋给rax寄存器&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-29&quot;&gt;&lt;a href=&quot;#cb20-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;rdi&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rax&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-30&quot;&gt;&lt;a href=&quot;#cb20-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;call&lt;/span&gt;    create&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;; 调用create函数&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-31&quot;&gt;&lt;a href=&quot;#cb20-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;eax&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;;  将eax寄存器内容置零&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-32&quot;&gt;&lt;a href=&quot;#cb20-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;leave&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb20-33&quot;&gt;&lt;a href=&quot;#cb20-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;ret&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启用拷贝优化后汇编只是 call 了普通构造函数，再没有别的拷贝/移动操作了。原来，编译器默默地帮我们做了这么多事情 ٩(๑&amp;gt;◡&amp;lt;๑)۶&lt;/p&gt;
&lt;p&gt;现在我们知道了编译器会默认帮我们开启拷贝省略，从而我们写的代码一次移动都没做。此外如果关闭了拷贝省略，就会因为 C++17 后编译器默认使用 RVO ，可选使用 NRVO ，所以只有产生了一次移动操作；而 C++11 标准下编译器默认不会帮你做这两件事情，对应产生了两次理应被优化掉的移动操作。&lt;/p&gt;
&lt;p&gt;所以，什么是 RVO 与 NRVO 呢？&lt;/p&gt;
&lt;h5 id=&quot;rvo-与-nrvo&quot;&gt;RVO 与 NRVO&lt;/h5&gt;
&lt;p&gt;RVO 是英文 return value optimization 的缩写，NRVO 是英文 named return value optimization 的缩写。&lt;/p&gt;
&lt;p&gt;下面的这段解释来自知乎上一位网友的文章（见文末参考[8]） &amp;gt; RVO是返回值优化，就是将返回值的创建省略了。NRVO是函数内具有名字的局部变量充当返回值的时候，它的创建也被省略了。它们的省略结果都是在最终的变量里创建对象。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb21&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb21-1&quot;&gt;&lt;a href=&quot;#cb21-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;// 写法一&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb21-2&quot;&gt;&lt;a href=&quot;#cb21-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;Verbose create&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb21-3&quot;&gt;&lt;a href=&quot;#cb21-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; Verbose&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb21-4&quot;&gt;&lt;a href=&quot;#cb21-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb21-5&quot;&gt;&lt;a href=&quot;#cb21-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;//写法二&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb21-6&quot;&gt;&lt;a href=&quot;#cb21-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;Verbose create&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb21-7&quot;&gt;&lt;a href=&quot;#cb21-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  Verbose v&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb21-8&quot;&gt;&lt;a href=&quot;#cb21-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; v&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb21-9&quot;&gt;&lt;a href=&quot;#cb21-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb21-10&quot;&gt;&lt;a href=&quot;#cb21-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;//写法三&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb21-11&quot;&gt;&lt;a href=&quot;#cb21-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;Verbose create&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb21-12&quot;&gt;&lt;a href=&quot;#cb21-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  Verbose v&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb21-13&quot;&gt;&lt;a href=&quot;#cb21-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;move&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;v&lt;span class=&quot;op&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb21-14&quot;&gt;&lt;a href=&quot;#cb21-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里首推写法一，因为在使用现代编译器的前提下(C++11后)，会默认将这段代码编译成直接在主调函数帧上原地构造对象，忽略了无编译优化条件下的两次移动操作，也就是我们前文提到的 copy elision。&lt;/p&gt;
&lt;p&gt;如果编译器支持，那么针对写法二会进行 NRVO 优化。 &amp;gt; 在C++没有move的时候，很多编译器实现就支持RVO(return value optimization)和NRVO(named return value optimization)。这两种优化用于在返回值的时候避免不必要的copy。在C++11以后，引入了move，move的存在与copy elision交织在一起。在这里直接给出答案，写法一是推荐的，写法二场景需要就推荐，而写法三是不推荐的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;C++17以后，RVO是保证会发生的，因为标准这么定义了。而NRVO并没有保证会发生，但是大部分编译器都会实现。所以在C++17里面，没有copy elision的时候只有一个moved，因为RVO也存在，而这个moved，是由于NRVO没有开启生成的。如果开启优化，那么一个moved也没有，因为NRVO把这个moved给优化掉了。当用prvalue创建对象的时候，直接会构造对象，而不用调用那几个构造函数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;开发层优化&quot;&gt;开发层优化&lt;/h3&gt;
&lt;h4 id=&quot;入参主动转换为右值&quot;&gt;入参主动转换为右值&lt;/h4&gt;
&lt;p&gt;设置函数形参为右值引用，入参强制左值转换为右值，这样可以直接降低入参拷贝产生的性能开销。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb22&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb22-1&quot;&gt;&lt;a href=&quot;#cb22-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb22-2&quot;&gt;&lt;a href=&quot;#cb22-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb22-3&quot;&gt;&lt;a href=&quot;#cb22-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb22-4&quot;&gt;&lt;a href=&quot;#cb22-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; take&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;vector&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;amp;&lt;/span&gt; param_vec&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb22-5&quot;&gt;&lt;a href=&quot;#cb22-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; n &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; vec&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; n &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;// Output: 6,6,6&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb22-6&quot;&gt;&lt;a href=&quot;#cb22-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb22-7&quot;&gt;&lt;a href=&quot;#cb22-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb22-8&quot;&gt;&lt;a href=&quot;#cb22-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb22-9&quot;&gt;&lt;a href=&quot;#cb22-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; take&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;vector&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;amp;&amp;amp;&lt;/span&gt; param_vec&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb22-10&quot;&gt;&lt;a href=&quot;#cb22-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; n &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; vec&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; n &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;// Output: 6,6,6&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb22-11&quot;&gt;&lt;a href=&quot;#cb22-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb22-12&quot;&gt;&lt;a href=&quot;#cb22-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb22-13&quot;&gt;&lt;a href=&quot;#cb22-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb22-14&quot;&gt;&lt;a href=&quot;#cb22-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; main&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb22-15&quot;&gt;&lt;a href=&quot;#cb22-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;vector&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; vec&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb22-16&quot;&gt;&lt;a href=&quot;#cb22-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    take&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;vec&lt;span class=&quot;op&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 入参为左值引用&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb22-17&quot;&gt;&lt;a href=&quot;#cb22-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    take&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;move&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;vec&lt;span class=&quot;op&quot;&gt;));&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// 入参为右值引用&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb22-18&quot;&gt;&lt;a href=&quot;#cb22-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;----------------------------------------&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb22-19&quot;&gt;&lt;a href=&quot;#cb22-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;amp;&lt;/span&gt; n &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; vec&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; n &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// Output nothing.&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于上面的代码段，左值 vec 在 move() 作用下转变为了一个 xvalue 值，并作为函数 take() 的入参，从输出的结果上看，调用 move() 函数前左值 vec 拥有 &lt;code&gt;vector对象 {6, 6, 6}&lt;/code&gt; 的所有权，调用 move() 后， vector 对象所有权转移给了 take() 函数的形参 param_vec ，变量 vec 也就不再拥有对原 vector 对象的所有权了。&lt;/p&gt;
&lt;h2 id=&quot;跋&quot;&gt;跋&lt;/h2&gt;
&lt;p&gt;总结一下，我们首先讨论了 C++ 对象操作中的构造与赋值这两种行为，接着介绍了左值/右值的概念并阐述了细分右值概念的原因，而紧接的右值引用正是在细分右值后的将亡值做文章，借助右值引用概念，我们引入并讨论了本文的核心内容 —— 移动语义。最后，简单介绍了像 Copy elision 这样的现代 C++ 编译器中的编译优化技术，最后展示了笔者学习过程中所记录的几个最佳实践。&lt;/p&gt;
&lt;p&gt;在 C++ 的众多技术(哲学)里，笔者所认为的理解难度与重要程度较大的几个概念有：拷贝与移动语义、RAII 与智能指针、多线程、协程以及模板元编程。后面如果有时间，将另开新的文章，继续其余几个话题的讨论，敬请期待。&lt;del&gt;咕咕咕🕊️&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考引用&quot;&gt;参考&amp;amp;引用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[1] &lt;a href=&quot;https://web.stanford.edu/class/archive/cs/cs106l/cs106l.1184/lectures/lecture14/14_Constructors_and_Assignment.pdf&quot;&gt;CS106L Standard C++ Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[2] &lt;a href=&quot;https://en.cppreference.com/w/cpp/language/copy_elision&quot;&gt;Copy Elision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[3] &lt;a href=&quot;https://en.cppreference.com/w/cpp/language/rule_of_three&quot;&gt;The rule of three/five/zero&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[4] &lt;a href=&quot;https://en.cppreference.com/w/cpp/language/Zero-overhead_principle&quot;&gt;Zero-overhead principle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[5] &lt;a href=&quot;https://en.cppreference.com/w/cpp/language/value_category&quot;&gt;Value categories&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[6] &lt;a href=&quot;https://changkun.de/modern-cpp/pdf/modern-cpp-tutorial-zh-cn.pdf&quot;&gt;《现代 C++ 教程：高速上手 C++11/14/17/20》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[7] &lt;a href=&quot;http://www.sunistudio.com/cppfaq/&quot;&gt;C++ FAQ LITE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[8] &lt;a href=&quot;https://zhuanlan.zhihu.com/p/379566824&quot;&gt;Copy/move elision: C++ 17 vs C++ 11&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
  </entry>
  <entry xml:base="https://lyyl.me/">
    <title type="text">DataBaker·实习总结</title>
    <id>https://lyyl.me/posts/DataBakerInternRecord</id>
    <updated>2021-04-20T00:00:00Z</updated>
    <published>2021-04-20T00:00:00Z</published>
    <link href="https://lyyl.me/posts/DataBakerInternRecord" />
    <author>
      <name>YangLiu</name>
    </author>
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;
  &lt;title&gt;-&lt;/title&gt;
  &lt;style&gt;
    html {
      line-height: 1.5;
      font-family: Georgia, serif;
      font-size: 20px;
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      word-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 1em;
      }
    }
    @media print {
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li &gt; ol, li &gt; ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
      font-size: 85%;
      margin: 0;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;&lt;code&gt;TODO&lt;/code&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
  </entry>
  <entry xml:base="https://lyyl.me/">
    <title type="text">记一次手动编译 Linux 内核</title>
    <id>https://lyyl.me/posts/compile_linux_kernel</id>
    <updated>2021-09-10T00:00:00Z</updated>
    <published>2021-09-10T00:00:00Z</published>
    <link href="https://lyyl.me/posts/compile_linux_kernel" />
    <author>
      <name>YangLiu</name>
    </author>
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;
  &lt;title&gt;-&lt;/title&gt;
  &lt;style&gt;
    html {
      line-height: 1.5;
      font-family: Georgia, serif;
      font-size: 20px;
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      word-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 1em;
      }
    }
    @media print {
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li &gt; ol, li &gt; ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
      font-size: 85%;
      margin: 0;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
    pre &gt; code.sourceCode { white-space: pre; position: relative; }
    pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }
    pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }
    .sourceCode { overflow: visible; }
    code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }
    div.sourceCode { margin: 1em 0; }
    pre.sourceCode { margin: 0; }
    @media screen {
    div.sourceCode { overflow: auto; }
    }
    @media print {
    pre &gt; code.sourceCode { white-space: pre-wrap; }
    pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }
    }
    pre.numberSource code
      { counter-reset: source-line 0; }
    pre.numberSource code &gt; span
      { position: relative; left: -4em; counter-increment: source-line; }
    pre.numberSource code &gt; span &gt; a:first-child::before
      { content: counter(source-line);
        position: relative; left: -1em; text-align: right; vertical-align: baseline;
        border: none; display: inline-block;
        -webkit-touch-callout: none; -webkit-user-select: none;
        -khtml-user-select: none; -moz-user-select: none;
        -ms-user-select: none; user-select: none;
        padding: 0 4px; width: 4em;
        color: #aaaaaa;
      }
    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
    div.sourceCode
      {   }
    @media screen {
    pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }
    }
    code span.al { color: #ff0000; font-weight: bold; } /* Alert */
    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
    code span.at { color: #7d9029; } /* Attribute */
    code span.bn { color: #40a070; } /* BaseN */
    code span.bu { } /* BuiltIn */
    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
    code span.ch { color: #4070a0; } /* Char */
    code span.cn { color: #880000; } /* Constant */
    code span.co { color: #60a0b0; font-style: italic; } /* Comment */
    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
    code span.do { color: #ba2121; font-style: italic; } /* Documentation */
    code span.dt { color: #902000; } /* DataType */
    code span.dv { color: #40a070; } /* DecVal */
    code span.er { color: #ff0000; font-weight: bold; } /* Error */
    code span.ex { } /* Extension */
    code span.fl { color: #40a070; } /* Float */
    code span.fu { color: #06287e; } /* Function */
    code span.im { } /* Import */
    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
    code span.kw { color: #007020; font-weight: bold; } /* Keyword */
    code span.op { color: #666666; } /* Operator */
    code span.ot { color: #007020; } /* Other */
    code span.pp { color: #bc7a00; } /* Preprocessor */
    code span.sc { color: #4070a0; } /* SpecialChar */
    code span.ss { color: #bb6688; } /* SpecialString */
    code span.st { color: #4070a0; } /* String */
    code span.va { color: #19177c; } /* Variable */
    code span.vs { color: #4070a0; } /* VerbatimString */
    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h2 id=&quot;序&quot;&gt;序&lt;/h2&gt;
&lt;p&gt;本学期选了学校开的一门《操作系统设计与分析》，要求同学们手动编译 Linux 内核作为一门课程实验。自己一直有深入学习操作系统的想法，此番初探顺便作个开头。&lt;/p&gt;
&lt;h2 id=&quot;内核组织&quot;&gt;内核组织&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;TODO&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;配置内核&quot;&gt;配置内核&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;TODO&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;编译内核&quot;&gt;编译内核&lt;/h2&gt;
&lt;p&gt;编译的过程挺折腾，因为我用的老电脑( Windows 宿主系统+虚拟机)尝试直接 curl 下载 kernel 源码的时候下载速度极低，于是就在 mac 上下载了 kernel 源码，之后再传到老电脑上解压与编译。 &lt;code&gt;make&lt;/code&gt;后编了一段时间就报错&lt;code&gt;fatal error: linux/netfilter_ipv4/ipt_ECN.h&lt;/code&gt;，在网上找到了这个问题背后的&lt;a href=&quot;https://raspberrypi.stackexchange.com/questions/10126/problems-compiling-kernel-on-raspberry-pi&quot;&gt;原因&lt;/a&gt;。 最后通过在老电脑(case sensitive: 一个对文件命名大小写敏感的操作系统)下载与编译解决了这个问题。&lt;/p&gt;
&lt;h2 id=&quot;坑点槽点&quot;&gt;坑点&amp;amp;槽点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Centos7 自带的 gcc 版本是4.8.5，编译 Linux 内核要求的 gcc 最低版本为4.9.0，因此我们需要手动升级 gcc 编译器。经笔者尝试，通过以下途径可以将 gcc 更新到9.3.1。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;yum&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;-y&lt;/span&gt; install centos-release-scl&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;yum&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;-y&lt;/span&gt; install devtoolset-9-gcc devtoolset-9-gcc-c++ devtoolset-9-binutils&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; “source /opt/rh/devtoolset-9/enable” &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/profile  &lt;span class=&quot;co&quot;&gt;# 修改环境变量&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;source&lt;/span&gt; /etc/profile&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;由于 Centos7 缺少编译要求的相关包，因此在尝试编译&lt;code&gt;bzImage&lt;/code&gt;时，报了&lt;code&gt;No package libssl-dev availab&lt;/code&gt;的错误，我们使用&lt;code&gt;yum install openssl-devel&lt;/code&gt;安装好 openssl 这个包即可。&lt;/li&gt;
&lt;li&gt;同样，由于依赖包的缺失，编译时会出现&lt;code&gt;“fatal error: ‘libelf.h’ file not found”&lt;/code&gt;这样的报错，即缺少头文件&lt;code&gt;libelf.h&lt;/code&gt;，对此使用&lt;code&gt;yum install elfutils-libelf-devel&lt;/code&gt;命令安装上&lt;code&gt;elfutils-libelf-devel&lt;/code&gt;这个包即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;TODO&lt;/code&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
  </entry>
  <entry xml:base="https://lyyl.me/">
    <title type="text">记一次实验</title>
    <id>https://lyyl.me/posts/SentiAnalExprm</id>
    <updated>2020-08-09T00:00:00Z</updated>
    <published>2020-08-09T00:00:00Z</published>
    <link href="https://lyyl.me/posts/SentiAnalExprm" />
    <author>
      <name>YangLiu</name>
    </author>
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;
  &lt;title&gt;-&lt;/title&gt;
  &lt;style&gt;
    html {
      line-height: 1.5;
      font-family: Georgia, serif;
      font-size: 20px;
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      word-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 1em;
      }
    }
    @media print {
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li &gt; ol, li &gt; ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
      font-size: 85%;
      margin: 0;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;pre class=&quot;shell&quot;&gt;&lt;code&gt;我以后可以在GitHub上写日记叻         __  upset = {
      __  __ ____   _____ ___   / /_     &amp;quot;time&amp;quot;: &amp;quot;一天半&amp;quot; ，
     / / / // __ \ / ___// _ \ / __/     &amp;quot;task&amp;quot;: &amp;quot;老师布置的简单学术考核&amp;quot; ，
    / /_/ // /_/ /(__  )/  __// /_       &amp;quot;result&amp;quot;: &amp;quot;没能按时完成&amp;quot; ,
    \__,_// .___//____/ \___/ \__/       &amp;quot;quote&amp;quot;: &amp;quot;我妈:机会留给有准备的人&amp;quot;，
         /_/                             &amp;quot;mood&amp;quot;: &amp;quot;那我一定是那个没有准备好的笨蛋 ☹&amp;quot;
                                          }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src='https://img.shields.io/badge/python-v3.8.3-blue' align='left' /&gt;&lt;img src='https://img.shields.io/badge/jieba-v0.42.1-green' align='left' /&gt;&lt;img src='https://img.shields.io/badge/gensim-v3.8.3-purple' align=&quot;left&quot; /&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h2 id=&quot;实验内容&quot;&gt;实验内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;针对近期社媒上的热点话题「肖战工作室致歉信」，分别从国内主流社媒平台「微博」、「知乎」、「抖音」、「快手」以及「B站」的PC/移动端 web页面爬取该热点事件的相关言论。根据所获取的数据集，藉由数据可视化的途径，分析不同平台用户关于同一事件发言的情感倾向（积极/消极/中性）的差别，并总结各情感倾向下分别表达了哪些观点。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;实验环境&quot;&gt;实验环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;硬件平台： &lt;img src=&quot;https://myblog-1304161589.cos.ap-beijing.myqcloud.com/sentiAnal/%E5%B9%B3%E5%8F%B0.png&quot; alt=&quot;硬件平台&quot; /&gt;&lt;/li&gt;
&lt;li&gt;开发环境：CPython-3.8.3
&lt;ul&gt;
&lt;li&gt;调用库：requests, re, pymongo, jieba, ​ pandas, numpy，gensim 等（详见requirements.txt)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;编辑器：VIM 8.2.0914-0&lt;/li&gt;
&lt;li&gt;调试器：IPython-7.15.0 + Ipdb-0.13.3&lt;/li&gt;
&lt;li&gt;数据库：MonogoDB ( shell version v4.2.6 )&lt;/li&gt;
&lt;li&gt;其它工具：Mozilla Firefox-78.0.2(for Manjaro Linux ×64)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;实验方案&quot;&gt;实验方案&lt;/h2&gt;
&lt;h3 id=&quot;实验思路&quot;&gt;实验思路：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;本次实验选取社媒上的热点话题「肖战工作室致歉信」；&lt;/li&gt;
&lt;li&gt;借助中间人抓包，分析并测试各社媒平台下的目标接口，分别从国内主流社媒平台「微博」、「知乎」、「抖音」、「快手」以及「B站」的PC/移动端的 web页面 爬取该热点事件的相关言论；&lt;/li&gt;
&lt;li&gt;通过 CPython下的 第三方HTTP库「requests」实现正向代理，请求接口，爬取数据；&lt;/li&gt;
&lt;li&gt;根据爬取得到的原始数据，通过 内置模块「re」进行数据预处理对获取的相关言论进行数据预处理后入库（同时将保存为 ./metadata/ 下的 .csv 或 .txt 文件）；&lt;/li&gt;
&lt;li&gt;采用网络上下载的停用词和他人收集的语料，通过第三方库「结巴分词」对语料进行分词。 # 实验方法： ## 数据源的选取：&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot; checked=&quot;&quot; /&gt;
&lt;span style=&quot;color: #4fc3f7&quot;&gt;知乎：&lt;/span&gt;&lt;code&gt;如何看待 7 月 14 日肖战工作室发布的致歉信，承认对粉丝管理上存在疏忽和缺位？]:&lt;/code&gt; &lt;a href=&quot;https://www.zhihu.com/question/406914039&quot;&gt;https://www.zhihu.com/question/406914039&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot; checked=&quot;&quot; /&gt;
&lt;span style=&quot;color: #f48fb1&quot;&gt;B站：&lt;/span&gt;&lt;code&gt;【抵制肖战】数据分析肖战现状，问问肖战粉丝:举世皆敌的感觉如何？:&lt;/code&gt; &lt;a href=&quot;https://www.bilibili.com/video/BV1QZ4y1M7Yt?from=search&amp;amp;seid=2802586105820332741&quot;&gt;https://www.bilibili.com/video/BV1QZ4y1M7Yt?from=search&amp;amp;seid=2802586105820332741&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot; checked=&quot;&quot; /&gt;
&lt;span style=&quot;color: #f4d03f&quot;&gt;微博：&lt;/span&gt;&lt;code&gt;新浪娱乐 #肖战工作室致歉信#:&lt;/code&gt; &lt;a href=&quot;https://weibo.com/1642591402/JbcWS3QUf?type=comment#_rnd1595047751155&quot;&gt;https://weibo.com/1642591402/JbcWS3QUf?type=comment#_rnd1595047751155&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot; /&gt;
&lt;span style=&quot;color: #8e44ad&quot;&gt;抖音： &lt;/span&gt;&lt;code&gt;待完成&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot; /&gt;
&lt;span style=&quot;color: #ff5722&quot;&gt;快手： &lt;/span&gt;&lt;code&gt;待完成&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;爬取模块的设计&quot;&gt;爬取模块的设计：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;目标接口分析：
&lt;ul&gt;
&lt;li&gt;知乎：接口参数构成较简单，且无明显的访问限制，故为提高定向爬取效率，采用多线程爬取。&lt;/li&gt;
&lt;li&gt;B站：接口参数构成较简单，限定接口返回数 &amp;lt;20 即可，生成 url列表 供线程池的调用，以实现多线程爬取操作。&lt;/li&gt;
&lt;li&gt;微博：接口参数构成较复杂，采用通过模拟登陆微博PC端后进行相关接口的爬取操作，微博接口在模拟登陆过程提交的POST请求中的有效载荷携带了用户登陆输入的账号、密码等信息，且该信息通过了 RSA 算法进行加密。需要注意的是，短时间内切勿通过脚本多次尝试模拟登陆微博与下行数据，否则将触发微博的访问频率限制。受限后，仅能通过等待较长时间后才可解封（对于单一 IP 而言）。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;爬取模块的实现：
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot; checked=&quot;&quot; /&gt;
知乎爬虫：同B站爬虫，通过multiprocessing.dummpy的Pool方法实现多线程爬取&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot; checked=&quot;&quot; /&gt;
B站爬虫：B站视频评论区的评论接口对单一 IP 有访问频率限制，若超过其访问限制， 则返回「code: ‘412’」, 「‘message’: 请求被拦截」字段。需等待一段时间后才可解封。&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot; checked=&quot;&quot; /&gt;
微博爬虫：通过模拟登陆的途径，爬取特定微博消息下的所有评论。微博的接口需要通过每一次请求返回得到相应参数，这些参数将用于构造下一次请求的参数体，同时由于微博页面的针对单一 IP 的限流措施，故微博抓取模块采用同步单线程模型实现。&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot; /&gt;
抖音爬虫：&lt;code&gt;待完成&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot; /&gt;
快手爬虫：&lt;code&gt;待完成&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;input type=&quot;checkbox&quot; disabled=&quot;&quot; checked=&quot;&quot; /&gt;
所设计及实现的爬虫将严格遵守相应网站下 .robots.txt 中的规定，且爬取数据仅供学习使用&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;数据预处理的实现&quot;&gt;数据预处理的实现：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在各爬虫将爬取到的数据入库前，先通过 re.findall(‘[e00-fa5]+’) 方法正则匹配中文内容， 再经由 ’ ’.join() 方法将匹配的中文子串拼接为一个字符串，随后入库存储&lt;/li&gt;
&lt;li&gt;对 语料 进行正则匹配，去除其中包含的非中文内容（不足：会误筛英文句词）以及脏数据，使用网络上他人制作的停用词文件，借助「结巴分词」实现语料的虚词、无意义动词、名词的去除后，入库&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;数据挖掘的实现&quot;&gt;数据挖掘的实现：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;词向量构建
&lt;ul&gt;
&lt;li&gt;采用基f于「Distributed Representation」的 word2vec 词嵌入方法，对入库后的干净文本，训练语言模型，在训练的过程中，将用于训练的每个输入词语进行降维操作，每个词都映射成一个唯一的n维向量（本实验采用n=300)，并保存生成的词向量模型。通过 word2vec 来实现词向量的构建&lt;/li&gt;
&lt;li&gt;对数据进行随机切分，生成测试训练集和测试集，生成训练集和测试集计算每段话的向量&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;训练SVM模型
&lt;ul&gt;
&lt;li&gt;对输入语句进行分类，实现情感判断&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;补充：
&lt;ul&gt;
&lt;li&gt;在修复了细小的 BUG 后，所训练的模型最终起到了情感分析的作用，为了对中性层标签提供可靠的语料支持，还手动增加了客观表述的维基中文语料 demo，以实现对中性层的训练。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;数据库存储的设计&quot;&gt;数据库存储的设计：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;由于 MongoDB 在高并发下写入性能优良，且自己所设计的爬虫均采用 基于 Python 多线程编程的模型实现，为 I/O 密集型进程，具备一定的并发量；&lt;/li&gt;
&lt;li&gt;存储的数据对象是以 RESTful 下的 JSON 格式为主，存取对象（包括爬取数据、语料）的事务性较弱，且存取对象基本为 键值对数据，契合MongoDB自带的 BSON 数据类型；&lt;/li&gt;
&lt;li&gt;对于插入操作，嵌套的列表/字典对象较扁平，其中的多数可通过python下的一次遍历O(n)获取到键值对的值；对于查询操作，MongoDB是基于 B树 的索引结构，查询一条数据所需要的平均随机IO次数会比 SQL 依赖的 B+ 树少，故单条数据的查询性能优于 SQL； 综上，采用 MongoDB 作为数据库，而不考虑以构造联表的形式进行存储的关系型数据库；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;数据可视化的实现&quot;&gt;数据可视化的实现:&lt;/h3&gt;
&lt;h4 id=&quot;知乎&quot;&gt;知乎：&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;     - 词云：
    ![知乎-词云图](https://myblog-1304161589.cos.ap-beijing.myqcloud.com/sentiAnal/%E7%9F%A5%E4%B9%8E1.webp#pic_center)
     - 饼图：
    ![知乎-饼图](https://myblog-1304161589.cos.ap-beijing.myqcloud.com/sentiAnal/%E7%9F%A5%E4%B9%8E2.webp#pic_center)&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;微博&quot;&gt;微博：&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;     - 词云：
    ![微博-词云图](https://myblog-1304161589.cos.ap-beijing.myqcloud.com/sentiAnal/%E5%BE%AE%E5%8D%9A1.webp#pic_center)
     - 饼图：
    ![微博-饼图](https://myblog-1304161589.cos.ap-beijing.myqcloud.com/sentiAnal/%E5%BE%AE%E5%8D%9A2.webp#pic_center)&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;b-站&quot;&gt;B 站：&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;     - 词云：
    ![B站-词云图](https://myblog-1304161589.cos.ap-beijing.myqcloud.com/sentiAnal/B%E7%AB%991.webp#pic_center)
     - 饼图：
    ![B站-饼图](https://myblog-1304161589.cos.ap-beijing.myqcloud.com/sentiAnal/B%E7%AB%992.webp#pic_center)&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;对比直方图&quot;&gt;对比直方图：&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;    ![对比直方图](https://myblog-1304161589.cos.ap-beijing.myqcloud.com/sentiAnal/%E7%9B%B4%E6%96%B9%E5%9B%BE.webp#pic_center)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span style=&quot;color:#a8a8a8;&quot;&gt;（注：B站的 negative矩形（红色）被 neutral矩形（黄色）遮挡住了，可以饼图为参考）&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;实验结论&quot;&gt;实验结论&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;通过可视化的饼图得知：关于「肖战工作室致歉」这个话题，在知乎上的相关回答中，持消极意见的人数占其测试集的 50.2%，B站上持消极意见的评论占其测试集的 36.0%，微博上持消极意见的评论占其测试集的 29.2%，因此，可推断：在各自的取样下，知乎上存在更多的网友对该事件持消极态度，B站上则有更多的人对该事件保持中性的态度。&lt;/li&gt;
&lt;li&gt;通过可视化的条形图得知：半数微博用户持消极态度，B站上的用户更多是持中性态度，微博上的用户持积极态度与持消极和中性态度之和的用户人数大致相等。&lt;/li&gt;
&lt;li&gt;通过可视化的词云图得知：知乎上的用户所持的消极态度所表达的主要观点为：「肖战应该道歉」； B站上的用户所持的消极态度所表达的主要观点有：「恶心人」、「肖战必糊」 微博上的用户所持的积极态度所表达的主要观点有：「构建良好网络环境」、「支持肖战」&lt;/li&gt;
&lt;li&gt;综上可猜测：可能由于不同社交平台上用户群体的主要构成不同，体现为不同用户群体对于同一事件看法/态度形成了较大的差异性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;使用指南&quot;&gt;使用指南&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;解压 「中文信息处理-任务三.zip」&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装依赖：&lt;/p&gt;
&lt;pre class=&quot;shell&quot;&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将工作目录切换至该文件夹下，运行 app.py 文件&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;实验相关数据及代码&quot;&gt;实验相关数据及代码&lt;/h2&gt;
&lt;p&gt;详见: ./src ./metadata 目录下的相关文件&lt;/p&gt;
&lt;h2 id=&quot;to-do-list&quot;&gt;To-Do List&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;移动平台流视频社媒评论 的爬取&lt;/li&gt;
&lt;li&gt;代码健壮性和复用性较差，有待重构&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;border-bottom:2px dashed #FF0000;&quot;&gt;&lt;span style=&quot;color:      #FF0000&quot;&gt;自己真的是啥都不懂 /(ㄒoㄒ)/&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;训练语料的选取有待进一步地优化&lt;/li&gt;
&lt;li&gt;训练的结果的准确性未进行校核，情感分析的可靠性存疑！&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;引用参考&quot;&gt;引用参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;文献：
&lt;ul&gt;
&lt;li&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;word2vec Parameter Learning Explained - Xin Rong&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Efficient Estimation of World Representations in Vector Space - Tomas Mikolov, Kai Chen, Greg Corrado, Jeffrey Dean - Google 2013&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;《面向多源社交网络舆情的情感分析算法研究》彭浩,朱望鹏 ,赵丹丹,吴松洋《信息技术》2019年第2期&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;书籍：
&lt;ul&gt;
&lt;li&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;《流畅的Python》p424  Luciano Ramalho[巴西] 著  人民邮电出版社 2017年5月第1版&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;《左手MongoDB，右手Redis》p2  谢乾坤著  电子工业出版社 2019年2月第1版&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;文档和源码:
&lt;ul&gt;
&lt;li&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;https://radimrehurek.com/gensim/auto_examples/tutorials/ run_word2vec.html#sphx-glr-auto-examples-tutorials-run-word2vec-py&lt;/em&gt; &lt;code&gt;《gensim 中文文档》&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;https://www.kancloud.cn/luponu/sklearn-doc-zh/889722&lt;/em&gt; &lt;code&gt;《scikit-learn 中文文档》&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;https://github.com/fxsjy/jieba&lt;/em&gt; &lt;code&gt;《jieba 中文文档》&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;https://github.com/brightmart/nlp_chinese_corpus&lt;/em&gt; &lt;code&gt;实验语料来源&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;https://github.com/Python3Spiders/WeiboSuperSpider&lt;/em&gt; &lt;code&gt;微博爬虫源码参考&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;https://github.com/maowankuiDji/Word2Vec-sentiment&lt;/em&gt; &lt;code&gt;情感分析部分源码参考&amp;amp;语料来源&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
  </entry>
  <entry xml:base="https://lyyl.me/">
    <title type="text">LeetCode Note</title>
    <id>https://lyyl.me/posts/LeetCodeNote</id>
    <updated>2022-07-16T00:00:00Z</updated>
    <published>2022-07-16T00:00:00Z</published>
    <link href="https://lyyl.me/posts/LeetCodeNote" />
    <author>
      <name>YangLiu</name>
    </author>
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;
  &lt;title&gt;-&lt;/title&gt;
  &lt;style&gt;
    html {
      line-height: 1.5;
      font-family: Georgia, serif;
      font-size: 20px;
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      word-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 1em;
      }
    }
    @media print {
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li &gt; ol, li &gt; ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
      font-size: 85%;
      margin: 0;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;xxx&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
  </entry>
  <entry xml:base="https://lyyl.me/">
    <title type="text">让 Py 实例像函数一样可调用</title>
    <id>https://lyyl.me/posts/call_python_instance_like_function</id>
    <updated>2021-10-10T00:00:00Z</updated>
    <published>2021-10-10T00:00:00Z</published>
    <link href="https://lyyl.me/posts/call_python_instance_like_function" />
    <author>
      <name>YangLiu</name>
    </author>
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;
  &lt;title&gt;-&lt;/title&gt;
  &lt;style&gt;
    html {
      line-height: 1.5;
      font-family: Georgia, serif;
      font-size: 20px;
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      word-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 1em;
      }
    }
    @media print {
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li &gt; ol, li &gt; ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
      font-size: 85%;
      margin: 0;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
    pre &gt; code.sourceCode { white-space: pre; position: relative; }
    pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }
    pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }
    .sourceCode { overflow: visible; }
    code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }
    div.sourceCode { margin: 1em 0; }
    pre.sourceCode { margin: 0; }
    @media screen {
    div.sourceCode { overflow: auto; }
    }
    @media print {
    pre &gt; code.sourceCode { white-space: pre-wrap; }
    pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }
    }
    pre.numberSource code
      { counter-reset: source-line 0; }
    pre.numberSource code &gt; span
      { position: relative; left: -4em; counter-increment: source-line; }
    pre.numberSource code &gt; span &gt; a:first-child::before
      { content: counter(source-line);
        position: relative; left: -1em; text-align: right; vertical-align: baseline;
        border: none; display: inline-block;
        -webkit-touch-callout: none; -webkit-user-select: none;
        -khtml-user-select: none; -moz-user-select: none;
        -ms-user-select: none; user-select: none;
        padding: 0 4px; width: 4em;
        color: #aaaaaa;
      }
    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
    div.sourceCode
      {   }
    @media screen {
    pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }
    }
    code span.al { color: #ff0000; font-weight: bold; } /* Alert */
    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
    code span.at { color: #7d9029; } /* Attribute */
    code span.bn { color: #40a070; } /* BaseN */
    code span.bu { } /* BuiltIn */
    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
    code span.ch { color: #4070a0; } /* Char */
    code span.cn { color: #880000; } /* Constant */
    code span.co { color: #60a0b0; font-style: italic; } /* Comment */
    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
    code span.do { color: #ba2121; font-style: italic; } /* Documentation */
    code span.dt { color: #902000; } /* DataType */
    code span.dv { color: #40a070; } /* DecVal */
    code span.er { color: #ff0000; font-weight: bold; } /* Error */
    code span.ex { } /* Extension */
    code span.fl { color: #40a070; } /* Float */
    code span.fu { color: #06287e; } /* Function */
    code span.im { } /* Import */
    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
    code span.kw { color: #007020; font-weight: bold; } /* Keyword */
    code span.op { color: #666666; } /* Operator */
    code span.ot { color: #007020; } /* Other */
    code span.pp { color: #bc7a00; } /* Preprocessor */
    code span.sc { color: #4070a0; } /* SpecialChar */
    code span.ss { color: #bb6688; } /* SpecialString */
    code span.st { color: #4070a0; } /* String */
    code span.va { color: #19177c; } /* Variable */
    code span.vs { color: #4070a0; } /* VerbatimString */
    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;blockquote&gt;
&lt;p&gt;其实很简单，说白了就是自己实现 call 调用方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;昨晚同学提了个问题：为什么由 torch 里的 Sequential 类构造出的对象可以像函数一样直接被调用呢？&lt;/p&gt;
&lt;p&gt;我们知道，函数对象是可以被直接调用的，每一个 Python 函数对象都对应着一个由虚拟机帮我们在底层创建好的 PyFunctionObject 结构体。可是，Sequential 实例应该是一个专门用来包装每层神经网络的容器对象呀，为什么可以把这个容器对象当一个函数用，传进一个 tersor 入参后就可以调用了呢？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://myblog-1304161589.cos.ap-beijing.myqcloud.com/static/main.png&quot; title=&quot;为什么可以调用result？&quot; caption=&quot;🤔&quot; alt=&quot;image load failed&quot; width=&quot;750px&quot; position=&quot;center&quot;&gt;&lt;/p&gt;
&lt;p&gt;打断点调试后，发现在 Sequential 的父类 Module 下出现了这么一行：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://myblog-1304161589.cos.ap-beijing.myqcloud.com/static/__call__.png&quot; title=&quot;torch/nn/modules/module.py:1101&quot; caption=&quot;Module 作为 Sequential 的父类，封装了一些常用的模型方法。&quot; alt=&quot;image load failed&quot; width=&quot;750px&quot; position=&quot;center&quot;&gt;&lt;/p&gt;
&lt;p&gt;第一眼看到 &lt;code&gt;__call__&lt;/code&gt; 的时候内心毫无波澜，默认它就是个类变量。直到调试时单步执行到这儿，回头看了第二眼的时候才想起 &lt;code&gt;__call__&lt;/code&gt; 似乎是哪个 magic method，心想它应该是跟调用语义相关。经过查阅，果真如此，Module 类自己实现了调用方法，因此能让它的实例产生函数的行为，直接可调用。&lt;/p&gt;
&lt;p&gt;值得一提的是，我们可以通过每一个对象都拥有的 built-in method &lt;code&gt;__dir__&lt;/code&gt;【要善用魔法方法(&lt;em&gt;╹▽╹&lt;/em&gt;)】来观察对象拥有的属性，可以发现，只有函数对象和类对象（注意是类对象，不是实例对象）才拥有 &lt;code&gt;__call__&lt;/code&gt; 属性，也就是说，在 Python 里，只有函数和类是唯二的可调用对象。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; A:&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;     &lt;span class=&quot;cf&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; A()&lt;/span&gt;
&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;__main__.A &lt;span class=&quot;bu&quot;&gt;object&lt;/span&gt; at &lt;span class=&quot;bn&quot;&gt;0x7ff620496790&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; A.&lt;span class=&quot;fu&quot;&gt;__call__&lt;/span&gt;()&lt;/span&gt;
&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;__main__.A &lt;span class=&quot;bu&quot;&gt;object&lt;/span&gt; at &lt;span class=&quot;bn&quot;&gt;0x7ff620496fd0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; func():&lt;/span&gt;
&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;     &lt;span class=&quot;cf&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; func()&lt;/span&gt;
&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; func.&lt;span class=&quot;fu&quot;&gt;__call__&lt;/span&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面简单分析一下调用链。&lt;/p&gt;
&lt;p&gt;通过绑定的 &lt;code&gt;_call_impl&lt;/code&gt; 方法，会根据 &lt;code&gt;tracing_state&lt;/code&gt; 参数判断使用哪种方法，当然这里默认选择使用 &lt;code&gt;forward&lt;/code&gt; 函数对象并将其赋给变量 &lt;code&gt;forward_call&lt;/code&gt;，&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://myblog-1304161589.cos.ap-beijing.myqcloud.com/static/_call_impl.png&quot; title=&quot;torch/nn/modules/module.py:1045&quot; caption=&quot;forward_call 实际指向的是 forward 函数对象&quot; alt=&quot;image load failed&quot; width=&quot;750px&quot; position=&quot;center&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后在接下来的条件判断里调用 forward_call 函数对象并返回其结果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://myblog-1304161589.cos.ap-beijing.myqcloud.com/static/forward.png&quot; title=&quot;torch/nn/modules/container.py:137&quot; caption=&quot;实际上调用的是 forward 函数对象&quot; alt=&quot;image load failed&quot; width=&quot;750px&quot; position=&quot;center&quot;&gt;&lt;/p&gt;
&lt;p&gt;结论是，Module 类实现了 &lt;code&gt;__call___&lt;/code&gt; 方法，让继承它的子类 Sequential 的实例也成为了一个函数对象，因而由 Sequential 构造出的对象可以像函数一样被调用。&lt;/p&gt;
&lt;p&gt;至此，同学提出的问题得到了解决。&lt;/p&gt;
&lt;p&gt;实际上，这与 C++ 的函数对象是相似的：让构造出的对象具有函数的行为，可以被调用。这一需求在 C++ 里可以通过重载&lt;code&gt;()&lt;/code&gt;来实现，举个例子：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode cpp&quot;&gt;&lt;code class=&quot;sourceCode cpp&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;#include &lt;/span&gt;&lt;span class=&quot;im&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; A &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    A&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;cf&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; func&lt;span class=&quot;op&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;bu&quot;&gt;std::&lt;/span&gt;cout&lt;span class=&quot;op&quot;&gt; &amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;This is func, it is executed now.&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;()();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;};&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-10&quot;&gt;&lt;a href=&quot;#cb2-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;void&lt;/span&gt; A&lt;span class=&quot;op&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;()()&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&amp;gt;&lt;/span&gt;func&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-11&quot;&gt;&lt;a href=&quot;#cb2-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-12&quot;&gt;&lt;a href=&quot;#cb2-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; main&lt;span class=&quot;op&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;int&lt;/span&gt; argc&lt;span class=&quot;op&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; argv&lt;span class=&quot;op&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-13&quot;&gt;&lt;a href=&quot;#cb2-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    A obj &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; A&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-14&quot;&gt;&lt;a href=&quot;#cb2-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    obj&lt;span class=&quot;op&quot;&gt;();&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;// This is func, it is executed now.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-15&quot;&gt;&lt;a href=&quot;#cb2-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然，Python 里的函数对象也是天然支持调用操作的，我们可以直接在函数对象后加个“()”，直接调用它：&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; func():&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;func_obj &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; func&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;func_obj() &lt;span class=&quot;op&quot;&gt;//&lt;/span&gt; 等价于 func_obj.&lt;span class=&quot;fu&quot;&gt;__call__&lt;/span&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果我们想让自定义类的实例像函数一样可被调用，应当如何实现呢？&lt;/p&gt;
&lt;p&gt;方法很简单，咱们前面讲过，Python 支持运算符的重载(Operator Overload)，而函数调用运算符“()”对应着 &lt;code&gt;__call__()&lt;/code&gt; 这个魔法方法。&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; A:&lt;/span&gt;
&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;__init__&lt;/span&gt;():&lt;/span&gt;
&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;cf&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-5&quot;&gt;&lt;a href=&quot;#cb4-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; func():&lt;/span&gt;
&lt;span id=&quot;cb4-6&quot;&gt;&lt;a href=&quot;#cb4-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;bu&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;This is func, it is executed now.&amp;quot;&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&quot;cb4-7&quot;&gt;&lt;a href=&quot;#cb4-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-8&quot;&gt;&lt;a href=&quot;#cb4-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;__call__&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; func&lt;/span&gt;
&lt;span id=&quot;cb4-9&quot;&gt;&lt;a href=&quot;#cb4-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-10&quot;&gt;&lt;a href=&quot;#cb4-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;&amp;quot;&amp;quot;&amp;quot; 当然，这么写也是等效的&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-11&quot;&gt;&lt;a href=&quot;#cb4-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;    def __call__(self):&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-12&quot;&gt;&lt;a href=&quot;#cb4-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;        return self.func()&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-13&quot;&gt;&lt;a href=&quot;#cb4-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-14&quot;&gt;&lt;a href=&quot;#cb4-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&quot;cb4-15&quot;&gt;&lt;a href=&quot;#cb4-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;:&lt;/span&gt;
&lt;span id=&quot;cb4-16&quot;&gt;&lt;a href=&quot;#cb4-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    obj &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; A()&lt;/span&gt;
&lt;span id=&quot;cb4-17&quot;&gt;&lt;a href=&quot;#cb4-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    obj()  &lt;span class=&quot;co&quot;&gt;# This is func, it is executed now.&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;目标达成~&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;参考&lt;/h2&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://www.geeksforgeeks.org/__call__-in-python/&quot;&gt;__call__ in python - GeeksforGeeks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pytorch.org/docs/stable/generated/torch.nn.Sequential.html&quot;&gt;PyTorch - torch.nn.Sequential&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
  </entry>
  <entry xml:base="https://lyyl.me/">
    <title type="text">MSRA·实习总结</title>
    <id>https://lyyl.me/posts/MSRAInternRecord</id>
    <updated>2022-04-27T00:00:00Z</updated>
    <published>2022-04-27T00:00:00Z</published>
    <link href="https://lyyl.me/posts/MSRAInternRecord" />
    <author>
      <name>YangLiu</name>
    </author>
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;
  &lt;title&gt;-&lt;/title&gt;
  &lt;style&gt;
    html {
      line-height: 1.5;
      font-family: Georgia, serif;
      font-size: 20px;
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      word-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 1em;
      }
    }
    @media print {
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li &gt; ol, li &gt; ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
      font-size: 85%;
      margin: 0;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;&lt;code&gt;TODO&lt;/code&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
  </entry>
  <entry xml:base="https://lyyl.me/">
    <title type="text">Factory 工厂模式</title>
    <id>https://lyyl.me/posts/factory</id>
    <updated>2021-08-15T00:00:00Z</updated>
    <published>2021-08-15T00:00:00Z</published>
    <link href="https://lyyl.me/posts/factory" />
    <author>
      <name>YangLiu</name>
    </author>
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;
  &lt;title&gt;-&lt;/title&gt;
  &lt;style&gt;
    html {
      line-height: 1.5;
      font-family: Georgia, serif;
      font-size: 20px;
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      word-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 1em;
      }
    }
    @media print {
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li &gt; ol, li &gt; ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
      font-size: 85%;
      margin: 0;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;简单工厂类比较好理解，根据入参(e.g. string)让工厂选择创建不同的具体产品类实例，并返回给客户端。&lt;/p&gt;
&lt;p&gt;主要观察工厂方法模式与抽象工厂模式的不同：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&quot;header&quot;&gt;
&lt;th style=&quot;text-align: left;&quot;&gt;工厂方法模式&lt;/th&gt;
&lt;th style=&quot;text-align: left;&quot;&gt;抽象工厂模式&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;针对单个产品等级结构&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;针对多个产品等级结构&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;只有一个抽象产品类&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;具有多个抽象产品类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;抽象产品类可以派生出多个具体产品类&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;抽象产品类可以派生出多个具体产品类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;一个工厂方法类，可以派生出多个具体工厂类&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;一个抽象工厂类，可以派生出多个具体工厂类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;每个具体工厂类只能创建一个具体产品类的实例&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;每个具体工厂类可以创建多个具体产品类的实例&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
  </entry>
  <entry xml:base="https://lyyl.me/">
    <title type="text">DidiGlobal·实习总结</title>
    <id>https://lyyl.me/posts/DidiInternRecord</id>
    <updated>2021-07-30T00:00:00Z</updated>
    <published>2021-07-30T00:00:00Z</published>
    <link href="https://lyyl.me/posts/DidiInternRecord" />
    <author>
      <name>YangLiu</name>
    </author>
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;
  &lt;title&gt;-&lt;/title&gt;
  &lt;style&gt;
    html {
      line-height: 1.5;
      font-family: Georgia, serif;
      font-size: 20px;
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      word-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 1em;
      }
    }
    @media print {
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li &gt; ol, li &gt; ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
      font-size: 85%;
      margin: 0;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;&lt;code&gt;TODO&lt;/code&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
  </entry>
  <entry xml:base="https://lyyl.me/">
    <title type="text">获赠</title>
    <id>https://lyyl.me/posts/GivenTo</id>
    <updated>2019-10-09T00:00:00Z</updated>
    <published>2019-10-09T00:00:00Z</published>
    <link href="https://lyyl.me/posts/GivenTo" />
    <author>
      <name>YangLiu</name>
    </author>
    <content type="html">&lt;!DOCTYPE html&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;
&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot; /&gt;
  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;
  &lt;title&gt;-&lt;/title&gt;
  &lt;style&gt;
    html {
      line-height: 1.5;
      font-family: Georgia, serif;
      font-size: 20px;
      color: #1a1a1a;
      background-color: #fdfdfd;
    }
    body {
      margin: 0 auto;
      max-width: 36em;
      padding-left: 50px;
      padding-right: 50px;
      padding-top: 50px;
      padding-bottom: 50px;
      hyphens: auto;
      word-wrap: break-word;
      text-rendering: optimizeLegibility;
      font-kerning: normal;
    }
    @media (max-width: 600px) {
      body {
        font-size: 0.9em;
        padding: 1em;
      }
    }
    @media print {
      body {
        background-color: transparent;
        color: black;
        font-size: 12pt;
      }
      p, h2, h3 {
        orphans: 3;
        widows: 3;
      }
      h2, h3, h4 {
        page-break-after: avoid;
      }
    }
    p {
      margin: 1em 0;
    }
    a {
      color: #1a1a1a;
    }
    a:visited {
      color: #1a1a1a;
    }
    img {
      max-width: 100%;
    }
    h1, h2, h3, h4, h5, h6 {
      margin-top: 1.4em;
    }
    h5, h6 {
      font-size: 1em;
      font-style: italic;
    }
    h6 {
      font-weight: normal;
    }
    ol, ul {
      padding-left: 1.7em;
      margin-top: 1em;
    }
    li &gt; ol, li &gt; ul {
      margin-top: 0;
    }
    blockquote {
      margin: 1em 0 1em 1.7em;
      padding-left: 1em;
      border-left: 2px solid #e6e6e6;
      color: #606060;
    }
    code {
      font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;
      font-size: 85%;
      margin: 0;
    }
    pre {
      margin: 1em 0;
      overflow: auto;
    }
    pre code {
      padding: 0;
      overflow: visible;
    }
    .sourceCode {
     background-color: transparent;
     overflow: visible;
    }
    hr {
      background-color: #1a1a1a;
      border: none;
      height: 1px;
      margin: 1em 0;
    }
    table {
      margin: 1em 0;
      border-collapse: collapse;
      width: 100%;
      overflow-x: auto;
      display: block;
      font-variant-numeric: lining-nums tabular-nums;
    }
    table caption {
      margin-bottom: 0.75em;
    }
    tbody {
      margin-top: 0.5em;
      border-top: 1px solid #1a1a1a;
      border-bottom: 1px solid #1a1a1a;
    }
    th {
      border-top: 1px solid #1a1a1a;
      padding: 0.25em 0.5em 0.25em 0.5em;
    }
    td {
      padding: 0.125em 0.5em 0.25em 0.5em;
    }
    header {
      margin-bottom: 4em;
      text-align: center;
    }
    #TOC li {
      list-style: none;
    }
    #TOC a:not(:hover) {
      text-decoration: none;
    }
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
  &lt;/style&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;i&gt;
&lt;p align=&quot;left&quot;&gt;
&lt;i&gt;你取之于我，&lt;/i&gt;&lt;br&gt; &lt;i&gt;是我得到的最好的礼物，&lt;/i&gt; &lt;br&gt; &lt;i&gt;当我知道我因施于你，&lt;/i&gt;&lt;br&gt; &lt;i&gt;而快乐。&lt;/i&gt;
&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&lt;i&gt;你明白，&lt;/i&gt;&lt;br&gt; &lt;i&gt;我的给予不是&lt;/i&gt;&lt;br&gt; &lt;i&gt;让你欠我的人情，&lt;/i&gt;&lt;br&gt; &lt;i&gt;而是因为我想活出&lt;/i&gt; &lt;i&gt;对你的爱。&lt;/i&gt;
&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&lt;i&gt;欣然地接受，&lt;/i&gt;&lt;br&gt; &lt;i&gt;或许是最佳的赏赐。&lt;/i&gt;&lt;br&gt; &lt;i&gt;我无法将二者&lt;/i&gt;&lt;br&gt; &lt;i&gt;分开。&lt;/i&gt;
&lt;/p&gt;
&lt;p align=&quot;left&quot;&gt;
&lt;p&gt;&lt;i&gt;当你施与我，&lt;/i&gt;&lt;br&gt; &lt;i&gt;我给你我的接纳。&lt;/i&gt;&lt;br&gt; &lt;i&gt;当你取之于我，&lt;/i&gt;&lt;br&gt; &lt;i&gt;我感激你的赐予。&lt;/i&gt;&lt;/p&gt;
&lt;/p&gt;
&lt;p align=&quot;right&quot;&gt;
——— 歌曲 &lt;b&gt;&lt;i&gt;&lt;span style=&quot;color:green&quot;&gt;《获赠》&lt;/span&gt;&lt;/i&gt;&lt;/b&gt; (1978),&lt;br&gt; 鲁斯·贝勃梅尔 作，&lt;br&gt; 选自唱片集《获赠》
&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
  </entry>
</feed>
